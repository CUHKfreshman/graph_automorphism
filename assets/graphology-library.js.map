{"version":3,"file":"graphology-library.js","sources":["../../../node_modules/fast-deep-equal/es6/index.js","../../utils/is-graph.js","../../utils/is-graph-constructor.js","../../assertions/index.js","../assertions.js","../../utils/defaults.js","../../utils/infer-type.js","../../../node_modules/obliterator/iterator.js","../../../node_modules/mnemonist/utils/typed-arrays.js","../../../node_modules/mnemonist/sparse-map.js","../../../node_modules/mnemonist/sparse-queue-set.js","../../../node_modules/pandemonium/random-index.js","../../utils/getters.js","../../indices/louvain.js","../../communities-louvain/index.js","../communities-louvain.js","../../utils/add-node.js","../../utils/add-edge.js","../../indices/dfs-stack.js","../../components/index.js","../components.js","../../generators/classic/complete.js","../../generators/classic/empty.js","../../generators/classic/ladder.js","../../generators/classic/path.js","../../generators/classic/index.js","../../generators/community/caveman.js","../../generators/community/connected-caveman.js","../../generators/community/index.js","../../generators/random/clusters.js","../../metrics/graph/simple-size.js","../../metrics/graph/density.js","../../generators/random/erdos-renyi.js","../../generators/random/girvan-newman.js","../../generators/random/index.js","../../utils/merge-star.js","../../generators/small/krackhardt-kite.js","../../generators/small/index.js","../../generators/social/florentine-families.js","../../generators/social/karate-club.js","../../generators/social/index.js","../../generators/index.js","../generators.js","../../layout/node_modules/pandemonium/random.js","../../layout/node_modules/pandemonium/shuffle-in-place.js","../../layout/circlepack.js","../../layout/circular.js","../../layout/random.js","../../layout/rotation.js","../../layout/index.js","../layout.js","../layout-force.js","../../layout-forceatlas2/iterate.js","../../layout-forceatlas2/helpers.js","../../layout-forceatlas2/defaults.js","../../layout-forceatlas2/index.js","../layout-forceatlas2.js","../../layout-noverlap/iterate.js","../../layout-noverlap/helpers.js","../../layout-noverlap/defaults.js","../../layout-noverlap/index.js","../layout-noverlap.js","../../metrics/centrality/degree.js","../../../node_modules/obliterator/support.js","../../../node_modules/obliterator/foreach.js","../../../node_modules/mnemonist/utils/iterables.js","../../../node_modules/mnemonist/fixed-deque.js","../../../node_modules/mnemonist/fixed-stack.js","../../../node_modules/mnemonist/utils/comparators.js","../../../node_modules/mnemonist/heap.js","../../indices/neighborhood.js","../../shortest-path/indexed-brandes.js","../../metrics/centrality/betweenness.js","../../../node_modules/mnemonist/sparse-set.js","../../metrics/centrality/closeness.js","../../metrics/centrality/eigenvector.js","../../metrics/centrality/hits.js","../../metrics/centrality/pagerank.js","../../metrics/centrality/index.js","../../../node_modules/mnemonist/set.js","../../metrics/edge/simmelian-strength.js","../../metrics/edge/index.js","../../metrics/graph/extent.js","../../../node_modules/mnemonist/queue.js","../../../node_modules/@yomguithereal/helpers/extend.js","../../shortest-path/unweighted.js","../../metrics/node/eccentricity.js","../../metrics/graph/diameter.js","../../metrics/graph/modularity.js","../../metrics/graph/weighted-size.js","../../metrics/graph/index.js","../../metrics/layout-quality/edge-uniformity.js","../../../node_modules/mnemonist/fixed-reverse-heap.js","../../../node_modules/mnemonist/sort/quick.js","../../../node_modules/mnemonist/kd-tree.js","../../metrics/layout-quality/neighborhood-preservation.js","../../metrics/layout-quality/stress.js","../../metrics/layout-quality/index.js","../../metrics/node/weighted-degree.js","../../metrics/node/index.js","../../metrics/index.js","../metrics.js","../../operators/disjoint-union.js","../../operators/reverse.js","../../operators/subgraph.js","../../operators/to-directed.js","../../operators/to-mixed.js","../../operators/to-multi.js","../../operators/to-simple.js","../../operators/to-undirected.js","../../operators/union.js","../../operators/index.js","../operators.js","../../shortest-path/utils.js","../../shortest-path/dijkstra.js","../../shortest-path/index.js","../shortest-path.js","../../simple-path/node_modules/graphology-utils/is-graph.js","../../simple-path/index.js","../simple-path.js","../../indices/bfs-queue.js","../../traversal/utils.js","../../traversal/bfs.js","../../traversal/dfs.js","../../traversal/index.js","../traversal.js","../../utils/infer-multi.js","../../utils/merge-clique.js","../../utils/merge-cycle.js","../../utils/merge-path.js","../../utils/rename-graph-keys.js","../../utils/update-graph-keys.js","../../utils/index.js","../utils.js","../../layout-force/iterate.js","../../layout-force/helpers.js","../../layout-force/defaults.js","../../layout-force/worker.js","../../layout-forceatlas2/webworker.js","../../layout-forceatlas2/worker.js","../../layout-noverlap/webworker.js","../../layout-noverlap/worker.js","../../gexf/common/helpers.js","../../gexf/common/parser.js","../../gexf/browser/parser.js","../../../node_modules/xml-writer/lib/xml-writer.js","../../../node_modules/xml-writer/index.js","../../gexf/common/writer.js","../../gexf/browser/index.js","../../graphml/common/defaults.js","../../graphml/common/parser.js","../../graphml/browser/parser.js","../../graphml/browser/index.js","../browser.js"],"sourcesContent":["'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n  var envHasBigInt64Array = typeof BigInt64Array !== 'undefined';\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n    if ((a instanceof Map) && (b instanceof Map)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      for (i of a.entries())\n        if (!equal(i[1], b.get(i[0]))) return false;\n      return true;\n    }\n\n    if ((a instanceof Set) && (b instanceof Set)) {\n      if (a.size !== b.size) return false;\n      for (i of a.entries())\n        if (!b.has(i[0])) return false;\n      return true;\n    }\n\n    if (ArrayBuffer.isView(a) && ArrayBuffer.isView(b)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (a[i] !== b[i]) return false;\n      return true;\n    }\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology isGraphConstructor\n * ==============================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology constructor.\n */\n\n/**\n * Checking the value is a graphology constructor.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraphConstructor(value) {\n  return (\n    value !== null &&\n    typeof value === 'function' &&\n    typeof value.prototype === 'object' &&\n    typeof value.prototype.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.prototype.dropNode === 'function'\n  );\n};\n","/**\n * Graphology Assertions\n * ======================\n *\n * Various assertions concerning graphs.\n */\nvar deepEqual = require('fast-deep-equal/es6');\n\n/**\n * Constants.\n */\nvar SIZE = Symbol('size');\n\n/**\n * Helpers.\n */\nfunction areUnorderedCollectionsOfAttributesIdentical(a1, a2) {\n  var l1 = a1.length;\n  var l2 = a2.length;\n\n  if (l1 !== l2) return false;\n\n  var o1, o2;\n  var i, j;\n  var matches = new Set();\n\n  outside: for (i = 0; i < l1; i++) {\n    o1 = a1[i];\n\n    for (j = 0; j < l2; j++) {\n      if (matches.has(j)) continue;\n\n      o2 = a2[j];\n\n      if (deepEqual(o1, o2)) {\n        matches.add(j);\n        continue outside;\n      }\n    }\n\n    return false;\n  }\n\n  return true;\n}\n\nfunction compareNeighborEntries(entries1, entries2) {\n  if (entries1[SIZE] !== entries2[SIZE]) return false;\n\n  for (var k in entries1) {\n    if (!areUnorderedCollectionsOfAttributesIdentical(entries1[k], entries2[k]))\n      return false;\n  }\n\n  return true;\n}\n\nfunction countOutEdges(graph, node) {\n  var counts = {};\n  var c;\n\n  graph.forEachOutEdge(node, function (_e, _ea, _s, target) {\n    c = counts[target] || 0;\n    c++;\n\n    counts[target] = c;\n  });\n\n  return counts;\n}\n\nfunction countAssymetricUndirectedEdges(graph, node) {\n  var counts = {};\n  var c;\n\n  graph.forEachUndirectedEdge(node, function (_e, _ea, source, target) {\n    target = node === source ? target : source;\n\n    if (node > target) return;\n\n    c = counts[target] || 0;\n    c++;\n\n    counts[target] = c;\n  });\n\n  return counts;\n}\n\nfunction collectOutEdges(graph, node) {\n  var entries = {};\n  entries[SIZE] = 0;\n  var c;\n\n  graph.forEachOutEdge(node, function (_e, attr, _s, target) {\n    c = entries[target];\n\n    if (!c) {\n      c = [];\n      entries[SIZE] += 1;\n      entries[target] = c;\n    }\n\n    c.push(attr);\n  });\n\n  return entries;\n}\n\nfunction collectAssymetricUndirectedEdges(graph, node) {\n  var entries = {};\n  entries[SIZE] = 0;\n  var c;\n\n  graph.forEachUndirectedEdge(node, function (_e, attr, source, target) {\n    target = node === source ? target : source;\n\n    if (node > target) return;\n\n    c = entries[target];\n\n    if (!c) {\n      c = [];\n      entries[SIZE] += 1;\n      entries[target] = c;\n    }\n\n    c.push(attr);\n  });\n\n  return entries;\n}\n\n/**\n * Function returning whether the given graphs have the same nodes.\n *\n * @param  {boolean} deep - Whether to perform deep comparisons.\n * @param  {Graph}   G    - First graph.\n * @param  {Graph}   H    - Second graph.\n * @return {boolean}\n */\nfunction abstractHaveSameNodes(deep, G, H) {\n  if (G === H) return true;\n\n  if (G.order !== H.order) return false;\n\n  return G.everyNode(function (node, attr) {\n    if (!H.hasNode(node)) return false;\n\n    if (!deep) return true;\n\n    return deepEqual(attr, H.getNodeAttributes(node));\n  });\n}\n\n/**\n * Function returning whether the given graphs are identical.\n *\n * @param  {boolean} deep    - Whether to perform deep comparison.\n * @param  {boolean} relaxed - Whether to allow graph options to differ.\n * @param  {Graph}   G       - First graph.\n * @param  {Graph}   H       - Second graph.\n * @return {boolean}\n */\nfunction abstractAreSameGraphs(deep, relaxed, G, H) {\n  if (G === H) return true;\n\n  // If two graphs have incompatible settings they cannot be identical\n  if (relaxed) {\n    if (\n      (G.type === 'directed' && H.type === 'undirected') ||\n      (G.type === 'undirected' && H.type === 'directed')\n    )\n      return false;\n  }\n\n  // If two graphs don't have the same settings they cannot be identical\n  else {\n    if (\n      G.type !== H.type ||\n      G.allowSelfLoops !== H.allowSelfLoops ||\n      G.multi !== H.multi\n    )\n      return false;\n  }\n\n  // If two graphs don't have the same number of typed edges, they cannot be identical\n  if (\n    G.directedSize !== H.directedSize ||\n    G.undirectedSize !== H.undirectedSize\n  )\n    return false;\n\n  // If two graphs don't have the same nodes they cannot be identical\n  if (!abstractHaveSameNodes(deep, G, H)) return false;\n\n  var sameDirectedEdges = false;\n  var sameUndirectedEdges = false;\n\n  // In the simple case we don't need refining\n  if (!G.multi && !H.multi) {\n    sameDirectedEdges = G.everyDirectedEdge(function (_e, _ea, source, target) {\n      if (!H.hasDirectedEdge(source, target)) return false;\n\n      if (!deep) return true;\n\n      return deepEqual(\n        G.getDirectedEdgeAttributes(source, target),\n        H.getDirectedEdgeAttributes(source, target)\n      );\n    });\n\n    if (!sameDirectedEdges) return false;\n\n    sameUndirectedEdges = G.everyUndirectedEdge(function (\n      _e,\n      _ea,\n      source,\n      target\n    ) {\n      if (!H.hasUndirectedEdge(source, target)) return false;\n\n      if (!deep) return true;\n\n      return deepEqual(\n        G.getUndirectedEdgeAttributes(source, target),\n        H.getUndirectedEdgeAttributes(source, target)\n      );\n    });\n\n    if (!sameUndirectedEdges) return false;\n  }\n\n  // In the multi case, things are a bit more complex\n  else {\n    var aggregationFunction = deep ? collectOutEdges : countOutEdges;\n    var comparisonFunction = deep ? compareNeighborEntries : deepEqual;\n\n    sameDirectedEdges = G.everyNode(function (node) {\n      var gCounts = aggregationFunction(G, node);\n      var hCounts = aggregationFunction(H, node);\n\n      return comparisonFunction(gCounts, hCounts);\n    });\n\n    if (!sameDirectedEdges) return false;\n\n    aggregationFunction = deep\n      ? collectAssymetricUndirectedEdges\n      : countAssymetricUndirectedEdges;\n\n    sameUndirectedEdges = G.everyNode(function (node) {\n      var gCounts = aggregationFunction(G, node);\n      var hCounts = aggregationFunction(H, node);\n\n      return comparisonFunction(gCounts, hCounts);\n    });\n\n    if (!sameUndirectedEdges) return false;\n  }\n\n  return true;\n}\n\n/**\n * Exporting.\n */\nexports.isGraph = require('graphology-utils/is-graph');\nexports.isGraphConstructor = require('graphology-utils/is-graph-constructor');\nexports.haveSameNodes = abstractHaveSameNodes.bind(null, false);\nexports.haveSameNodesDeep = abstractHaveSameNodes.bind(null, true);\nexports.areSameGraphs = abstractAreSameGraphs.bind(null, false, false);\nexports.areSameGraphsDeep = abstractAreSameGraphs.bind(null, true, false);\nexports.haveSameEdges = abstractAreSameGraphs.bind(null, false, true);\nexports.haveSameEdgesDeep = abstractAreSameGraphs.bind(null, true, true);\n","module.exports = require('graphology-assertions');\n","/**\n * Graphology Defaults\n * ====================\n *\n * Helper function used throughout the standard lib to resolve defaults.\n */\nfunction isLeaf(o) {\n  return (\n    !o ||\n    typeof o !== 'object' ||\n    typeof o === 'function' ||\n    Array.isArray(o) ||\n    o instanceof Set ||\n    o instanceof Map ||\n    o instanceof RegExp ||\n    o instanceof Date\n  );\n}\n\nfunction resolveDefaults(target, defaults) {\n  target = target || {};\n\n  var output = {};\n\n  for (var k in defaults) {\n    var existing = target[k];\n    var def = defaults[k];\n\n    // Recursion\n    if (!isLeaf(def)) {\n      output[k] = resolveDefaults(existing, def);\n\n      continue;\n    }\n\n    // Leaf\n    if (existing === undefined) {\n      output[k] = def;\n    } else {\n      output[k] = existing;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = resolveDefaults;\n","/**\n * Graphology inferType\n * =====================\n *\n * Useful function used to \"guess\" the real type of the given Graph using\n * introspection.\n */\nvar isGraph = require('./is-graph.js');\n\n/**\n * Returning the inferred type of the given graph.\n *\n * @param  {Graph}   graph - Target graph.\n * @return {boolean}\n */\nmodule.exports = function inferType(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-utils/infer-type: expecting a valid graphology instance.'\n    );\n\n  var declaredType = graph.type;\n\n  if (declaredType !== 'mixed') return declaredType;\n\n  if (\n    (graph.directedSize === 0 && graph.undirectedSize === 0) ||\n    (graph.directedSize > 0 && graph.undirectedSize > 0)\n  )\n    return 'mixed';\n\n  if (graph.directedSize > 0) return 'directed';\n\n  return 'undirected';\n};\n","/**\n * Obliterator Iterator Class\n * ===========================\n *\n * Simple class representing the library's iterators.\n */\n\n/**\n * Iterator class.\n *\n * @constructor\n * @param {function} next - Next function.\n */\nfunction Iterator(next) {\n  if (typeof next !== 'function')\n    throw new Error('obliterator/iterator: expecting a function!');\n\n  this.next = next;\n}\n\n/**\n * If symbols are supported, we add `next` to `Symbol.iterator`.\n */\nif (typeof Symbol !== 'undefined')\n  Iterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n\n/**\n * Returning an iterator of the given values.\n *\n * @param  {any...} values - Values.\n * @return {Iterator}\n */\nIterator.of = function () {\n  var args = arguments,\n    l = args.length,\n    i = 0;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: args[i++]};\n  });\n};\n\n/**\n * Returning an empty iterator.\n *\n * @return {Iterator}\n */\nIterator.empty = function () {\n  var iterator = new Iterator(function () {\n    return {done: true};\n  });\n\n  return iterator;\n};\n\n/**\n * Returning an iterator over the given indexed sequence.\n *\n * @param  {string|Array} sequence - Target sequence.\n * @return {Iterator}\n */\nIterator.fromSequence = function (sequence) {\n  var i = 0,\n    l = sequence.length;\n\n  return new Iterator(function () {\n    if (i >= l) return {done: true};\n\n    return {done: false, value: sequence[i++]};\n  });\n};\n\n/**\n * Returning whether the given value is an iterator.\n *\n * @param  {any} value - Value.\n * @return {boolean}\n */\nIterator.is = function (value) {\n  if (value instanceof Iterator) return true;\n\n  return (\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.next === 'function'\n  );\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Iterator;\n","/**\n * Mnemonist Typed Array Helpers\n * ==============================\n *\n * Miscellaneous helpers related to typed arrays.\n */\n\n/**\n * When using an unsigned integer array to store pointers, one might want to\n * choose the optimal word size in regards to the actual numbers of pointers\n * to store.\n *\n * This helpers does just that.\n *\n * @param  {number} size - Expected size of the array to map.\n * @return {TypedArray}\n */\nvar MAX_8BIT_INTEGER = Math.pow(2, 8) - 1,\n    MAX_16BIT_INTEGER = Math.pow(2, 16) - 1,\n    MAX_32BIT_INTEGER = Math.pow(2, 32) - 1;\n\nvar MAX_SIGNED_8BIT_INTEGER = Math.pow(2, 7) - 1,\n    MAX_SIGNED_16BIT_INTEGER = Math.pow(2, 15) - 1,\n    MAX_SIGNED_32BIT_INTEGER = Math.pow(2, 31) - 1;\n\nexports.getPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_8BIT_INTEGER)\n    return Uint8Array;\n\n  if (maxIndex <= MAX_16BIT_INTEGER)\n    return Uint16Array;\n\n  if (maxIndex <= MAX_32BIT_INTEGER)\n    return Uint32Array;\n\n  throw new Error('mnemonist: Pointer Array of size > 4294967295 is not supported.');\n};\n\nexports.getSignedPointerArray = function(size) {\n  var maxIndex = size - 1;\n\n  if (maxIndex <= MAX_SIGNED_8BIT_INTEGER)\n    return Int8Array;\n\n  if (maxIndex <= MAX_SIGNED_16BIT_INTEGER)\n    return Int16Array;\n\n  if (maxIndex <= MAX_SIGNED_32BIT_INTEGER)\n    return Int32Array;\n\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given number.\n *\n * @param  {number} value - Value to test.\n * @return {TypedArrayClass}\n */\nexports.getNumberType = function(value) {\n\n  // <= 32 bits itnteger?\n  if (value === (value | 0)) {\n\n    // Negative\n    if (Math.sign(value) === -1) {\n      if (value <= 127 && value >= -128)\n        return Int8Array;\n\n      if (value <= 32767 && value >= -32768)\n        return Int16Array;\n\n      return Int32Array;\n    }\n    else {\n\n      if (value <= 255)\n        return Uint8Array;\n\n      if (value <= 65535)\n        return Uint16Array;\n\n      return Uint32Array;\n    }\n  }\n\n  // 53 bits integer & floats\n  // NOTE: it's kinda hard to tell whether we could use 32bits or not...\n  return Float64Array;\n};\n\n/**\n * Function returning the minimal type able to represent the given array\n * of JavaScript numbers.\n *\n * @param  {array}    array  - Array to represent.\n * @param  {function} getter - Optional getter.\n * @return {TypedArrayClass}\n */\nvar TYPE_PRIORITY = {\n  Uint8Array: 1,\n  Int8Array: 2,\n  Uint16Array: 3,\n  Int16Array: 4,\n  Uint32Array: 5,\n  Int32Array: 6,\n  Float32Array: 7,\n  Float64Array: 8\n};\n\n// TODO: make this a one-shot for one value\nexports.getMinimalRepresentation = function(array, getter) {\n  var maxType = null,\n      maxPriority = 0,\n      p,\n      t,\n      v,\n      i,\n      l;\n\n  for (i = 0, l = array.length; i < l; i++) {\n    v = getter ? getter(array[i]) : array[i];\n    t = exports.getNumberType(v);\n    p = TYPE_PRIORITY[t.name];\n\n    if (p > maxPriority) {\n      maxPriority = p;\n      maxType = t;\n    }\n  }\n\n  return maxType;\n};\n\n/**\n * Function returning whether the given value is a typed array.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nexports.isTypedArray = function(value) {\n  return typeof ArrayBuffer !== 'undefined' && ArrayBuffer.isView(value);\n};\n\n/**\n * Function used to concat byte arrays.\n *\n * @param  {...ByteArray}\n * @return {ByteArray}\n */\nexports.concat = function() {\n  var length = 0,\n      i,\n      o,\n      l;\n\n  for (i = 0, l = arguments.length; i < l; i++)\n    length += arguments[i].length;\n\n  var array = new (arguments[0].constructor)(length);\n\n  for (i = 0, o = 0; i < l; i++) {\n    array.set(arguments[i], o);\n    o += arguments[i].length;\n  }\n\n  return array;\n};\n\n/**\n * Function used to initialize a byte array of indices.\n *\n * @param  {number}    length - Length of target.\n * @return {ByteArray}\n */\nexports.indices = function(length) {\n  var PointerArray = exports.getPointerArray(length);\n\n  var array = new PointerArray(length);\n\n  for (var i = 0; i < length; i++)\n    array[i] = i;\n\n  return array;\n};\n","/**\n * Mnemonist SparseMap\n * ====================\n *\n * JavaScript sparse map implemented on top of byte arrays.\n *\n * [Reference]: https://research.swtch.com/sparse\n */\nvar Iterator = require('obliterator/iterator'),\n    getPointerArray = require('./utils/typed-arrays.js').getPointerArray;\n\n/**\n * SparseMap.\n *\n * @constructor\n */\nfunction SparseMap(Values, length) {\n  if (arguments.length < 2) {\n    length = Values;\n    Values = Array;\n  }\n\n  var ByteArray = getPointerArray(length);\n\n  // Properties\n  this.size = 0;\n  this.length = length;\n  this.dense = new ByteArray(length);\n  this.sparse = new ByteArray(length);\n  this.vals = new Values(length);\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nSparseMap.prototype.clear = function() {\n  this.size = 0;\n};\n\n/**\n * Method used to check the existence of a member in the set.\n *\n * @param  {number} member - Member to test.\n * @return {SparseMap}\n */\nSparseMap.prototype.has = function(member) {\n  var index = this.sparse[member];\n\n  return (\n    index < this.size &&\n    this.dense[index] === member\n  );\n};\n\n/**\n * Method used to get the value associated to a member in the set.\n *\n * @param  {number} member - Member to test.\n * @return {any}\n */\nSparseMap.prototype.get = function(member) {\n  var index = this.sparse[member];\n\n  if (index < this.size && this.dense[index] === member)\n    return this.vals[index];\n\n  return;\n};\n\n/**\n * Method used to set a value into the map.\n *\n * @param  {number} member - Member to set.\n * @param  {any}    value  - Associated value.\n * @return {SparseMap}\n */\nSparseMap.prototype.set = function(member, value) {\n  var index = this.sparse[member];\n\n  if (index < this.size && this.dense[index] === member) {\n    this.vals[index] = value;\n    return this;\n  }\n\n  this.dense[this.size] = member;\n  this.sparse[member] = this.size;\n  this.vals[this.size] = value;\n  this.size++;\n\n  return this;\n};\n\n/**\n * Method used to remove a member from the set.\n *\n * @param  {number} member - Member to delete.\n * @return {boolean}\n */\nSparseMap.prototype.delete = function(member) {\n  var index = this.sparse[member];\n\n  if (index >= this.size || this.dense[index] !== member)\n    return false;\n\n  index = this.dense[this.size - 1];\n  this.dense[this.sparse[member]] = index;\n  this.sparse[index] = this.sparse[member];\n  this.size--;\n\n  return true;\n};\n\n/**\n * Method used to iterate over the set's values.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nSparseMap.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  for (var i = 0; i < this.size; i++)\n    callback.call(scope, this.vals[i], this.dense[i]);\n};\n\n/**\n * Method used to create an iterator over a set's members.\n *\n * @return {Iterator}\n */\nSparseMap.prototype.keys = function() {\n  var size = this.size,\n      dense = this.dense,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i < size) {\n      var item = dense[i];\n      i++;\n\n      return {\n        value: item\n      };\n    }\n\n    return {\n      done: true\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a set's values.\n *\n * @return {Iterator}\n */\nSparseMap.prototype.values = function() {\n  var size = this.size,\n      values = this.vals,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i < size) {\n      var item = values[i];\n      i++;\n\n      return {\n        value: item\n      };\n    }\n\n    return {\n      done: true\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a set's entries.\n *\n * @return {Iterator}\n */\nSparseMap.prototype.entries = function() {\n  var size = this.size,\n      dense = this.dense,\n      values = this.vals,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i < size) {\n      var item = [dense[i], values[i]];\n      i++;\n\n      return {\n        value: item\n      };\n    }\n\n    return {\n      done: true\n    };\n  });\n};\n\n/**\n * Attaching the #.entries method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  SparseMap.prototype[Symbol.iterator] = SparseMap.prototype.entries;\n\n/**\n * Convenience known methods.\n */\nSparseMap.prototype.inspect = function() {\n  var proxy = new Map();\n\n  for (var i = 0; i < this.size; i++)\n    proxy.set(this.dense[i], this.vals[i]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: SparseMap,\n    enumerable: false\n  });\n\n  proxy.length = this.length;\n\n  if (this.vals.constructor !== Array)\n    proxy.type = this.vals.constructor.name;\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  SparseMap.prototype[Symbol.for('nodejs.util.inspect.custom')] = SparseMap.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = SparseMap;\n","/**\n * Mnemonist SparseQueueSet\n * =========================\n *\n * JavaScript sparse queue set implemented on top of byte arrays.\n *\n * [Reference]: https://research.swtch.com/sparse\n */\nvar Iterator = require('obliterator/iterator'),\n    getPointerArray = require('./utils/typed-arrays.js').getPointerArray;\n\n/**\n * SparseQueueSet.\n *\n * @constructor\n */\nfunction SparseQueueSet(capacity) {\n\n  var ByteArray = getPointerArray(capacity);\n\n  // Properties\n  this.start = 0;\n  this.size = 0;\n  this.capacity = capacity;\n  this.dense = new ByteArray(capacity);\n  this.sparse = new ByteArray(capacity);\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nSparseQueueSet.prototype.clear = function() {\n  this.start = 0;\n  this.size = 0;\n};\n\n/**\n * Method used to check the existence of a member in the queue.\n *\n * @param  {number} member - Member to test.\n * @return {SparseQueueSet}\n */\nSparseQueueSet.prototype.has = function(member) {\n  if (this.size === 0)\n    return false;\n\n  var index = this.sparse[member];\n\n  var inBounds = (\n    index < this.capacity &&\n    (\n      index >= this.start &&\n      index < this.start + this.size\n    ) ||\n    (\n      index < ((this.start + this.size) % this.capacity)\n    )\n  );\n\n  return (\n    inBounds &&\n    this.dense[index] === member\n  );\n};\n\n/**\n * Method used to add a member to the queue.\n *\n * @param  {number} member - Member to add.\n * @return {SparseQueueSet}\n */\nSparseQueueSet.prototype.enqueue = function(member) {\n  var index = this.sparse[member];\n\n  if (this.size !== 0) {\n    var inBounds = (\n      index < this.capacity &&\n      (\n        index >= this.start &&\n        index < this.start + this.size\n      ) ||\n      (\n        index < ((this.start + this.size) % this.capacity)\n      )\n    );\n\n    if (inBounds && this.dense[index] === member)\n      return this;\n  }\n\n  index = (this.start + this.size) % this.capacity;\n\n  this.dense[index] = member;\n  this.sparse[member] = index;\n  this.size++;\n\n  return this;\n};\n\n/**\n * Method used to remove the next member from the queue.\n *\n * @param  {number} member - Member to delete.\n * @return {boolean}\n */\nSparseQueueSet.prototype.dequeue = function() {\n  if (this.size === 0)\n    return;\n\n  var index = this.start;\n\n  this.size--;\n  this.start++;\n\n  if (this.start === this.capacity)\n    this.start = 0;\n\n  var member = this.dense[index];\n\n  this.sparse[member] = this.capacity;\n\n  return member;\n};\n\n/**\n * Method used to iterate over the queue's values.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nSparseQueueSet.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  while (j < l) {\n    callback.call(scope, this.dense[i], j, this);\n    i++;\n    j++;\n\n    if (i === c)\n      i = 0;\n  }\n};\n\n/**\n * Method used to create an iterator over a set's values.\n *\n * @return {Iterator}\n */\nSparseQueueSet.prototype.values = function() {\n  var dense = this.dense,\n      c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  return new Iterator(function() {\n    if (j >= l)\n      return {\n        done: true\n      };\n\n    var value = dense[i];\n\n    i++;\n    j++;\n\n    if (i === c)\n      i = 0;\n\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  SparseQueueSet.prototype[Symbol.iterator] = SparseQueueSet.prototype.values;\n\n/**\n * Convenience known methods.\n */\nSparseQueueSet.prototype.inspect = function() {\n  var proxy = [];\n\n  this.forEach(function(member) {\n    proxy.push(member);\n  });\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: SparseQueueSet,\n    enumerable: false\n  });\n\n  proxy.capacity = this.capacity;\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  SparseQueueSet.prototype[Symbol.for('nodejs.util.inspect.custom')] = SparseQueueSet.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = SparseQueueSet;\n","/**\n * Pandemonium Random Index\n * =========================\n *\n * Random index function.\n */\n\n/**\n * Creating a function returning a random index from the given array.\n *\n * @param  {function} rng - RNG function returning uniform random.\n * @return {function}     - The created function.\n */\nfunction createRandomIndex(rng) {\n  /**\n   * Random function.\n   *\n   * @param  {array|number}  array - Target array or length of the array.\n   * @return {number}\n   */\n  return function (length) {\n    if (typeof length !== 'number') length = length.length;\n\n    return Math.floor(rng() * length);\n  };\n}\n\n/**\n * Default random index using `Math.random`.\n */\nvar randomIndex = createRandomIndex(Math.random);\n\n/**\n * Exporting.\n */\nrandomIndex.createRandomIndex = createRandomIndex;\nmodule.exports = randomIndex;\n","/**\n * Graphology Weight Getter\n * =========================\n *\n * Function creating weight getters.\n */\nfunction coerceWeight(value) {\n  // Ensuring target value is a correct number\n  if (typeof value !== 'number' || isNaN(value)) return 1;\n\n  return value;\n}\n\nfunction createNodeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, node) {\n      return get(graph.getNodeAttributes(node));\n    };\n    getter.fromEntry = function (node, attributes) {\n      return get(attributes);\n    };\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createNodeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, node) {\n      return coerceToDefault(\n        nameOrFunction(node, graph.getNodeAttributes(node))\n      );\n    };\n    getter.fromEntry = function (node, attributes) {\n      return coerceToDefault(nameOrFunction(node, attributes));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nfunction createEdgeValueGetter(nameOrFunction, defaultValue) {\n  var getter = {};\n\n  var coerceToDefault = function (v) {\n    if (typeof v === 'undefined') return defaultValue;\n\n    return v;\n  };\n\n  if (typeof defaultValue === 'function') coerceToDefault = defaultValue;\n\n  var get = function (attributes) {\n    return coerceToDefault(attributes[nameOrFunction]);\n  };\n\n  var returnDefault = function () {\n    return coerceToDefault(undefined);\n  };\n\n  if (typeof nameOrFunction === 'string') {\n    getter.fromAttributes = get;\n    getter.fromGraph = function (graph, edge) {\n      return get(graph.getEdgeAttributes(edge));\n    };\n    getter.fromEntry = function (edge, attributes) {\n      return get(attributes);\n    };\n    getter.fromPartialEntry = getter.fromEntry;\n    getter.fromMinimalEntry = getter.fromEntry;\n  } else if (typeof nameOrFunction === 'function') {\n    getter.fromAttributes = function () {\n      throw new Error(\n        'graphology-utils/getters/createEdgeValueGetter: irrelevant usage.'\n      );\n    };\n    getter.fromGraph = function (graph, edge) {\n      // TODO: we can do better, check #310\n      var extremities = graph.extremities(edge);\n      return coerceToDefault(\n        nameOrFunction(\n          edge,\n          graph.getEdgeAttributes(edge),\n          extremities[0],\n          extremities[1],\n          graph.getNodeAttributes(extremities[0]),\n          graph.getNodeAttributes(extremities[1]),\n          graph.isUndirected(edge)\n        )\n      );\n    };\n    getter.fromEntry = function (e, a, s, t, sa, ta, u) {\n      return coerceToDefault(nameOrFunction(e, a, s, t, sa, ta, u));\n    };\n    getter.fromPartialEntry = function (e, a, s, t) {\n      return coerceToDefault(nameOrFunction(e, a, s, t));\n    };\n    getter.fromMinimalEntry = function (e, a) {\n      return coerceToDefault(nameOrFunction(e, a));\n    };\n  } else {\n    getter.fromAttributes = returnDefault;\n    getter.fromGraph = returnDefault;\n    getter.fromEntry = returnDefault;\n    getter.fromMinimalEntry = returnDefault;\n  }\n\n  return getter;\n}\n\nexports.createNodeValueGetter = createNodeValueGetter;\nexports.createEdgeValueGetter = createEdgeValueGetter;\nexports.createEdgeWeightGetter = function (name) {\n  return createEdgeValueGetter(name, coerceWeight);\n};\n","/**\n * Graphology Louvain Indices\n * ===========================\n *\n * Undirected & Directed Louvain Index structures used to compute the famous\n * Louvain community detection algorithm.\n *\n * Most of the rationale is explained in `graphology-metrics`.\n *\n * Note that this index shares a lot with the classic Union-Find data\n * structure. It also relies on a unused id stack to make sure we can\n * increase again the number of communites when isolating nodes.\n *\n * [Articles]\n * M. E. J. Newman, « Modularity and community structure in networks »,\n * Proc. Natl. Acad. Sci. USA, vol. 103, no 23, 2006, p. 8577–8582\n * https://dx.doi.org/10.1073%2Fpnas.0601602103\n *\n * Newman, M. E. J. « Community detection in networks: Modularity optimization\n * and maximum likelihood are equivalent ». Physical Review E, vol. 94, no 5,\n * novembre 2016, p. 052315. arXiv.org, doi:10.1103/PhysRevE.94.052315.\n * https://arxiv.org/pdf/1606.02319.pdf\n *\n * Blondel, Vincent D., et al. « Fast unfolding of communities in large\n * networks ». Journal of Statistical Mechanics: Theory and Experiment,\n * vol. 2008, no 10, octobre 2008, p. P10008. DOI.org (Crossref),\n * doi:10.1088/1742-5468/2008/10/P10008.\n * https://arxiv.org/pdf/0803.0476.pdf\n *\n * Nicolas Dugué, Anthony Perez. Directed Louvain: maximizing modularity in\n * directed networks. [Research Report] Université d’Orléans. 2015. hal-01231784\n * https://hal.archives-ouvertes.fr/hal-01231784\n *\n * R. Lambiotte, J.-C. Delvenne and M. Barahona. Laplacian Dynamics and\n * Multiscale Modular Structure in Networks,\n * doi:10.1109/TNSE.2015.2391998.\n * https://arxiv.org/abs/0812.1770\n *\n * [Latex]:\n *\n * Undirected Case:\n * ----------------\n *\n * \\Delta Q=\\bigg{[}\\frac{\\sum^{c}_{in}-(2d_{c}+l)}{2m}-\\bigg{(}\\frac{\\sum^{c}_{tot}-(d+l)}{2m}\\bigg{)}^{2}+\\frac{\\sum^{t}_{in}+(2d_{t}+l)}{2m}-\\bigg{(}\\frac{\\sum^{t}_{tot}+(d+l)}{2m}\\bigg{)}^{2}\\bigg{]}-\\bigg{[}\\frac{\\sum^{c}_{in}}{2m}-\\bigg{(}\\frac{\\sum^{c}_{tot}}{2m}\\bigg{)}^{2}+\\frac{\\sum^{t}_{in}}{2m}-\\bigg{(}\\frac{\\sum^{t}_{tot}}{2m}\\bigg{)}^{2}\\bigg{]}\n * \\Delta Q=\\frac{d_{t}-d_{c}}{m}+\\frac{l\\sum^{c}_{tot}+d\\sum^{c}_{tot}-d^{2}-l^{2}-2dl-l\\sum^{t}_{tot}-d\\sum^{t}_{tot}}{2m^{2}}\n * \\Delta Q=\\frac{d_{t}-d_{c}}{m}+\\frac{(l+d)\\sum^{c}_{tot}-d^{2}-l^{2}-2dl-(l+d)\\sum^{t}_{tot}}{2m^{2}}\n *\n * Directed Case:\n * --------------\n * \\Delta Q_d=\\bigg{[}\\frac{\\sum^{c}_{in}-(d_{c.in}+d_{c.out}+l)}{m}-\\frac{(\\sum^{c}_{tot.in}-(d_{in}+l))(\\sum^{c}_{tot.out}-(d_{out}+l))}{m^{2}}+\\frac{\\sum^{t}_{in}+(d_{t.in}+d_{t.out}+l)}{m}-\\frac{(\\sum^{t}_{tot.in}+(d_{in}+l))(\\sum^{t}_{tot.out}+(d_{out}+l))}{m^{2}}\\bigg{]}-\\bigg{[}\\frac{\\sum^{c}_{in}}{m}-\\frac{\\sum^{c}_{tot.in}\\sum^{c}_{tot.out}}{m^{2}}+\\frac{\\sum^{t}_{in}}{m}-\\frac{\\sum^{t}_{tot.in}\\sum^{t}_{tot.out}}{m^{2}}\\bigg{]}\n *\n * [Notes]:\n * Louvain is a bit unclear on this but delta computation are not derived from\n * Q1 - Q2 but rather between Q when considered node is isolated in its own\n * community versus Q with this node in target community. This is in fact\n * an optimization because the subtract part is constant in the formulae and\n * does not affect delta comparisons.\n */\nvar typed = require('mnemonist/utils/typed-arrays');\nvar resolveDefaults = require('graphology-utils/defaults');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\n\nvar INSPECT = Symbol.for('nodejs.util.inspect.custom');\n\nvar DEFAULTS = {\n  getEdgeWeight: 'weight',\n  keepDendrogram: false,\n  resolution: 1\n};\n\nfunction UndirectedLouvainIndex(graph, options) {\n  // Solving options\n  options = resolveDefaults(options, DEFAULTS);\n\n  var resolution = options.resolution;\n\n  // Weight getters\n  var getEdgeWeight = createEdgeWeightGetter(options.getEdgeWeight).fromEntry;\n\n  // Building the index\n  var size = (graph.size - graph.selfLoopCount) * 2;\n\n  var NeighborhoodPointerArray = typed.getPointerArray(size);\n  var NodesPointerArray = typed.getPointerArray(graph.order + 1);\n\n  // NOTE: this memory optimization can yield overflow deopt when computing deltas\n  var WeightsArray = options.getEdgeWeight\n    ? Float64Array\n    : typed.getPointerArray(graph.size * 2);\n\n  // Properties\n  this.C = graph.order;\n  this.M = 0;\n  this.E = size;\n  this.U = 0;\n  this.resolution = resolution;\n  this.level = 0;\n  this.graph = graph;\n  this.nodes = new Array(graph.order);\n  this.keepDendrogram = options.keepDendrogram;\n\n  // Edge-level\n  this.neighborhood = new NodesPointerArray(size);\n  this.weights = new WeightsArray(size);\n\n  // Node-level\n  this.loops = new WeightsArray(graph.order);\n  this.starts = new NeighborhoodPointerArray(graph.order + 1);\n  this.belongings = new NodesPointerArray(graph.order);\n  this.dendrogram = [];\n  this.mapping = null;\n\n  // Community-level\n  this.counts = new NodesPointerArray(graph.order);\n  this.unused = new NodesPointerArray(graph.order);\n  this.totalWeights = new WeightsArray(graph.order);\n\n  var ids = {};\n\n  var weight;\n\n  var i = 0,\n    n = 0;\n\n  var self = this;\n\n  graph.forEachNode(function (node) {\n    self.nodes[i] = node;\n\n    // Node map to index\n    ids[node] = i;\n\n    // Initializing starts\n    n += graph.undirectedDegreeWithoutSelfLoops(node);\n    self.starts[i] = n;\n\n    // Belongings\n    self.belongings[i] = i;\n    self.counts[i] = 1;\n    i++;\n  });\n\n  // Single sweep over the edges\n  graph.forEachEdge(function (edge, attr, source, target, sa, ta, u) {\n    weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    source = ids[source];\n    target = ids[target];\n\n    self.M += weight;\n\n    // Self loop?\n    if (source === target) {\n      self.totalWeights[source] += weight * 2;\n      self.loops[source] = weight * 2;\n    } else {\n      self.totalWeights[source] += weight;\n      self.totalWeights[target] += weight;\n\n      var startSource = --self.starts[source],\n        startTarget = --self.starts[target];\n\n      self.neighborhood[startSource] = target;\n      self.neighborhood[startTarget] = source;\n\n      self.weights[startSource] = weight;\n      self.weights[startTarget] = weight;\n    }\n  });\n\n  this.starts[i] = this.E;\n\n  if (this.keepDendrogram) this.dendrogram.push(this.belongings.slice());\n  else this.mapping = this.belongings.slice();\n}\n\nUndirectedLouvainIndex.prototype.isolate = function (i, degree) {\n  var currentCommunity = this.belongings[i];\n\n  // The node is already isolated\n  if (this.counts[currentCommunity] === 1) return currentCommunity;\n\n  var newCommunity = this.unused[--this.U];\n\n  var loops = this.loops[i];\n\n  this.totalWeights[currentCommunity] -= degree + loops;\n  this.totalWeights[newCommunity] += degree + loops;\n\n  this.belongings[i] = newCommunity;\n\n  this.counts[currentCommunity]--;\n  this.counts[newCommunity]++;\n\n  return newCommunity;\n};\n\nUndirectedLouvainIndex.prototype.move = function (i, degree, targetCommunity) {\n  var currentCommunity = this.belongings[i],\n    loops = this.loops[i];\n\n  this.totalWeights[currentCommunity] -= degree + loops;\n  this.totalWeights[targetCommunity] += degree + loops;\n\n  this.belongings[i] = targetCommunity;\n\n  var nowEmpty = this.counts[currentCommunity]-- === 1;\n  this.counts[targetCommunity]++;\n\n  if (nowEmpty) this.unused[this.U++] = currentCommunity;\n};\n\nUndirectedLouvainIndex.prototype.computeNodeDegree = function (i) {\n  var o, l, weight;\n\n  var degree = 0;\n\n  for (o = this.starts[i], l = this.starts[i + 1]; o < l; o++) {\n    weight = this.weights[o];\n\n    degree += weight;\n  }\n\n  return degree;\n};\n\nUndirectedLouvainIndex.prototype.expensiveIsolate = function (i) {\n  var degree = this.computeNodeDegree(i);\n  return this.isolate(i, degree);\n};\n\nUndirectedLouvainIndex.prototype.expensiveMove = function (i, ci) {\n  var degree = this.computeNodeDegree(i);\n  this.move(i, degree, ci);\n};\n\nUndirectedLouvainIndex.prototype.zoomOut = function () {\n  var inducedGraph = new Array(this.C - this.U),\n    newLabels = {};\n\n  var N = this.nodes.length;\n\n  var C = 0,\n    E = 0;\n\n  var i, j, l, m, n, ci, cj, data, adj;\n\n  // Renumbering communities\n  for (i = 0, l = this.C; i < l; i++) {\n    ci = this.belongings[i];\n\n    if (!(ci in newLabels)) {\n      newLabels[ci] = C;\n      inducedGraph[C] = {\n        adj: {},\n        totalWeights: this.totalWeights[ci],\n        internalWeights: 0\n      };\n      C++;\n    }\n\n    // We do this to otpimize the number of lookups in next loop\n    this.belongings[i] = newLabels[ci];\n  }\n\n  // Actualizing dendrogram\n  var currentLevel, nextLevel;\n\n  if (this.keepDendrogram) {\n    currentLevel = this.dendrogram[this.level];\n    nextLevel = new (typed.getPointerArray(C))(N);\n\n    for (i = 0; i < N; i++) nextLevel[i] = this.belongings[currentLevel[i]];\n\n    this.dendrogram.push(nextLevel);\n  } else {\n    for (i = 0; i < N; i++) this.mapping[i] = this.belongings[this.mapping[i]];\n  }\n\n  // Building induced graph matrix\n  for (i = 0, l = this.C; i < l; i++) {\n    ci = this.belongings[i];\n\n    data = inducedGraph[ci];\n    adj = data.adj;\n    data.internalWeights += this.loops[i];\n\n    for (j = this.starts[i], m = this.starts[i + 1]; j < m; j++) {\n      n = this.neighborhood[j];\n      cj = this.belongings[n];\n\n      if (ci === cj) {\n        data.internalWeights += this.weights[j];\n        continue;\n      }\n\n      if (!(cj in adj)) adj[cj] = 0;\n\n      adj[cj] += this.weights[j];\n    }\n  }\n\n  // Rewriting neighborhood\n  this.C = C;\n\n  n = 0;\n\n  for (ci = 0; ci < C; ci++) {\n    data = inducedGraph[ci];\n    adj = data.adj;\n\n    ci = +ci;\n\n    this.totalWeights[ci] = data.totalWeights;\n    this.loops[ci] = data.internalWeights;\n    this.counts[ci] = 1;\n\n    this.starts[ci] = n;\n    this.belongings[ci] = ci;\n\n    for (cj in adj) {\n      this.neighborhood[n] = +cj;\n      this.weights[n] = adj[cj];\n\n      E++;\n      n++;\n    }\n  }\n\n  this.starts[C] = E;\n\n  this.E = E;\n  this.U = 0;\n  this.level++;\n\n  return newLabels;\n};\n\nUndirectedLouvainIndex.prototype.modularity = function () {\n  var ci, cj, i, j, m;\n\n  var Q = 0;\n  var M2 = this.M * 2;\n  var internalWeights = new Float64Array(this.C);\n\n  for (i = 0; i < this.C; i++) {\n    ci = this.belongings[i];\n    internalWeights[ci] += this.loops[i];\n\n    for (j = this.starts[i], m = this.starts[i + 1]; j < m; j++) {\n      cj = this.belongings[this.neighborhood[j]];\n\n      if (ci !== cj) continue;\n\n      internalWeights[ci] += this.weights[j];\n    }\n  }\n\n  for (i = 0; i < this.C; i++) {\n    Q +=\n      internalWeights[i] / M2 -\n      Math.pow(this.totalWeights[i] / M2, 2) * this.resolution;\n  }\n\n  return Q;\n};\n\nUndirectedLouvainIndex.prototype.delta = function (\n  i,\n  degree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalWeight = this.totalWeights[targetCommunity];\n\n  degree += this.loops[i];\n\n  return (\n    targetCommunityDegree / M - // NOTE: formula is a bit different here because targetCommunityDegree is passed without * 2\n    (targetCommunityTotalWeight * degree * this.resolution) / (2 * M * M)\n  );\n};\n\nUndirectedLouvainIndex.prototype.deltaWithOwnCommunity = function (\n  i,\n  degree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalWeight = this.totalWeights[targetCommunity];\n\n  degree += this.loops[i];\n\n  return (\n    targetCommunityDegree / M - // NOTE: formula is a bit different here because targetCommunityDegree is passed without * 2\n    ((targetCommunityTotalWeight - degree) * degree * this.resolution) /\n      (2 * M * M)\n  );\n};\n\n// NOTE: this is just a faster but equivalent version of #.delta\n// It is just off by a constant factor and is just faster to compute\nUndirectedLouvainIndex.prototype.fastDelta = function (\n  i,\n  degree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalWeight = this.totalWeights[targetCommunity];\n\n  degree += this.loops[i];\n\n  return (\n    targetCommunityDegree -\n    (degree * targetCommunityTotalWeight * this.resolution) / (2 * M)\n  );\n};\n\nUndirectedLouvainIndex.prototype.fastDeltaWithOwnCommunity = function (\n  i,\n  degree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalWeight = this.totalWeights[targetCommunity];\n\n  degree += this.loops[i];\n\n  return (\n    targetCommunityDegree -\n    (degree * (targetCommunityTotalWeight - degree) * this.resolution) / (2 * M)\n  );\n};\n\nUndirectedLouvainIndex.prototype.bounds = function (i) {\n  return [this.starts[i], this.starts[i + 1]];\n};\n\nUndirectedLouvainIndex.prototype.project = function () {\n  var self = this;\n\n  var projection = {};\n\n  self.nodes.slice(0, this.C).forEach(function (node, i) {\n    projection[node] = Array.from(\n      self.neighborhood.slice(self.starts[i], self.starts[i + 1])\n    ).map(function (j) {\n      return self.nodes[j];\n    });\n  });\n\n  return projection;\n};\n\nUndirectedLouvainIndex.prototype.collect = function (level) {\n  if (arguments.length < 1) level = this.level;\n\n  var o = {};\n\n  var mapping = this.keepDendrogram ? this.dendrogram[level] : this.mapping;\n\n  var i, l;\n\n  for (i = 0, l = mapping.length; i < l; i++) o[this.nodes[i]] = mapping[i];\n\n  return o;\n};\n\nUndirectedLouvainIndex.prototype.assign = function (prop, level) {\n  if (arguments.length < 2) level = this.level;\n\n  var mapping = this.keepDendrogram ? this.dendrogram[level] : this.mapping;\n\n  var i, l;\n\n  for (i = 0, l = mapping.length; i < l; i++)\n    this.graph.setNodeAttribute(this.nodes[i], prop, mapping[i]);\n};\n\nUndirectedLouvainIndex.prototype[INSPECT] = function () {\n  var proxy = {};\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: UndirectedLouvainIndex,\n    enumerable: false\n  });\n\n  proxy.C = this.C;\n  proxy.M = this.M;\n  proxy.E = this.E;\n  proxy.U = this.U;\n  proxy.resolution = this.resolution;\n  proxy.level = this.level;\n  proxy.nodes = this.nodes;\n  proxy.starts = this.starts.slice(0, proxy.C + 1);\n\n  var eTruncated = ['neighborhood', 'weights'];\n  var cTruncated = ['counts', 'loops', 'belongings', 'totalWeights'];\n\n  var self = this;\n\n  eTruncated.forEach(function (key) {\n    proxy[key] = self[key].slice(0, proxy.E);\n  });\n\n  cTruncated.forEach(function (key) {\n    proxy[key] = self[key].slice(0, proxy.C);\n  });\n\n  proxy.unused = this.unused.slice(0, this.U);\n\n  if (this.keepDendrogram) proxy.dendrogram = this.dendrogram;\n  else proxy.mapping = this.mapping;\n\n  return proxy;\n};\n\nfunction DirectedLouvainIndex(graph, options) {\n  // Solving options\n  options = resolveDefaults(options, DEFAULTS);\n\n  var resolution = options.resolution;\n\n  // Weight getters\n  var getEdgeWeight = createEdgeWeightGetter(options.getEdgeWeight).fromEntry;\n\n  // Building the index\n  var size = (graph.size - graph.selfLoopCount) * 2;\n\n  var NeighborhoodPointerArray = typed.getPointerArray(size);\n  var NodesPointerArray = typed.getPointerArray(graph.order + 1);\n\n  // NOTE: this memory optimization can yield overflow deopt when computing deltas\n  var WeightsArray = options.getEdgeWeight\n    ? Float64Array\n    : typed.getPointerArray(graph.size * 2);\n\n  // Properties\n  this.C = graph.order;\n  this.M = 0;\n  this.E = size;\n  this.U = 0;\n  this.resolution = resolution;\n  this.level = 0;\n  this.graph = graph;\n  this.nodes = new Array(graph.order);\n  this.keepDendrogram = options.keepDendrogram;\n\n  // Edge-level\n  // NOTE: edges are stored out then in, in this order\n  this.neighborhood = new NodesPointerArray(size);\n  this.weights = new WeightsArray(size);\n\n  // Node-level\n  this.loops = new WeightsArray(graph.order);\n  this.starts = new NeighborhoodPointerArray(graph.order + 1);\n  this.offsets = new NeighborhoodPointerArray(graph.order);\n  this.belongings = new NodesPointerArray(graph.order);\n  this.dendrogram = [];\n\n  // Community-level\n  this.counts = new NodesPointerArray(graph.order);\n  this.unused = new NodesPointerArray(graph.order);\n  this.totalInWeights = new WeightsArray(graph.order);\n  this.totalOutWeights = new WeightsArray(graph.order);\n\n  var ids = {};\n\n  var weight;\n\n  var i = 0,\n    n = 0;\n\n  var self = this;\n\n  graph.forEachNode(function (node) {\n    self.nodes[i] = node;\n\n    // Node map to index\n    ids[node] = i;\n\n    // Initializing starts & offsets\n    n += graph.outDegreeWithoutSelfLoops(node);\n    self.starts[i] = n;\n\n    n += graph.inDegreeWithoutSelfLoops(node);\n    self.offsets[i] = n;\n\n    // Belongings\n    self.belongings[i] = i;\n    self.counts[i] = 1;\n    i++;\n  });\n\n  // Single sweep over the edges\n  graph.forEachEdge(function (edge, attr, source, target, sa, ta, u) {\n    weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    source = ids[source];\n    target = ids[target];\n\n    self.M += weight;\n\n    // Self loop?\n    if (source === target) {\n      self.loops[source] += weight;\n      self.totalInWeights[source] += weight;\n      self.totalOutWeights[source] += weight;\n    } else {\n      self.totalOutWeights[source] += weight;\n      self.totalInWeights[target] += weight;\n\n      var startSource = --self.starts[source],\n        startTarget = --self.offsets[target];\n\n      self.neighborhood[startSource] = target;\n      self.neighborhood[startTarget] = source;\n\n      self.weights[startSource] = weight;\n      self.weights[startTarget] = weight;\n    }\n  });\n\n  this.starts[i] = this.E;\n\n  if (this.keepDendrogram) this.dendrogram.push(this.belongings.slice());\n  else this.mapping = this.belongings.slice();\n}\n\nDirectedLouvainIndex.prototype.bounds = UndirectedLouvainIndex.prototype.bounds;\n\nDirectedLouvainIndex.prototype.inBounds = function (i) {\n  return [this.offsets[i], this.starts[i + 1]];\n};\n\nDirectedLouvainIndex.prototype.outBounds = function (i) {\n  return [this.starts[i], this.offsets[i]];\n};\n\nDirectedLouvainIndex.prototype.project =\n  UndirectedLouvainIndex.prototype.project;\n\nDirectedLouvainIndex.prototype.projectIn = function () {\n  var self = this;\n\n  var projection = {};\n\n  self.nodes.slice(0, this.C).forEach(function (node, i) {\n    projection[node] = Array.from(\n      self.neighborhood.slice(self.offsets[i], self.starts[i + 1])\n    ).map(function (j) {\n      return self.nodes[j];\n    });\n  });\n\n  return projection;\n};\n\nDirectedLouvainIndex.prototype.projectOut = function () {\n  var self = this;\n\n  var projection = {};\n\n  self.nodes.slice(0, this.C).forEach(function (node, i) {\n    projection[node] = Array.from(\n      self.neighborhood.slice(self.starts[i], self.offsets[i])\n    ).map(function (j) {\n      return self.nodes[j];\n    });\n  });\n\n  return projection;\n};\n\nDirectedLouvainIndex.prototype.isolate = function (i, inDegree, outDegree) {\n  var currentCommunity = this.belongings[i];\n\n  // The node is already isolated\n  if (this.counts[currentCommunity] === 1) return currentCommunity;\n\n  var newCommunity = this.unused[--this.U];\n\n  var loops = this.loops[i];\n\n  this.totalInWeights[currentCommunity] -= inDegree + loops;\n  this.totalInWeights[newCommunity] += inDegree + loops;\n\n  this.totalOutWeights[currentCommunity] -= outDegree + loops;\n  this.totalOutWeights[newCommunity] += outDegree + loops;\n\n  this.belongings[i] = newCommunity;\n\n  this.counts[currentCommunity]--;\n  this.counts[newCommunity]++;\n\n  return newCommunity;\n};\n\nDirectedLouvainIndex.prototype.move = function (\n  i,\n  inDegree,\n  outDegree,\n  targetCommunity\n) {\n  var currentCommunity = this.belongings[i],\n    loops = this.loops[i];\n\n  this.totalInWeights[currentCommunity] -= inDegree + loops;\n  this.totalInWeights[targetCommunity] += inDegree + loops;\n\n  this.totalOutWeights[currentCommunity] -= outDegree + loops;\n  this.totalOutWeights[targetCommunity] += outDegree + loops;\n\n  this.belongings[i] = targetCommunity;\n\n  var nowEmpty = this.counts[currentCommunity]-- === 1;\n  this.counts[targetCommunity]++;\n\n  if (nowEmpty) this.unused[this.U++] = currentCommunity;\n};\n\nDirectedLouvainIndex.prototype.computeNodeInDegree = function (i) {\n  var o, l, weight;\n\n  var inDegree = 0;\n\n  for (o = this.offsets[i], l = this.starts[i + 1]; o < l; o++) {\n    weight = this.weights[o];\n\n    inDegree += weight;\n  }\n\n  return inDegree;\n};\n\nDirectedLouvainIndex.prototype.computeNodeOutDegree = function (i) {\n  var o, l, weight;\n\n  var outDegree = 0;\n\n  for (o = this.starts[i], l = this.offsets[i]; o < l; o++) {\n    weight = this.weights[o];\n\n    outDegree += weight;\n  }\n\n  return outDegree;\n};\n\nDirectedLouvainIndex.prototype.expensiveMove = function (i, ci) {\n  var inDegree = this.computeNodeInDegree(i),\n    outDegree = this.computeNodeOutDegree(i);\n\n  this.move(i, inDegree, outDegree, ci);\n};\n\nDirectedLouvainIndex.prototype.zoomOut = function () {\n  var inducedGraph = new Array(this.C - this.U),\n    newLabels = {};\n\n  var N = this.nodes.length;\n\n  var C = 0,\n    E = 0;\n\n  var i, j, l, m, n, ci, cj, data, offset, out, adj, inAdj, outAdj;\n\n  // Renumbering communities\n  for (i = 0, l = this.C; i < l; i++) {\n    ci = this.belongings[i];\n\n    if (!(ci in newLabels)) {\n      newLabels[ci] = C;\n      inducedGraph[C] = {\n        inAdj: {},\n        outAdj: {},\n        totalInWeights: this.totalInWeights[ci],\n        totalOutWeights: this.totalOutWeights[ci],\n        internalWeights: 0\n      };\n      C++;\n    }\n\n    // We do this to otpimize the number of lookups in next loop\n    this.belongings[i] = newLabels[ci];\n  }\n\n  // Actualizing dendrogram\n  var currentLevel, nextLevel;\n\n  if (this.keepDendrogram) {\n    currentLevel = this.dendrogram[this.level];\n    nextLevel = new (typed.getPointerArray(C))(N);\n\n    for (i = 0; i < N; i++) nextLevel[i] = this.belongings[currentLevel[i]];\n\n    this.dendrogram.push(nextLevel);\n  } else {\n    for (i = 0; i < N; i++) this.mapping[i] = this.belongings[this.mapping[i]];\n  }\n\n  // Building induced graph matrix\n  for (i = 0, l = this.C; i < l; i++) {\n    ci = this.belongings[i];\n    offset = this.offsets[i];\n\n    data = inducedGraph[ci];\n    inAdj = data.inAdj;\n    outAdj = data.outAdj;\n    data.internalWeights += this.loops[i];\n\n    for (j = this.starts[i], m = this.starts[i + 1]; j < m; j++) {\n      n = this.neighborhood[j];\n      cj = this.belongings[n];\n      out = j < offset;\n\n      adj = out ? outAdj : inAdj;\n\n      if (ci === cj) {\n        if (out) data.internalWeights += this.weights[j];\n\n        continue;\n      }\n\n      if (!(cj in adj)) adj[cj] = 0;\n\n      adj[cj] += this.weights[j];\n    }\n  }\n\n  // Rewriting neighborhood\n  this.C = C;\n\n  n = 0;\n\n  for (ci = 0; ci < C; ci++) {\n    data = inducedGraph[ci];\n    inAdj = data.inAdj;\n    outAdj = data.outAdj;\n\n    ci = +ci;\n\n    this.totalInWeights[ci] = data.totalInWeights;\n    this.totalOutWeights[ci] = data.totalOutWeights;\n    this.loops[ci] = data.internalWeights;\n    this.counts[ci] = 1;\n\n    this.starts[ci] = n;\n    this.belongings[ci] = ci;\n\n    for (cj in outAdj) {\n      this.neighborhood[n] = +cj;\n      this.weights[n] = outAdj[cj];\n\n      E++;\n      n++;\n    }\n\n    this.offsets[ci] = n;\n\n    for (cj in inAdj) {\n      this.neighborhood[n] = +cj;\n      this.weights[n] = inAdj[cj];\n\n      E++;\n      n++;\n    }\n  }\n\n  this.starts[C] = E;\n\n  this.E = E;\n  this.U = 0;\n  this.level++;\n\n  return newLabels;\n};\n\nDirectedLouvainIndex.prototype.modularity = function () {\n  var ci, cj, i, j, m;\n\n  var Q = 0;\n  var M = this.M;\n  var internalWeights = new Float64Array(this.C);\n\n  for (i = 0; i < this.C; i++) {\n    ci = this.belongings[i];\n    internalWeights[ci] += this.loops[i];\n\n    for (j = this.starts[i], m = this.offsets[i]; j < m; j++) {\n      cj = this.belongings[this.neighborhood[j]];\n\n      if (ci !== cj) continue;\n\n      internalWeights[ci] += this.weights[j];\n    }\n  }\n\n  for (i = 0; i < this.C; i++)\n    Q +=\n      internalWeights[i] / M -\n      ((this.totalInWeights[i] * this.totalOutWeights[i]) / Math.pow(M, 2)) *\n        this.resolution;\n\n  return Q;\n};\n\nDirectedLouvainIndex.prototype.delta = function (\n  i,\n  inDegree,\n  outDegree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalInWeight = this.totalInWeights[targetCommunity],\n    targetCommunityTotalOutWeight = this.totalOutWeights[targetCommunity];\n\n  var loops = this.loops[i];\n\n  inDegree += loops;\n  outDegree += loops;\n\n  return (\n    targetCommunityDegree / M -\n    ((outDegree * targetCommunityTotalInWeight +\n      inDegree * targetCommunityTotalOutWeight) *\n      this.resolution) /\n      (M * M)\n  );\n};\n\nDirectedLouvainIndex.prototype.deltaWithOwnCommunity = function (\n  i,\n  inDegree,\n  outDegree,\n  targetCommunityDegree,\n  targetCommunity\n) {\n  var M = this.M;\n\n  var targetCommunityTotalInWeight = this.totalInWeights[targetCommunity],\n    targetCommunityTotalOutWeight = this.totalOutWeights[targetCommunity];\n\n  var loops = this.loops[i];\n\n  inDegree += loops;\n  outDegree += loops;\n\n  return (\n    targetCommunityDegree / M -\n    ((outDegree * (targetCommunityTotalInWeight - inDegree) +\n      inDegree * (targetCommunityTotalOutWeight - outDegree)) *\n      this.resolution) /\n      (M * M)\n  );\n};\n\nDirectedLouvainIndex.prototype.collect =\n  UndirectedLouvainIndex.prototype.collect;\nDirectedLouvainIndex.prototype.assign = UndirectedLouvainIndex.prototype.assign;\n\nDirectedLouvainIndex.prototype[INSPECT] = function () {\n  var proxy = {};\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: DirectedLouvainIndex,\n    enumerable: false\n  });\n\n  proxy.C = this.C;\n  proxy.M = this.M;\n  proxy.E = this.E;\n  proxy.U = this.U;\n  proxy.resolution = this.resolution;\n  proxy.level = this.level;\n  proxy.nodes = this.nodes;\n  proxy.starts = this.starts.slice(0, proxy.C + 1);\n\n  var eTruncated = ['neighborhood', 'weights'];\n  var cTruncated = [\n    'counts',\n    'offsets',\n    'loops',\n    'belongings',\n    'totalInWeights',\n    'totalOutWeights'\n  ];\n\n  var self = this;\n\n  eTruncated.forEach(function (key) {\n    proxy[key] = self[key].slice(0, proxy.E);\n  });\n\n  cTruncated.forEach(function (key) {\n    proxy[key] = self[key].slice(0, proxy.C);\n  });\n\n  proxy.unused = this.unused.slice(0, this.U);\n\n  if (this.keepDendrogram) proxy.dendrogram = this.dendrogram;\n  else proxy.mapping = this.mapping;\n\n  return proxy;\n};\n\nexports.UndirectedLouvainIndex = UndirectedLouvainIndex;\nexports.DirectedLouvainIndex = DirectedLouvainIndex;\n","/**\n * Graphology Louvain Algorithm\n * =============================\n *\n * JavaScript implementation of the famous Louvain community detection\n * algorithm for graphology.\n *\n * [Articles]\n * M. E. J. Newman, « Modularity and community structure in networks »,\n * Proc. Natl. Acad. Sci. USA, vol. 103, no 23, 2006, p. 8577–8582\n * https://dx.doi.org/10.1073%2Fpnas.0601602103\n *\n * Newman, M. E. J. « Community detection in networks: Modularity optimization\n * and maximum likelihood are equivalent ». Physical Review E, vol. 94, no 5,\n * novembre 2016, p. 052315. arXiv.org, doi:10.1103/PhysRevE.94.052315.\n * https://arxiv.org/pdf/1606.02319.pdf\n *\n * Blondel, Vincent D., et al. « Fast unfolding of communities in large\n * networks ». Journal of Statistical Mechanics: Theory and Experiment,\n * vol. 2008, no 10, octobre 2008, p. P10008. DOI.org (Crossref),\n * doi:10.1088/1742-5468/2008/10/P10008.\n * https://arxiv.org/pdf/0803.0476.pdf\n *\n * Nicolas Dugué, Anthony Perez. Directed Louvain: maximizing modularity in\n * directed networks. [Research Report] Université d’Orléans. 2015. hal-01231784\n * https://hal.archives-ouvertes.fr/hal-01231784\n *\n * R. Lambiotte, J.-C. Delvenne and M. Barahona. Laplacian Dynamics and\n * Multiscale Modular Structure in Networks,\n * doi:10.1109/TNSE.2015.2391998.\n * https://arxiv.org/abs/0812.1770\n *\n * Traag, V. A., et al. « From Louvain to Leiden: Guaranteeing Well-Connected\n * Communities ». Scientific Reports, vol. 9, no 1, décembre 2019, p. 5233.\n * DOI.org (Crossref), doi:10.1038/s41598-019-41695-z.\n * https://arxiv.org/abs/1810.08473\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar inferType = require('graphology-utils/infer-type');\nvar SparseMap = require('mnemonist/sparse-map');\nvar SparseQueueSet = require('mnemonist/sparse-queue-set');\nvar createRandomIndex = require('pandemonium/random-index').createRandomIndex;\n\nvar indices = require('graphology-indices/louvain');\n\nvar UndirectedLouvainIndex = indices.UndirectedLouvainIndex;\nvar DirectedLouvainIndex = indices.DirectedLouvainIndex;\n\nvar DEFAULTS = {\n  nodeCommunityAttribute: 'community',\n  getEdgeWeight: 'weight',\n  fastLocalMoves: true,\n  randomWalk: true,\n  resolution: 1,\n  rng: Math.random\n};\n\nfunction addWeightToCommunity(map, community, weight) {\n  var currentWeight = map.get(community);\n\n  if (typeof currentWeight === 'undefined') currentWeight = 0;\n\n  currentWeight += weight;\n\n  map.set(community, currentWeight);\n}\n\nvar EPSILON = 1e-10;\n\nfunction tieBreaker(\n  bestCommunity,\n  currentCommunity,\n  targetCommunity,\n  delta,\n  bestDelta\n) {\n  if (Math.abs(delta - bestDelta) < EPSILON) {\n    if (bestCommunity === currentCommunity) {\n      return false;\n    } else {\n      return targetCommunity > bestCommunity;\n    }\n  } else if (delta > bestDelta) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction undirectedLouvain(detailed, graph, options) {\n  var index = new UndirectedLouvainIndex(graph, {\n    getEdgeWeight: options.getEdgeWeight,\n    keepDendrogram: detailed,\n    resolution: options.resolution\n  });\n\n  var randomIndex = createRandomIndex(options.rng);\n\n  // State variables\n  var moveWasMade = true,\n    localMoveWasMade = true;\n\n  // Communities\n  var currentCommunity, targetCommunity;\n  var communities = new SparseMap(Float64Array, index.C);\n\n  // Traversal\n  var queue, start, end, weight, ci, ri, s, i, j, l;\n\n  // Metrics\n  var degree, targetCommunityDegree;\n\n  // Moves\n  var bestCommunity, bestDelta, deltaIsBetter, delta;\n\n  // Details\n  var deltaComputations = 0,\n    nodesVisited = 0,\n    moves = [],\n    localMoves,\n    currentMoves;\n\n  if (options.fastLocalMoves) queue = new SparseQueueSet(index.C);\n\n  while (moveWasMade) {\n    l = index.C;\n\n    moveWasMade = false;\n    localMoveWasMade = true;\n\n    if (options.fastLocalMoves) {\n      currentMoves = 0;\n\n      // Traversal of the graph\n      ri = options.randomWalk ? randomIndex(l) : 0;\n\n      for (s = 0; s < l; s++, ri++) {\n        i = ri % l;\n        queue.enqueue(i);\n      }\n\n      while (queue.size !== 0) {\n        i = queue.dequeue();\n        nodesVisited++;\n\n        degree = 0;\n        communities.clear();\n\n        currentCommunity = index.belongings[i];\n\n        start = index.starts[i];\n        end = index.starts[i + 1];\n\n        // Traversing neighbors\n        for (; start < end; start++) {\n          j = index.neighborhood[start];\n          weight = index.weights[start];\n\n          targetCommunity = index.belongings[j];\n\n          // Incrementing metrics\n          degree += weight;\n          addWeightToCommunity(communities, targetCommunity, weight);\n        }\n\n        // Finding best community to move to\n        bestDelta = index.fastDeltaWithOwnCommunity(\n          i,\n          degree,\n          communities.get(currentCommunity) || 0,\n          currentCommunity\n        );\n        bestCommunity = currentCommunity;\n\n        for (ci = 0; ci < communities.size; ci++) {\n          targetCommunity = communities.dense[ci];\n\n          if (targetCommunity === currentCommunity) continue;\n\n          targetCommunityDegree = communities.vals[ci];\n\n          deltaComputations++;\n\n          delta = index.fastDelta(\n            i,\n            degree,\n            targetCommunityDegree,\n            targetCommunity\n          );\n\n          deltaIsBetter = tieBreaker(\n            bestCommunity,\n            currentCommunity,\n            targetCommunity,\n            delta,\n            bestDelta\n          );\n\n          if (deltaIsBetter) {\n            bestDelta = delta;\n            bestCommunity = targetCommunity;\n          }\n        }\n\n        // Should we move the node?\n        if (bestDelta < 0) {\n          // NOTE: this is to allow nodes to move back to their own singleton\n          // This code however only deals with modularity (e.g. the condition\n          // about bestDelta < 0, which is the delta for moving back to\n          // singleton wrt. modularity). Indeed, rarely, the Louvain\n          // algorithm can produce such cases when a node would be better in\n          // a singleton that in its own community when considering self loops\n          // or a resolution != 1. In this case, delta with your own community\n          // is indeed less than 0. To handle different metrics, one should\n          // consider computing the delta for going back to singleton because\n          // it might not be 0.\n          bestCommunity = index.isolate(i, degree);\n\n          // If the node was already in a singleton community, we don't consider\n          // a move was made\n          if (bestCommunity === currentCommunity) continue;\n        } else {\n          // If no move was made, we continue to next node\n          if (bestCommunity === currentCommunity) {\n            continue;\n          } else {\n            // Actually moving the node to a new community\n            index.move(i, degree, bestCommunity);\n          }\n        }\n\n        moveWasMade = true;\n        currentMoves++;\n\n        // Adding neighbors from other communities to the queue\n        start = index.starts[i];\n        end = index.starts[i + 1];\n\n        for (; start < end; start++) {\n          j = index.neighborhood[start];\n          targetCommunity = index.belongings[j];\n\n          if (targetCommunity !== bestCommunity) queue.enqueue(j);\n        }\n      }\n\n      moves.push(currentMoves);\n    } else {\n      localMoves = [];\n      moves.push(localMoves);\n\n      // Traditional Louvain iterative traversal of the graph\n      while (localMoveWasMade) {\n        localMoveWasMade = false;\n        currentMoves = 0;\n\n        ri = options.randomWalk ? randomIndex(l) : 0;\n\n        for (s = 0; s < l; s++, ri++) {\n          i = ri % l;\n\n          nodesVisited++;\n\n          degree = 0;\n          communities.clear();\n\n          currentCommunity = index.belongings[i];\n\n          start = index.starts[i];\n          end = index.starts[i + 1];\n\n          // Traversing neighbors\n          for (; start < end; start++) {\n            j = index.neighborhood[start];\n            weight = index.weights[start];\n\n            targetCommunity = index.belongings[j];\n\n            // Incrementing metrics\n            degree += weight;\n            addWeightToCommunity(communities, targetCommunity, weight);\n          }\n\n          // Finding best community to move to\n          bestDelta = index.fastDeltaWithOwnCommunity(\n            i,\n            degree,\n            communities.get(currentCommunity) || 0,\n            currentCommunity\n          );\n          bestCommunity = currentCommunity;\n\n          for (ci = 0; ci < communities.size; ci++) {\n            targetCommunity = communities.dense[ci];\n\n            if (targetCommunity === currentCommunity) continue;\n\n            targetCommunityDegree = communities.vals[ci];\n\n            deltaComputations++;\n\n            delta = index.fastDelta(\n              i,\n              degree,\n              targetCommunityDegree,\n              targetCommunity\n            );\n\n            deltaIsBetter = tieBreaker(\n              bestCommunity,\n              currentCommunity,\n              targetCommunity,\n              delta,\n              bestDelta\n            );\n\n            if (deltaIsBetter) {\n              bestDelta = delta;\n              bestCommunity = targetCommunity;\n            }\n          }\n\n          // Should we move the node?\n          if (bestDelta < 0) {\n            // NOTE: this is to allow nodes to move back to their own singleton\n            // This code however only deals with modularity (e.g. the condition\n            // about bestDelta < 0, which is the delta for moving back to\n            // singleton wrt. modularity). Indeed, rarely, the Louvain\n            // algorithm can produce such cases when a node would be better in\n            // a singleton that in its own community when considering self loops\n            // or a resolution != 1. In this case, delta with your own community\n            // is indeed less than 0. To handle different metrics, one should\n            // consider computing the delta for going back to singleton because\n            // it might not be 0.\n            bestCommunity = index.isolate(i, degree);\n\n            // If the node was already in a singleton community, we don't consider\n            // a move was made\n            if (bestCommunity === currentCommunity) continue;\n          } else {\n            // If no move was made, we continue to next node\n            if (bestCommunity === currentCommunity) {\n              continue;\n            } else {\n              // Actually moving the node to a new community\n              index.move(i, degree, bestCommunity);\n            }\n          }\n\n          localMoveWasMade = true;\n          currentMoves++;\n        }\n\n        localMoves.push(currentMoves);\n\n        moveWasMade = localMoveWasMade || moveWasMade;\n      }\n    }\n\n    // We continue working on the induced graph\n    if (moveWasMade) index.zoomOut();\n  }\n\n  var results = {\n    index: index,\n    deltaComputations: deltaComputations,\n    nodesVisited: nodesVisited,\n    moves: moves\n  };\n\n  return results;\n}\n\nfunction directedLouvain(detailed, graph, options) {\n  var index = new DirectedLouvainIndex(graph, {\n    getEdgeWeight: options.getEdgeWeight,\n    keepDendrogram: detailed,\n    resolution: options.resolution\n  });\n\n  var randomIndex = createRandomIndex(options.rng);\n\n  // State variables\n  var moveWasMade = true,\n    localMoveWasMade = true;\n\n  // Communities\n  var currentCommunity, targetCommunity;\n  var communities = new SparseMap(Float64Array, index.C);\n\n  // Traversal\n  var queue, start, end, offset, out, weight, ci, ri, s, i, j, l;\n\n  // Metrics\n  var inDegree, outDegree, targetCommunityDegree;\n\n  // Moves\n  var bestCommunity, bestDelta, deltaIsBetter, delta;\n\n  // Details\n  var deltaComputations = 0,\n    nodesVisited = 0,\n    moves = [],\n    localMoves,\n    currentMoves;\n\n  if (options.fastLocalMoves) queue = new SparseQueueSet(index.C);\n\n  while (moveWasMade) {\n    l = index.C;\n\n    moveWasMade = false;\n    localMoveWasMade = true;\n\n    if (options.fastLocalMoves) {\n      currentMoves = 0;\n\n      // Traversal of the graph\n      ri = options.randomWalk ? randomIndex(l) : 0;\n\n      for (s = 0; s < l; s++, ri++) {\n        i = ri % l;\n        queue.enqueue(i);\n      }\n\n      while (queue.size !== 0) {\n        i = queue.dequeue();\n        nodesVisited++;\n\n        inDegree = 0;\n        outDegree = 0;\n        communities.clear();\n\n        currentCommunity = index.belongings[i];\n\n        start = index.starts[i];\n        end = index.starts[i + 1];\n        offset = index.offsets[i];\n\n        // Traversing neighbors\n        for (; start < end; start++) {\n          out = start < offset;\n          j = index.neighborhood[start];\n          weight = index.weights[start];\n\n          targetCommunity = index.belongings[j];\n\n          // Incrementing metrics\n          if (out) outDegree += weight;\n          else inDegree += weight;\n\n          addWeightToCommunity(communities, targetCommunity, weight);\n        }\n\n        // Finding best community to move to\n        bestDelta = index.deltaWithOwnCommunity(\n          i,\n          inDegree,\n          outDegree,\n          communities.get(currentCommunity) || 0,\n          currentCommunity\n        );\n        bestCommunity = currentCommunity;\n\n        for (ci = 0; ci < communities.size; ci++) {\n          targetCommunity = communities.dense[ci];\n\n          if (targetCommunity === currentCommunity) continue;\n\n          targetCommunityDegree = communities.vals[ci];\n\n          deltaComputations++;\n\n          delta = index.delta(\n            i,\n            inDegree,\n            outDegree,\n            targetCommunityDegree,\n            targetCommunity\n          );\n\n          deltaIsBetter = tieBreaker(\n            bestCommunity,\n            currentCommunity,\n            targetCommunity,\n            delta,\n            bestDelta\n          );\n\n          if (deltaIsBetter) {\n            bestDelta = delta;\n            bestCommunity = targetCommunity;\n          }\n        }\n\n        // Should we move the node?\n        if (bestDelta < 0) {\n          // NOTE: this is to allow nodes to move back to their own singleton\n          // This code however only deals with modularity (e.g. the condition\n          // about bestDelta < 0, which is the delta for moving back to\n          // singleton wrt. modularity). Indeed, rarely, the Louvain\n          // algorithm can produce such cases when a node would be better in\n          // a singleton that in its own community when considering self loops\n          // or a resolution != 1. In this case, delta with your own community\n          // is indeed less than 0. To handle different metrics, one should\n          // consider computing the delta for going back to singleton because\n          // it might not be 0.\n          bestCommunity = index.isolate(i, inDegree, outDegree);\n\n          // If the node was already in a singleton community, we don't consider\n          // a move was made\n          if (bestCommunity === currentCommunity) continue;\n        } else {\n          // If no move was made, we continue to next node\n          if (bestCommunity === currentCommunity) {\n            continue;\n          } else {\n            // Actually moving the node to a new community\n            index.move(i, inDegree, outDegree, bestCommunity);\n          }\n        }\n\n        moveWasMade = true;\n        currentMoves++;\n\n        // Adding neighbors from other communities to the queue\n        start = index.starts[i];\n        end = index.starts[i + 1];\n\n        for (; start < end; start++) {\n          j = index.neighborhood[start];\n          targetCommunity = index.belongings[j];\n\n          if (targetCommunity !== bestCommunity) queue.enqueue(j);\n        }\n      }\n\n      moves.push(currentMoves);\n    } else {\n      localMoves = [];\n      moves.push(localMoves);\n\n      // Traditional Louvain iterative traversal of the graph\n      while (localMoveWasMade) {\n        localMoveWasMade = false;\n        currentMoves = 0;\n\n        ri = options.randomWalk ? randomIndex(l) : 0;\n\n        for (s = 0; s < l; s++, ri++) {\n          i = ri % l;\n\n          nodesVisited++;\n\n          inDegree = 0;\n          outDegree = 0;\n          communities.clear();\n\n          currentCommunity = index.belongings[i];\n\n          start = index.starts[i];\n          end = index.starts[i + 1];\n          offset = index.offsets[i];\n\n          // Traversing neighbors\n          for (; start < end; start++) {\n            out = start < offset;\n            j = index.neighborhood[start];\n            weight = index.weights[start];\n\n            targetCommunity = index.belongings[j];\n\n            // Incrementing metrics\n            if (out) outDegree += weight;\n            else inDegree += weight;\n\n            addWeightToCommunity(communities, targetCommunity, weight);\n          }\n\n          // Finding best community to move to\n          bestDelta = index.deltaWithOwnCommunity(\n            i,\n            inDegree,\n            outDegree,\n            communities.get(currentCommunity) || 0,\n            currentCommunity\n          );\n          bestCommunity = currentCommunity;\n\n          for (ci = 0; ci < communities.size; ci++) {\n            targetCommunity = communities.dense[ci];\n\n            if (targetCommunity === currentCommunity) continue;\n\n            targetCommunityDegree = communities.vals[ci];\n\n            deltaComputations++;\n\n            delta = index.delta(\n              i,\n              inDegree,\n              outDegree,\n              targetCommunityDegree,\n              targetCommunity\n            );\n\n            deltaIsBetter = tieBreaker(\n              bestCommunity,\n              currentCommunity,\n              targetCommunity,\n              delta,\n              bestDelta\n            );\n\n            if (deltaIsBetter) {\n              bestDelta = delta;\n              bestCommunity = targetCommunity;\n            }\n          }\n\n          // Should we move the node?\n          if (bestDelta < 0) {\n            // NOTE: this is to allow nodes to move back to their own singleton\n            // This code however only deals with modularity (e.g. the condition\n            // about bestDelta < 0, which is the delta for moving back to\n            // singleton wrt. modularity). Indeed, rarely, the Louvain\n            // algorithm can produce such cases when a node would be better in\n            // a singleton that in its own community when considering self loops\n            // or a resolution != 1. In this case, delta with your own community\n            // is indeed less than 0. To handle different metrics, one should\n            // consider computing the delta for going back to singleton because\n            // it might not be 0.\n            bestCommunity = index.isolate(i, inDegree, outDegree);\n\n            // If the node was already in a singleton community, we don't consider\n            // a move was made\n            if (bestCommunity === currentCommunity) continue;\n          } else {\n            // If no move was made, we continue to next node\n            if (bestCommunity === currentCommunity) {\n              continue;\n            } else {\n              // Actually moving the node to a new community\n              index.move(i, inDegree, outDegree, bestCommunity);\n            }\n          }\n\n          localMoveWasMade = true;\n          currentMoves++;\n        }\n\n        localMoves.push(currentMoves);\n\n        moveWasMade = localMoveWasMade || moveWasMade;\n      }\n    }\n\n    // We continue working on the induced graph\n    if (moveWasMade) index.zoomOut();\n  }\n\n  var results = {\n    index: index,\n    deltaComputations: deltaComputations,\n    nodesVisited: nodesVisited,\n    moves: moves\n  };\n\n  return results;\n}\n\n/**\n * Function returning the communities mapping of the graph.\n *\n * @param  {boolean} assign             - Assign communities to nodes attributes?\n * @param  {boolean} detailed           - Whether to return detailed information.\n * @param  {Graph}   graph              - Target graph.\n * @param  {object}  options            - Options:\n * @param  {string}    nodeCommunityAttribute - Community node attribute name.\n * @param  {string}    getEdgeWeight          - Weight edge attribute name or getter function.\n * @param  {string}    deltaComputation       - Method to use to compute delta computations.\n * @param  {boolean}   fastLocalMoves         - Whether to use the fast local move optimization.\n * @param  {boolean}   randomWalk             - Whether to traverse the graph in random order.\n * @param  {number}    resolution             - Resolution parameter.\n * @param  {function}  rng                    - RNG function to use.\n * @return {object}\n */\nfunction louvain(assign, detailed, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-communities-louvain: the given graph is not a valid graphology instance.'\n    );\n\n  var type = inferType(graph);\n\n  if (type === 'mixed')\n    throw new Error(\n      'graphology-communities-louvain: cannot run the algorithm on a true mixed graph.'\n    );\n\n  // Attributes name\n  options = resolveDefaults(options, DEFAULTS);\n\n  // Empty graph case\n  var c = 0;\n\n  if (graph.size === 0) {\n    if (assign) {\n      graph.forEachNode(function (node) {\n        graph.setNodeAttribute(node, options.nodeCommunityAttribute, c++);\n      });\n\n      return;\n    }\n\n    var communities = {};\n\n    graph.forEachNode(function (node) {\n      communities[node] = c++;\n    });\n\n    if (!detailed) return communities;\n\n    return {\n      communities: communities,\n      count: graph.order,\n      deltaComputations: 0,\n      dendrogram: null,\n      level: 0,\n      modularity: NaN,\n      moves: null,\n      nodesVisited: 0,\n      resolution: options.resolution\n    };\n  }\n\n  var fn = type === 'undirected' ? undirectedLouvain : directedLouvain;\n\n  var results = fn(detailed, graph, options);\n\n  var index = results.index;\n\n  // Standard output\n  if (!detailed) {\n    if (assign) {\n      index.assign(options.nodeCommunityAttribute);\n      return;\n    }\n\n    return index.collect();\n  }\n\n  // Detailed output\n  var output = {\n    count: index.C,\n    deltaComputations: results.deltaComputations,\n    dendrogram: index.dendrogram,\n    level: index.level,\n    modularity: index.modularity(),\n    moves: results.moves,\n    nodesVisited: results.nodesVisited,\n    resolution: options.resolution\n  };\n\n  if (assign) {\n    index.assign(options.nodeCommunityAttribute);\n    return output;\n  }\n\n  output.communities = index.collect();\n\n  return output;\n}\n\n/**\n * Exporting.\n */\nvar fn = louvain.bind(null, false, false);\nfn.assign = louvain.bind(null, true, false);\nfn.detailed = louvain.bind(null, false, true);\nfn.defaults = DEFAULTS;\n\nmodule.exports = fn;\n","module.exports = require('graphology-communities-louvain');\n","/**\n * Graphology Node Adders\n * =======================\n *\n * Generic node addition functions that can be used to avoid nasty repetitive\n * conditions.\n */\nexports.copyNode = function (graph, key, attributes) {\n  attributes = Object.assign({}, attributes);\n  return graph.addNode(key, attributes);\n};\n","/**\n * Graphology Edge Adders\n * =======================\n *\n * Generic edge addition functions that can be used to avoid nasty repetitive\n * conditions.\n */\nexports.addEdge = function addEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.addUndirectedEdge(source, target, attributes);\n    else return graph.addUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.addDirectedEdge(source, target, attributes);\n    else return graph.addDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.copyEdge = function copyEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  attributes = Object.assign({}, attributes);\n\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.addUndirectedEdge(source, target, attributes);\n    else return graph.addUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.addDirectedEdge(source, target, attributes);\n    else return graph.addDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.mergeEdge = function mergeEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  attributes\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.mergeUndirectedEdge(source, target, attributes);\n    else\n      return graph.mergeUndirectedEdgeWithKey(key, source, target, attributes);\n  } else {\n    if (key === null || key === undefined)\n      return graph.mergeDirectedEdge(source, target, attributes);\n    else return graph.mergeDirectedEdgeWithKey(key, source, target, attributes);\n  }\n};\n\nexports.updateEdge = function updateEdge(\n  graph,\n  undirected,\n  key,\n  source,\n  target,\n  updater\n) {\n  if (undirected) {\n    if (key === null || key === undefined)\n      return graph.updateUndirectedEdge(source, target, updater);\n    else return graph.updateUndirectedEdgeWithKey(key, source, target, updater);\n  } else {\n    if (key === null || key === undefined)\n      return graph.updateDirectedEdge(source, target, updater);\n    else return graph.updateDirectedEdgeWithKey(key, source, target, updater);\n  }\n};\n","/**\n * Graphology DFS Stack\n * =====================\n *\n * An experiment to speed up DFS in graphs and connected component detection.\n *\n * It should mostly save memory and not improve theoretical runtime.\n */\nfunction DFSStack(order) {\n  this.stack = new Array(order);\n  this.seen = new Set();\n  this.size = 0;\n}\n\nDFSStack.prototype.has = function (node) {\n  return this.seen.has(node);\n};\n\nDFSStack.prototype.push = function (node) {\n  var seenSizeBefore = this.seen.size;\n\n  this.seen.add(node);\n\n  // If node was already seen\n  if (seenSizeBefore === this.seen.size) return false;\n\n  this.stack[this.size++] = node;\n\n  return true;\n};\n\nDFSStack.prototype.pushWith = function (node, item) {\n  var seenSizeBefore = this.seen.size;\n\n  this.seen.add(node);\n\n  // If node was already seen\n  if (seenSizeBefore === this.seen.size) return false;\n\n  this.stack[this.size++] = item;\n\n  return true;\n};\n\nDFSStack.prototype.pop = function () {\n  if (this.size === 0) return;\n\n  return this.stack[--this.size];\n};\n\nmodule.exports = DFSStack;\n","/**\n * Graphology Components\n * ======================\n *\n * Basic connected components-related functions.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyNode = require('graphology-utils/add-node').copyNode;\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\nvar DFSStack = require('graphology-indices/dfs-stack');\n\n/**\n * Function iterating over a graph's connected component using a callback.\n *\n * @param {Graph}    graph    - Target graph.\n * @param {function} callback - Iteration callback.\n */\nfunction forEachConnectedComponent(graph, callback) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-components: the given graph is not a valid graphology instance.'\n    );\n\n  // A null graph has no connected components by definition\n  if (!graph.order) return;\n\n  var stack = new DFSStack(graph.order);\n  var push = stack.push.bind(stack);\n\n  graph.forEachNode(function (node) {\n    if (stack.has(node)) return;\n\n    var component = [];\n\n    stack.push(node);\n\n    var source;\n\n    while (stack.size !== 0) {\n      source = stack.pop();\n\n      component.push(source);\n\n      graph.forEachNeighbor(source, push);\n    }\n\n    callback(component);\n  });\n}\n\nfunction forEachConnectedComponentOrder(graph, callback) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-components: the given graph is not a valid graphology instance.'\n    );\n\n  // A null graph has no connected components by definition\n  if (!graph.order) return;\n\n  var stack = new DFSStack(graph.order);\n  var push = stack.push.bind(stack);\n\n  graph.forEachNode(function (node) {\n    if (stack.has(node)) return;\n\n    var order = 0;\n\n    stack.push(node);\n\n    var source;\n\n    while (stack.size !== 0) {\n      source = stack.pop();\n\n      order++;\n\n      graph.forEachNeighbor(source, push);\n    }\n\n    callback(order);\n  });\n}\n\nfunction forEachConnectedComponentOrderWithEdgeFilter(\n  graph,\n  edgeFilter,\n  callback\n) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-components: the given graph is not a valid graphology instance.'\n    );\n\n  // A null graph has no connected components by definition\n  if (!graph.order) return;\n\n  var stack = new DFSStack(graph.order);\n\n  var source;\n\n  function push(e, a, s, t, sa, ta, u) {\n    if (source === t) t = s;\n\n    if (!edgeFilter(e, a, s, t, sa, ta, u)) return;\n\n    stack.push(t);\n  }\n\n  graph.forEachNode(function (node) {\n    if (stack.has(node)) return;\n\n    var order = 0;\n\n    stack.push(node);\n\n    while (stack.size !== 0) {\n      source = stack.pop();\n\n      order++;\n\n      graph.forEachEdge(source, push);\n    }\n\n    callback(order);\n  });\n}\n\nfunction countConnectedComponents(graph) {\n  var n = 0;\n\n  forEachConnectedComponentOrder(graph, function () {\n    n++;\n  });\n\n  return n;\n}\n\n/**\n * Function returning a list of a graph's connected components as arrays\n * of node keys.\n *\n * @param  {Graph} graph - Target graph.\n * @return {array}\n */\nfunction connectedComponents(graph) {\n  var components = [];\n\n  forEachConnectedComponent(graph, function (component) {\n    components.push(component);\n  });\n\n  return components;\n}\n\n/**\n * Function returning the largest component of the given graph.\n *\n * @param  {Graph} graph - Target graph.\n * @return {array}\n */\nfunction largestConnectedComponent(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-components: the given graph is not a valid graphology instance.'\n    );\n\n  if (!graph.order) return [];\n\n  var order = graph.order;\n  var remaining;\n\n  var stack = new DFSStack(graph.order);\n  var push = stack.push.bind(stack);\n\n  var largestComponent = [];\n  var component;\n\n  graph.someNode(function (node) {\n    if (stack.has(node)) return;\n\n    component = [];\n\n    stack.push(node);\n\n    var source;\n\n    while (stack.size !== 0) {\n      source = stack.pop();\n\n      component.push(source);\n\n      graph.forEachNeighbor(source, push);\n    }\n\n    if (component.length > largestComponent.length)\n      largestComponent = component;\n\n    // Early exit condition:\n    // If current largest component's size is larger than the number of\n    // remaining nodes to visit, we can safely assert we found the\n    // overall largest component already.\n    remaining = order - stack.seen.size;\n    if (largestComponent.length > remaining) return true;\n\n    return false;\n  });\n\n  return largestComponent;\n}\n\n/**\n * Function returning a subgraph composed of the largest component of the given graph.\n *\n * @param  {Graph} graph - Target graph.\n * @return {Graph}\n */\nfunction largestConnectedComponentSubgraph(graph) {\n  var component = largestConnectedComponent(graph);\n\n  var S = graph.nullCopy();\n\n  component.forEach(function (key) {\n    copyNode(S, key, graph.getNodeAttributes(key));\n  });\n\n  graph.forEachEdge(function (\n    key,\n    attr,\n    source,\n    target,\n    sourceAttr,\n    targetAttr,\n    undirected\n  ) {\n    if (S.hasNode(source)) {\n      copyEdge(S, undirected, key, source, target, attr);\n    }\n  });\n\n  return S;\n}\n\n/**\n * Function mutating a graph in order to drop every node and edge that does\n * not belong to its largest connected component.\n *\n * @param  {Graph} graph - Target graph.\n */\nfunction cropToLargestConnectedComponent(graph) {\n  var component = new Set(largestConnectedComponent(graph));\n\n  graph.forEachNode(function (key) {\n    if (!component.has(key)) {\n      graph.dropNode(key);\n    }\n  });\n}\n\n/**\n * Function returning a list of strongly connected components.\n *\n * @param  {Graph} graph - Target directed graph.\n * @return {array}\n */\nfunction stronglyConnectedComponents(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-components: the given graph is not a valid graphology instance.'\n    );\n\n  if (!graph.order) return [];\n\n  if (graph.type === 'undirected')\n    throw new Error('graphology-components: the given graph is undirected');\n\n  var nodes = graph.nodes(),\n    components = [],\n    i,\n    l;\n\n  if (!graph.size) {\n    for (i = 0, l = nodes.length; i < l; i++) components.push([nodes[i]]);\n    return components;\n  }\n\n  var count = 1,\n    P = [],\n    S = [],\n    preorder = new Map(),\n    assigned = new Set(),\n    component,\n    pop,\n    vertex;\n\n  var DFS = function (node) {\n    var neighbor;\n    var neighbors = graph.outboundNeighbors(node);\n    var neighborOrder;\n\n    preorder.set(node, count++);\n    P.push(node);\n    S.push(node);\n\n    for (var k = 0, n = neighbors.length; k < n; k++) {\n      neighbor = neighbors[k];\n\n      if (preorder.has(neighbor)) {\n        neighborOrder = preorder.get(neighbor);\n        if (!assigned.has(neighbor))\n          while (preorder.get(P[P.length - 1]) > neighborOrder) P.pop();\n      } else {\n        DFS(neighbor);\n      }\n    }\n\n    if (preorder.get(P[P.length - 1]) === preorder.get(node)) {\n      component = [];\n      do {\n        pop = S.pop();\n        component.push(pop);\n        assigned.add(pop);\n      } while (pop !== node);\n      components.push(component);\n      P.pop();\n    }\n  };\n\n  for (i = 0, l = nodes.length; i < l; i++) {\n    vertex = nodes[i];\n    if (!assigned.has(vertex)) DFS(vertex);\n  }\n\n  return components;\n}\n\n/**\n * Exporting.\n */\nexports.forEachConnectedComponent = forEachConnectedComponent;\nexports.forEachConnectedComponentOrder = forEachConnectedComponentOrder;\nexports.forEachConnectedComponentOrderWithEdgeFilter =\n  forEachConnectedComponentOrderWithEdgeFilter;\nexports.countConnectedComponents = countConnectedComponents;\nexports.connectedComponents = connectedComponents;\nexports.largestConnectedComponent = largestConnectedComponent;\nexports.largestConnectedComponentSubgraph = largestConnectedComponentSubgraph;\nexports.cropToLargestConnectedComponent = cropToLargestConnectedComponent;\nexports.stronglyConnectedComponents = stronglyConnectedComponents;\n","module.exports = require('graphology-components');\n","/**\n * Graphology Complete Graph Generator\n * ====================================\n *\n * Function generating complete graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates a complete graph with n nodes.\n *\n * @param  {Class}  GraphClass - The Graph Class to instantiate.\n * @param  {number} order      - Number of nodes of the graph.\n * @return {Graph}\n */\nmodule.exports = function complete(GraphClass, order) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/classic/complete: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass();\n\n  var i, j;\n\n  for (i = 0; i < order; i++) graph.addNode(i);\n\n  for (i = 0; i < order; i++) {\n    for (j = i + 1; j < order; j++) {\n      if (graph.type !== 'directed') graph.addUndirectedEdge(i, j);\n\n      if (graph.type !== 'undirected') {\n        graph.addDirectedEdge(i, j);\n        graph.addDirectedEdge(j, i);\n      }\n    }\n  }\n\n  return graph;\n};\n","/**\n * Graphology Empty Graph Generator\n * =================================\n *\n * Function generating empty graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates an empty graph with n nodes and 0 edges.\n *\n * @param  {Class}  GraphClass - The Graph Class to instantiate.\n * @param  {number} order      - Number of nodes of the graph.\n * @return {Graph}\n */\nmodule.exports = function empty(GraphClass, order) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/classic/empty: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass();\n\n  var i;\n\n  for (i = 0; i < order; i++) graph.addNode(i);\n\n  return graph;\n};\n","/**\n * Graphology Ladder Graph Generator\n * ==================================\n *\n * Function generating ladder graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates a ladder graph of length n (order will therefore be 2 * n).\n *\n * @param  {Class}  GraphClass - The Graph Class to instantiate.\n * @param  {number} length     - Length of the ladder.\n * @return {Graph}\n */\nmodule.exports = function ladder(GraphClass, length) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/classic/ladder: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass();\n\n  var i;\n\n  for (i = 0; i < length - 1; i++) graph.mergeEdge(i, i + 1);\n  for (i = length; i < length * 2 - 1; i++) graph.mergeEdge(i, i + 1);\n  for (i = 0; i < length; i++) graph.addEdge(i, i + length);\n\n  return graph;\n};\n","/**\n * Graphology Path Graph Generator\n * ================================\n *\n * Function generating path graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates a path graph with n nodes.\n *\n * @param  {Class}  GraphClass - The Graph Class to instantiate.\n * @param  {number} order      - Number of nodes of the graph.\n * @return {Graph}\n */\nmodule.exports = function path(GraphClass, order) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/classic/path: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass();\n\n  for (var i = 0; i < order - 1; i++) graph.mergeEdge(i, i + 1);\n\n  return graph;\n};\n","/**\n * Graphology Classic Graph Generators\n * ====================================\n *\n * Classic graph generators endpoint.\n */\nexports.complete = require('./complete.js');\nexports.empty = require('./empty.js');\nexports.ladder = require('./ladder.js');\nexports.path = require('./path.js');\n","/**\n * Graphology Caveman Graph Generator\n * ===================================\n *\n * Function generating caveman graphs.\n *\n * [Article]:\n * Watts, D. J. 'Networks, Dynamics, and the Small-World Phenomenon.'\n * Amer. J. Soc. 105, 493-527, 1999.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor'),\n  empty = require('../classic/empty.js');\n\n/**\n * Function returning a caveman graph with desired properties.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {number}   l             - The number of cliques in the graph.\n * @param  {number}   k             - Size of the cliques.\n * @return {Graph}\n */\nmodule.exports = function caveman(GraphClass, l, k) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/community/caveman: invalid Graph constructor.'\n    );\n\n  var m = l * k;\n\n  var graph = empty(GraphClass, m);\n\n  if (k < 2) return graph;\n\n  var i, j, s;\n\n  for (i = 0; i < m; i += k) {\n    for (j = i; j < i + k; j++) {\n      for (s = j + 1; s < i + k; s++) graph.addEdge(j, s);\n    }\n  }\n\n  return graph;\n};\n","/**\n * Graphology Connected Caveman Graph Generator\n * =============================================\n *\n * Function generating connected caveman graphs.\n *\n * [Article]:\n * Watts, D. J. 'Networks, Dynamics, and the Small-World Phenomenon.'\n * Amer. J. Soc. 105, 493-527, 1999.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor'),\n  empty = require('../classic/empty.js');\n\n/**\n * Function returning a connected caveman graph with desired properties.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {number}   l             - The number of cliques in the graph.\n * @param  {number}   k             - Size of the cliques.\n * @return {Graph}\n */\nmodule.exports = function connectedCaveman(GraphClass, l, k) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/community/connected-caveman: invalid Graph constructor.'\n    );\n\n  var m = l * k;\n\n  var graph = empty(GraphClass, m);\n\n  if (k < 2) return graph;\n\n  var i, j, s;\n\n  for (i = 0; i < m; i += k) {\n    for (j = i; j < i + k; j++) {\n      for (s = j + 1; s < i + k; s++) {\n        if (j !== i || j !== s - 1) graph.addEdge(j, s);\n      }\n    }\n\n    if (i > 0) graph.addEdge(i, (i - 1) % m);\n  }\n\n  graph.addEdge(0, m - 1);\n\n  return graph;\n};\n","/**\n * Graphology Community Graph Generators\n * ======================================\n *\n * Community graph generators endpoint.\n */\nexports.caveman = require('./caveman.js');\nexports.connectedCaveman = require('./connected-caveman.js');\n","/**\n * Graphology Random Clusters Graph Generator\n * ===========================================\n *\n * Function generating a graph containing the desired number of nodes & edges\n * and organized in the desired number of clusters.\n *\n * [Author]:\n * Alexis Jacomy\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates a random graph with clusters.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {object}   options       - Options:\n * @param  {number}     clusterDensity - Probability that an edge will link two\n *                                       nodes of the same cluster.\n * @param  {number}     order          - Number of nodes.\n * @param  {number}     size           - Number of edges.\n * @param  {number}     clusters       - Number of clusters.\n * @param  {function}   rng            - Custom RNG function.\n * @return {Graph}\n */\nmodule.exports = function (GraphClass, options) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/random/clusters: invalid Graph constructor.'\n    );\n\n  options = options || {};\n\n  var clusterDensity =\n      'clusterDensity' in options ? options.clusterDensity : 0.5,\n    rng = options.rng || Math.random,\n    N = options.order,\n    E = options.size,\n    C = options.clusters;\n\n  if (\n    typeof clusterDensity !== 'number' ||\n    clusterDensity > 1 ||\n    clusterDensity < 0\n  )\n    throw new Error(\n      'graphology-generators/random/clusters: `clusterDensity` option should be a number between 0 and 1.'\n    );\n\n  if (typeof rng !== 'function')\n    throw new Error(\n      'graphology-generators/random/clusters: `rng` option should be a function.'\n    );\n\n  if (typeof N !== 'number' || N <= 0)\n    throw new Error(\n      'graphology-generators/random/clusters: `order` option should be a positive number.'\n    );\n\n  if (typeof E !== 'number' || E <= 0)\n    throw new Error(\n      'graphology-generators/random/clusters: `size` option should be a positive number.'\n    );\n\n  if (typeof C !== 'number' || C <= 0)\n    throw new Error(\n      'graphology-generators/random/clusters: `clusters` option should be a positive number.'\n    );\n\n  // Creating graph\n  var graph = new GraphClass();\n\n  // Adding nodes\n  if (!N) return graph;\n\n  // Initializing clusters\n  var clusters = new Array(C),\n    cluster,\n    nodes,\n    i;\n\n  for (i = 0; i < C; i++) clusters[i] = [];\n\n  for (i = 0; i < N; i++) {\n    cluster = (rng() * C) | 0;\n    graph.addNode(i, {cluster: cluster});\n    clusters[cluster].push(i);\n  }\n\n  // Adding edges\n  if (!E) return graph;\n\n  var source, target, l;\n\n  for (i = 0; i < E; i++) {\n    // Adding a link between two random nodes\n    if (rng() < 1 - clusterDensity) {\n      source = (rng() * N) | 0;\n\n      do {\n        target = (rng() * N) | 0;\n      } while (source === target);\n    }\n\n    // Adding a link between two nodes from the same cluster\n    else {\n      cluster = (rng() * C) | 0;\n      nodes = clusters[cluster];\n      l = nodes.length;\n\n      if (!l || l < 2) {\n        // TODO: in those case we may have fewer edges than required\n        // TODO: check where E is over full clusterDensity\n        continue;\n      }\n\n      source = nodes[(rng() * l) | 0];\n\n      do {\n        target = nodes[(rng() * l) | 0];\n      } while (source === target);\n    }\n\n    if (!graph.multi) graph.mergeEdge(source, target);\n    else graph.addEdge(source, target);\n  }\n\n  return graph;\n};\n","/**\n * Graphology Simple Size\n * =======================\n *\n * Function returning the simple size of a graph, i.e. the size it would have\n * if it we assume it is a simple graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Simple size function.\n *\n * @param  {Graph}  graph - Target graph.\n * @return {number}\n */\nmodule.exports = function simpleSize(graph) {\n  // Handling errors\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/simple-size: the given graph is not a valid graphology instance.'\n    );\n\n  if (!graph.multi) return graph.size;\n\n  var u = 0;\n  var d = 0;\n\n  function accumulateUndirected() {\n    u++;\n  }\n\n  function accumulateDirected() {\n    d++;\n  }\n\n  graph.forEachNode(function (node) {\n    if (graph.type !== 'directed')\n      graph.forEachUndirectedNeighbor(node, accumulateUndirected);\n\n    if (graph.type !== 'undirected')\n      graph.forEachOutNeighbor(node, accumulateDirected);\n  });\n\n  return u / 2 + d;\n};\n","/**\n * Graphology Density\n * ===================\n *\n * Functions used to compute the density of the given graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar simpleSize = require('./simple-size.js');\n\n/**\n * Returns the undirected density.\n *\n * @param  {number} order - Number of nodes in the graph.\n * @param  {number} size  - Number of edges in the graph.\n * @return {number}\n */\nfunction undirectedDensity(order, size) {\n  return (2 * size) / (order * (order - 1));\n}\n\n/**\n * Returns the directed density.\n *\n * @param  {number} order - Number of nodes in the graph.\n * @param  {number} size  - Number of edges in the graph.\n * @return {number}\n */\nfunction directedDensity(order, size) {\n  return size / (order * (order - 1));\n}\n\n/**\n * Returns the mixed density.\n *\n * @param  {number} order - Number of nodes in the graph.\n * @param  {number} size  - Number of edges in the graph.\n * @return {number}\n */\nfunction mixedDensity(order, size) {\n  var d = order * (order - 1);\n\n  return size / (d + d / 2);\n}\n\n/**\n * Returns the density for the given parameters.\n *\n * Arity 3:\n * @param  {boolean} type  - Type of density.\n * @param  {boolean} multi - Compute multi density?\n * @param  {Graph}   graph - Target graph.\n *\n * Arity 4:\n * @param  {boolean} type  - Type of density.\n * @param  {boolean} multi - Compute multi density?\n * @param  {number}  order - Number of nodes in the graph.\n * @param  {number}  size  - Number of edges in the graph.\n *\n * @return {number}\n */\nfunction abstractDensity(type, multi, graph) {\n  var order, size;\n\n  // Retrieving order & size\n  if (arguments.length > 3) {\n    order = graph;\n    size = arguments[3];\n\n    if (typeof order !== 'number' || order < 0)\n      throw new Error(\n        'graphology-metrics/density: given order is not a valid number.'\n      );\n\n    if (typeof size !== 'number' || size < 0)\n      throw new Error(\n        'graphology-metrics/density: given size is not a valid number.'\n      );\n  } else {\n    if (!isGraph(graph))\n      throw new Error(\n        'graphology-metrics/density: given graph is not a valid graphology instance.'\n      );\n\n    order = graph.order;\n    size = graph.size;\n\n    if (graph.multi && multi === false) size = simpleSize(graph);\n  }\n\n  // When the graph has only one node, its density is 0\n  if (order < 2) return 0;\n\n  // Guessing type & multi\n  if (type === null) type = graph.type;\n  if (multi === null) multi = graph.multi;\n\n  // Getting the correct function\n  var fn;\n\n  if (type === 'undirected') fn = undirectedDensity;\n  else if (type === 'directed') fn = directedDensity;\n  else fn = mixedDensity;\n\n  // Applying the function\n  return fn(order, size);\n}\n\n/**\n * Exporting.\n */\nexports.abstractDensity = abstractDensity;\nexports.density = abstractDensity.bind(null, null, null);\nexports.directedDensity = abstractDensity.bind(null, 'directed', false);\nexports.undirectedDensity = abstractDensity.bind(null, 'undirected', false);\nexports.mixedDensity = abstractDensity.bind(null, 'mixed', false);\nexports.multiDirectedDensity = abstractDensity.bind(null, 'directed', true);\nexports.multiUndirectedDensity = abstractDensity.bind(null, 'undirected', true);\nexports.multiMixedDensity = abstractDensity.bind(null, 'mixed', true);\n","/**\n * Graphology Erdos-Renyi Graph Generator\n * =======================================\n *\n * Function generating binomial graphs.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\nvar density = require('graphology-metrics/graph/density').abstractDensity;\n\n/**\n * Generates a binomial graph graph with n nodes.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {object}   options       - Options:\n * @param  {number}     order       - Number of nodes in the graph.\n * @param  {number}     probability - Probability for edge creation.\n * @param  {function}   rng         - Custom RNG function.\n * @return {Graph}\n */\nfunction erdosRenyi(GraphClass, options) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid Graph constructor.'\n    );\n\n  var order = options.order;\n  var probability = options.probability;\n  var rng = options.rng || Math.random;\n\n  var graph = new GraphClass();\n\n  // If user gave a size, we need to compute probability\n  if (typeof options.approximateSize === 'number') {\n    probability = density(graph.type, false, order, options.approximateSize);\n  }\n\n  if (typeof order !== 'number' || order <= 0)\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid `order`. Should be a positive number.'\n    );\n\n  if (typeof probability !== 'number' || probability < 0 || probability > 1)\n    throw new Error(\n      \"graphology-generators/random/erdos-renyi: invalid `probability`. Should be a number between 0 and 1. Or maybe you gave an `approximateSize` exceeding the graph's density.\"\n    );\n\n  if (typeof rng !== 'function')\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid `rng`. Should be a function.'\n    );\n\n  var i, j;\n\n  for (i = 0; i < order; i++) graph.addNode(i);\n\n  if (probability <= 0) return graph;\n\n  for (i = 0; i < order; i++) {\n    for (j = i + 1; j < order; j++) {\n      if (graph.type !== 'directed') {\n        if (rng() < probability) graph.addUndirectedEdge(i, j);\n      }\n\n      if (graph.type !== 'undirected') {\n        if (rng() < probability) graph.addDirectedEdge(i, j);\n\n        if (rng() < probability) graph.addDirectedEdge(j, i);\n      }\n    }\n  }\n\n  return graph;\n}\n\n/**\n * Generates a binomial graph graph with n nodes using a faster algorithm\n * for sparse graphs.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {object}   options       - Options:\n * @param  {number}     order       - Number of nodes in the graph.\n * @param  {number}     probability - Probability for edge creation.\n * @param  {function}   rng         - Custom RNG function.\n * @return {Graph}\n */\nfunction erdosRenyiSparse(GraphClass, options) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid Graph constructor.'\n    );\n\n  var order = options.order;\n  var probability = options.probability;\n  var rng = options.rng || Math.random;\n\n  var graph = new GraphClass();\n\n  // If user gave a size, we need to compute probability\n  if (typeof options.approximateSize === 'number') {\n    probability = density(graph.type, false, order, options.approximateSize);\n  }\n\n  if (typeof order !== 'number' || order <= 0)\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid `order`. Should be a positive number.'\n    );\n\n  if (typeof probability !== 'number' || probability < 0 || probability > 1)\n    throw new Error(\n      \"graphology-generators/random/erdos-renyi: invalid `probability`. Should be a number between 0 and 1. Or maybe you gave an `approximateSize` exceeding the graph's density.\"\n    );\n\n  if (typeof rng !== 'function')\n    throw new Error(\n      'graphology-generators/random/erdos-renyi: invalid `rng`. Should be a function.'\n    );\n\n  for (var i = 0; i < order; i++) graph.addNode(i);\n\n  if (probability <= 0) return graph;\n\n  var w = -1,\n    lp = Math.log(1 - probability),\n    lr,\n    v;\n\n  if (graph.type !== 'undirected') {\n    v = 0;\n\n    while (v < order) {\n      lr = Math.log(1 - rng());\n      w += 1 + ((lr / lp) | 0);\n\n      // Avoiding self loops\n      if (v === w) {\n        w++;\n      }\n\n      while (v < order && order <= w) {\n        w -= order;\n        v++;\n\n        // Avoiding self loops\n        if (v === w) w++;\n      }\n\n      if (v < order) graph.addDirectedEdge(v, w);\n    }\n  }\n\n  w = -1;\n\n  if (graph.type !== 'directed') {\n    v = 1;\n\n    while (v < order) {\n      lr = Math.log(1 - rng());\n\n      w += 1 + ((lr / lp) | 0);\n\n      while (w >= v && v < order) {\n        w -= v;\n        v++;\n      }\n\n      if (v < order) graph.addUndirectedEdge(v, w);\n    }\n  }\n\n  return graph;\n}\n\n/**\n * Exporting.\n */\nerdosRenyi.sparse = erdosRenyiSparse;\nmodule.exports = erdosRenyi;\n","/**\n * Graphology Girvan-Newman Graph Generator\n * =========================================\n *\n * Function generating graphs liks the one used to test the Girvan-Newman\n * community algorithm.\n *\n * [Reference]:\n * http://www.pnas.org/content/99/12/7821.full.pdf\n *\n * [Article]:\n * Community Structure in  social and biological networks.\n * Girvan Newman, 2002. PNAS June, vol 99 n 12\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Generates a binomial graph graph with n nodes.\n *\n * @param  {Class}    GraphClass    - The Graph Class to instantiate.\n * @param  {object}   options       - Options:\n * @param  {number}     zOut        - zOut parameter.\n * @param  {function}   rng         - Custom RNG function.\n * @return {Graph}\n */\nmodule.exports = function girvanNewman(GraphClass, options) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/random/girvan-newman: invalid Graph constructor.'\n    );\n\n  var zOut = options.zOut,\n    rng = options.rng || Math.random;\n\n  if (typeof zOut !== 'number')\n    throw new Error(\n      'graphology-generators/random/girvan-newman: invalid `zOut`. Should be a number.'\n    );\n\n  if (typeof rng !== 'function')\n    throw new Error(\n      'graphology-generators/random/girvan-newman: invalid `rng`. Should be a function.'\n    );\n\n  var pOut = zOut / 96,\n    pIn = (16 - pOut * 96) / 31,\n    graph = new GraphClass(),\n    random,\n    i,\n    j;\n\n  for (i = 0; i < 128; i++) graph.addNode(i);\n\n  for (i = 0; i < 128; i++) {\n    for (j = i + 1; j < 128; j++) {\n      random = rng();\n\n      if (i % 4 === j % 4) {\n        if (random < pIn) graph.addEdge(i, j);\n      } else {\n        if (random < pOut) graph.addEdge(i, j);\n      }\n    }\n  }\n\n  return graph;\n};\n","/**\n * Graphology Random Graph Generators\n * ===================================\n *\n * Random graph generators endpoint.\n */\nexports.clusters = require('./clusters.js');\nexports.erdosRenyi = require('./erdos-renyi.js');\nexports.girvanNewman = require('./girvan-newman.js');\n","/**\n * Graphology mergeStar\n * =====================\n *\n * Function merging the given star to the graph.\n */\n\n/**\n * Merging the given star to the graph.\n *\n * @param  {Graph} graph - Target graph.\n * @param  {array} nodes - Nodes to add, first one being the center of the star.\n */\nmodule.exports = function mergeStar(graph, nodes) {\n  if (nodes.length === 0) return;\n\n  var node, i, l;\n\n  var center = nodes[0];\n\n  graph.mergeNode(center);\n\n  for (i = 1, l = nodes.length; i < l; i++) {\n    node = nodes[i];\n\n    graph.mergeEdge(center, node);\n  }\n};\n","/**\n * Graphology Krackhardt Kite Graph Generator\n * ===========================================\n *\n * Function generating the Krackhardt kite graph.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor'),\n  mergeStar = require('graphology-utils/merge-star');\n\n/**\n * Data.\n */\nvar ADJACENCY = [\n  ['Andre', 'Beverley', 'Carol', 'Diane', 'Fernando'],\n  ['Beverley', 'Andre', 'Ed', 'Garth'],\n  ['Carol', 'Andre', 'Diane', 'Fernando'],\n  ['Diane', 'Andre', 'Beverley', 'Carol', 'Ed', 'Fernando', 'Garth'],\n  ['Ed', 'Beverley', 'Diane', 'Garth'],\n  ['Fernando', 'Andre', 'Carol', 'Diane', 'Garth', 'Heather'],\n  ['Garth', 'Beverley', 'Diane', 'Ed', 'Fernando', 'Heather'],\n  ['Heather', 'Fernando', 'Garth', 'Ike'],\n  ['Ike', 'Heather', 'Jane'],\n  ['Jane', 'Ike']\n];\n\n/**\n * Function generating the Krackhardt kite graph.\n *\n * @param  {Class} GraphClass - The Graph Class to instantiate.\n * @return {Graph}\n */\nmodule.exports = function krackhardtKite(GraphClass) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/social/krackhardt-kite: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass(),\n    i,\n    l;\n\n  for (i = 0, l = ADJACENCY.length; i < l; i++) mergeStar(graph, ADJACENCY[i]);\n\n  return graph;\n};\n","/**\n * Graphology Small Graph Generators\n * ==================================\n *\n * Small graph generators endpoint.\n */\nexports.krackhardtKite = require('./krackhardt-kite.js');\n","/**\n * Graphology Florentine Families Graph Generator\n * ===============================================\n *\n * Function generating the Florentine Families graph.\n *\n * [Reference]:\n * Ronald L. Breiger and Philippa E. Pattison\n * Cumulated social roles: The duality of persons and their algebras,1\n * Social Networks, Volume 8, Issue 3, September 1986, Pages 215-256\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Data.\n */\nvar EDGES = [\n  ['Acciaiuoli', 'Medici'],\n  ['Castellani', 'Peruzzi'],\n  ['Castellani', 'Strozzi'],\n  ['Castellani', 'Barbadori'],\n  ['Medici', 'Barbadori'],\n  ['Medici', 'Ridolfi'],\n  ['Medici', 'Tornabuoni'],\n  ['Medici', 'Albizzi'],\n  ['Medici', 'Salviati'],\n  ['Salviati', 'Pazzi'],\n  ['Peruzzi', 'Strozzi'],\n  ['Peruzzi', 'Bischeri'],\n  ['Strozzi', 'Ridolfi'],\n  ['Strozzi', 'Bischeri'],\n  ['Ridolfi', 'Tornabuoni'],\n  ['Tornabuoni', 'Guadagni'],\n  ['Albizzi', 'Ginori'],\n  ['Albizzi', 'Guadagni'],\n  ['Bischeri', 'Guadagni'],\n  ['Guadagni', 'Lamberteschi']\n];\n\n/**\n * Function generating the florentine families graph.\n *\n * @param  {Class} GraphClass - The Graph Class to instantiate.\n * @return {Graph}\n */\nmodule.exports = function florentineFamilies(GraphClass) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/social/florentine-families: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass(),\n    edge,\n    i,\n    l;\n\n  for (i = 0, l = EDGES.length; i < l; i++) {\n    edge = EDGES[i];\n\n    graph.mergeEdge(edge[0], edge[1]);\n  }\n\n  return graph;\n};\n","/**\n * Graphology Karate Graph Generator\n * ==================================\n *\n * Function generating Zachary's karate club graph.\n *\n * [Reference]:\n * Zachary, Wayne W.\n * \"An Information Flow Model for Conflict and Fission in Small Groups.\"\n * Journal of Anthropological Research, 33, 452--473, (1977).\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\n\n/**\n * Data.\n */\nvar DATA = [\n  '0111111110111100010101000000000100',\n  '1011000100000100010101000000001000',\n  '1101000111000100000000000001100010',\n  '1110000100001100000000000000000000',\n  '1000001000100000000000000000000000',\n  '1000001000100000100000000000000000',\n  '1000110000000000100000000000000000',\n  '1111000000000000000000000000000000',\n  '1010000000000000000000000000001011',\n  '0010000000000000000000000000000001',\n  '1000110000000000000000000000000000',\n  '1000000000000000000000000000000000',\n  '1001000000000000000000000000000000',\n  '1111000000000000000000000000000001',\n  '0000000000000000000000000000000011',\n  '0000000000000000000000000000000011',\n  '0000011000000000000000000000000000',\n  '1100000000000000000000000000000000',\n  '0000000000000000000000000000000011',\n  '1100000000000000000000000000000001',\n  '0000000000000000000000000000000011',\n  '1100000000000000000000000000000000',\n  '0000000000000000000000000000000011',\n  '0000000000000000000000000101010011',\n  '0000000000000000000000000101000100',\n  '0000000000000000000000011000000100',\n  '0000000000000000000000000000010001',\n  '0010000000000000000000011000000001',\n  '0010000000000000000000000000000101',\n  '0000000000000000000000010010000011',\n  '0100000010000000000000000000000011',\n  '1000000000000000000000001100100011',\n  '0010000010000011001010110000011101',\n  '0000000011000111001110110011111110'\n];\n\nvar CLUB1 = new Set([\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 16, 17, 19, 21\n]);\n\n/**\n * Function generating the karate club graph.\n *\n * @param  {Class} GraphClass - The Graph Class to instantiate.\n * @return {Graph}\n */\nmodule.exports = function karateClub(GraphClass) {\n  if (!isGraphConstructor(GraphClass))\n    throw new Error(\n      'graphology-generators/social/karate: invalid Graph constructor.'\n    );\n\n  var graph = new GraphClass(),\n    club;\n\n  for (var i = 0; i < 34; i++) {\n    club = CLUB1.has(i) ? 'Mr. Hi' : 'Officer';\n\n    graph.addNode(i, {club: club});\n  }\n\n  var line, entry, row, column, l, m;\n\n  for (row = 0, l = DATA.length; row < l; row++) {\n    line = DATA[row].split('');\n\n    for (column = row + 1, m = line.length; column < m; column++) {\n      entry = +line[column];\n\n      if (entry) graph.addEdgeWithKey(row + '->' + column, row, column);\n    }\n  }\n\n  return graph;\n};\n","/**\n * Graphology Social Graph Generators\n * ===================================\n *\n * Social graph generators endpoint.\n */\nexports.florentineFamilies = require('./florentine-families.js');\nexports.karateClub = require('./karate-club.js');\n","/**\n * Graphology Graph Generators\n * ============================\n *\n * Library endpoint.\n */\nexports.classic = require('./classic');\nexports.community = require('./community');\nexports.random = require('./random');\nexports.small = require('./small');\nexports.social = require('./social');\n","module.exports = require('graphology-generators');\n","/**\n * Pandemonium Random\n * ===================\n *\n * Random function.\n */\n\n/**\n * Creating a function returning a random integer such as a <= N <= b.\n *\n * @param  {function} rng - RNG function returning uniform random.\n * @return {function}     - The created function.\n */\nfunction createRandom(rng) {\n\n  /**\n   * Random function.\n   *\n   * @param  {number} a - From.\n   * @param  {number} b - To.\n   * @return {number}\n   */\n  return function(a, b) {\n    return a + Math.floor(rng() * (b - a + 1));\n  };\n}\n\n/**\n * Default random using `Math.random`.\n */\nvar random = createRandom(Math.random);\n\n/**\n * Exporting.\n */\nrandom.createRandom = createRandom;\nmodule.exports = random;\n","/**\n * Pandemonium Shuffle In Place\n * =============================\n *\n * Shuffle function applying the Fisher-Yates algorithm to the provided array.\n */\nvar createRandom = require('./random.js').createRandom;\n\n/**\n * Creating a function returning the given array shuffled.\n *\n * @param  {function} rng - The RNG to use.\n * @return {function}     - The created function.\n */\nfunction createShuffleInPlace(rng) {\n  var customRandom = createRandom(rng);\n\n  /**\n   * Function returning the shuffled array.\n   *\n   * @param  {array}  sequence - Target sequence.\n   * @return {array}           - The shuffled sequence.\n   */\n  return function(sequence) {\n    var length = sequence.length,\n        lastIndex = length - 1;\n\n    var index = -1;\n\n    while (++index < length) {\n      var r = customRandom(index, lastIndex),\n          value = sequence[r];\n\n      sequence[r] = sequence[index];\n      sequence[index] = value;\n    }\n  };\n}\n\n/**\n * Default shuffle in place using `Math.random`.\n */\nvar shuffleInPlace = createShuffleInPlace(Math.random);\n\n/**\n * Exporting.\n */\nshuffleInPlace.createShuffleInPlace = createShuffleInPlace;\nmodule.exports = shuffleInPlace;\n","/**\n * Graphology CirclePack Layout\n * =============================\n *\n * Circlepack layout from d3-hierarchy/gephi.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar shuffle = require('pandemonium/shuffle-in-place');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  attributes: {\n    x: 'x',\n    y: 'y'\n  },\n  center: 0,\n  hierarchyAttributes: [],\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Helpers.\n */\nfunction CircleWrap(id, x, y, r, circleWrap) {\n  this.wrappedCircle = circleWrap || null; //hacky d3 reference thing\n\n  this.children = {};\n  this.countChildren = 0;\n  this.id = id || null;\n  this.next = null;\n  this.previous = null;\n\n  this.x = x || null;\n  this.y = y || null;\n  if (circleWrap) this.r = 1010101;\n  // for debugging purposes - should not be used in this case\n  else this.r = r || 999;\n}\n\nCircleWrap.prototype.hasChildren = function () {\n  return this.countChildren > 0;\n};\n\nCircleWrap.prototype.addChild = function (id, child) {\n  this.children[id] = child;\n  ++this.countChildren;\n};\n\nCircleWrap.prototype.getChild = function (id) {\n  if (!this.children.hasOwnProperty(id)) {\n    var circleWrap = new CircleWrap();\n    this.children[id] = circleWrap;\n    ++this.countChildren;\n  }\n  return this.children[id];\n};\n\nCircleWrap.prototype.applyPositionToChildren = function () {\n  if (this.hasChildren()) {\n    var root = this; // using 'this' in Object.keys.forEach seems a bad idea\n    for (var key in root.children) {\n      var child = root.children[key];\n      child.x += root.x;\n      child.y += root.y;\n      child.applyPositionToChildren();\n    }\n  }\n};\n\nfunction setNode(/*Graph*/ graph, /*CircleWrap*/ parentCircle, /*Map*/ posMap) {\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    if (circle.hasChildren()) {\n      setNode(graph, circle, posMap);\n    } else {\n      posMap[circle.id] = {x: circle.x, y: circle.y};\n    }\n  }\n}\n\nfunction enclosesNot(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r - b.r + 1e-6;\n  var dx = b.x - a.x;\n  var dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(/*CircleWrap*/ a, /*Array<CircleWrap>*/ B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis1(/*CircleWrap*/ a) {\n  return new CircleWrap(null, a.x, a.y, a.r);\n}\n\nfunction encloseBasis2(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x21 = x2 - x1,\n    y21 = y2 - y1,\n    r21 = r2 - r1,\n    l = Math.sqrt(x21 * x21 + y21 * y21);\n  return new CircleWrap(\n    null,\n    (x1 + x2 + (x21 / l) * r21) / 2,\n    (y1 + y2 + (y21 / l) * r21) / 2,\n    (l + r1 + r2) / 2\n  );\n}\n\nfunction encloseBasis3(/*CircleWrap*/ a, /*CircleWrap*/ b, /*CircleWrap*/ c) {\n  var x1 = a.x,\n    y1 = a.y,\n    r1 = a.r,\n    x2 = b.x,\n    y2 = b.y,\n    r2 = b.r,\n    x3 = c.x,\n    y3 = c.y,\n    r3 = c.r,\n    a2 = x1 - x2,\n    a3 = x1 - x3,\n    b2 = y1 - y2,\n    b3 = y1 - y3,\n    c2 = r2 - r1,\n    c3 = r3 - r1,\n    d1 = x1 * x1 + y1 * y1 - r1 * r1,\n    d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n    d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n    ab = a3 * b2 - a2 * b3,\n    xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n    xb = (b3 * c2 - b2 * c3) / ab,\n    ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n    yb = (a2 * c3 - a3 * c2) / ab,\n    A = xb * xb + yb * yb - 1,\n    B = 2 * (r1 + xa * xb + ya * yb),\n    C = xa * xa + ya * ya - r1 * r1,\n    r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return new CircleWrap(null, x1 + xa + xb * r, y1 + ya + yb * r, r);\n}\n\nfunction encloseBasis(/*Array<CircleWrap>*/ B) {\n  switch (B.length) {\n    case 1:\n      return encloseBasis1(B[0]);\n    case 2:\n      return encloseBasis2(B[0], B[1]);\n    case 3:\n      return encloseBasis3(B[0], B[1], B[2]);\n    default:\n      throw new Error(\n        'graphology-layout/circlepack: Invalid basis length ' + B.length\n      );\n  }\n}\n\nfunction extendBasis(/*Array<CircleWrap>*/ B, /*CircleWrap*/ p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i]) && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (\n        enclosesNot(encloseBasis2(B[i], B[j]), p) &&\n        enclosesNot(encloseBasis2(B[i], p), B[j]) &&\n        enclosesNot(encloseBasis2(B[j], p), B[i]) &&\n        enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)\n      ) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error('graphology-layout/circlepack: extendBasis failure !');\n}\n\nfunction score(/*CircleWrap*/ node) {\n  var a = node.wrappedCircle;\n  var b = node.next.wrappedCircle;\n  var ab = a.r + b.r;\n  var dx = (a.x * b.r + b.x * a.r) / ab;\n  var dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction enclose(circles, shuffleFunc) {\n  var i = 0;\n  var circlesLoc = circles.slice();\n\n  var n = circles.length;\n  var B = [];\n  var p;\n  var e;\n  shuffleFunc(circlesLoc);\n  while (i < n) {\n    p = circlesLoc[i];\n    if (e && enclosesWeak(e, p)) {\n      ++i;\n    } else {\n      B = extendBasis(B, p);\n      e = encloseBasis(B);\n      i = 0;\n    }\n  }\n  return e;\n}\n\nfunction place(/*CircleWrap*/ b, /*CircleWrap*/ a, /*CircleWrap*/ c) {\n  var dx = b.x - a.x,\n    x,\n    a2,\n    dy = b.y - a.y,\n    y,\n    b2,\n    d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r;\n    a2 *= a2;\n    b2 = b.r + c.r;\n    b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(/*CircleWrap*/ a, /*CircleWrap*/ b) {\n  var dr = a.r + b.r - 1e-6,\n    dx = b.x - a.x,\n    dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction packEnclose(/*Array<CircleWrap>*/ circles, shuffleFunc) {\n  var n = circles.length;\n  if (n === 0) return 0;\n\n  var a, b, c, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0];\n  a.x = 0;\n  a.y = 0;\n  if (n <= 1) return a.r;\n\n  // Place the second circle.\n  b = circles[1];\n  a.x = -b.r;\n  b.x = a.r;\n  b.y = 0;\n  if (n <= 2) return a.r + b.r;\n\n  // Place the third circle.\n  c = circles[2];\n  place(b, a, c);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new CircleWrap(null, null, null, null, a);\n  b = new CircleWrap(null, null, null, null, b);\n  c = new CircleWrap(null, null, null, null, c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    c = circles[i];\n    place(a.wrappedCircle, b.wrappedCircle, c);\n    c = new CircleWrap(null, null, null, null, c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next;\n    k = a.previous;\n    sj = b.wrappedCircle.r;\n    sk = a.wrappedCircle.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j.wrappedCircle, c.wrappedCircle)) {\n          b = j;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sj += j.wrappedCircle.r;\n        j = j.next;\n      } else {\n        if (intersects(k.wrappedCircle, c.wrappedCircle)) {\n          a = k;\n          a.next = b;\n          b.previous = a;\n          --i;\n          continue pack;\n        }\n        sk += k.wrappedCircle.r;\n        k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a;\n    c.next = b;\n    a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c;\n        aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b.wrappedCircle];\n  c = b;\n  var safety = 10000;\n  while ((c = c.next) !== b) {\n    if (--safety === 0) {\n      break;\n    }\n    a.push(c.wrappedCircle);\n  }\n  c = enclose(a, shuffleFunc);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) {\n    a = circles[i];\n    a.x -= c.x;\n    a.y -= c.y;\n  }\n  return c.r;\n}\n\nfunction packHierarchy(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  var r = 0;\n  if (parentCircle.hasChildren()) {\n    //pack the children first because the radius is determined by how the children get packed (recursive)\n    for (var key in parentCircle.children) {\n      var circle = parentCircle.children[key];\n      if (circle.hasChildren()) {\n        circle.r = packHierarchy(circle, shuffleFunc);\n      }\n    }\n    //now that each circle has a radius set by its children, pack the circles at this level\n    r = packEnclose(Object.values(parentCircle.children), shuffleFunc);\n  }\n  return r;\n}\n\nfunction packHierarchyAndShift(/*CircleWrap*/ parentCircle, shuffleFunc) {\n  packHierarchy(parentCircle, shuffleFunc);\n  for (var key in parentCircle.children) {\n    var circle = parentCircle.children[key];\n    circle.applyPositionToChildren();\n  }\n}\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph                   - Target  graph.\n * @param  {object}   [options]               - Options:\n * @param  {object}     [attributes]          - Attributes names to map.\n * @param  {number}     [center]              - Center of the layout.\n * @param  {string[]}   [hierarchyAttributes] - List of attributes used for the layout in decreasing order.\n * @param  {function}   [rng]                 - Custom RNG function to be used.\n * @param  {number}     [scale]               - Scale of the layout.\n * @return {object}                           - The positions by node.\n */\nfunction genericCirclePackLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/circlepack: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var posMap = {},\n    positions = {},\n    nodes = graph.nodes(),\n    center = options.center,\n    hierarchyAttributes = options.hierarchyAttributes,\n    shuffleFunc = shuffle.createShuffleInPlace(options.rng),\n    scale = options.scale;\n\n  var container = new CircleWrap();\n\n  graph.forEachNode(function (key, attributes) {\n    var r = attributes.size ? attributes.size : 1;\n    var newCircleWrap = new CircleWrap(key, null, null, r);\n    var parentContainer = container;\n\n    hierarchyAttributes.forEach(function (v) {\n      var attr = attributes[v];\n      parentContainer = parentContainer.getChild(attr);\n    });\n\n    parentContainer.addChild(key, newCircleWrap);\n  });\n  packHierarchyAndShift(container, shuffleFunc);\n  setNode(graph, container, posMap);\n  var l = nodes.length,\n    x,\n    y,\n    i;\n  for (i = 0; i < l; i++) {\n    var node = nodes[i];\n\n    x = center + scale * posMap[node].x;\n    y = center + scale * posMap[node].y;\n\n    positions[node] = {\n      x: x,\n      y: y\n    };\n\n    if (assign) {\n      graph.setNodeAttribute(node, options.attributes.x, x);\n      graph.setNodeAttribute(node, options.attributes.y, y);\n    }\n  }\n  return positions;\n}\n\nvar circlePackLayout = genericCirclePackLayout.bind(null, false);\ncirclePackLayout.assign = genericCirclePackLayout.bind(null, true);\n\nmodule.exports = circlePackLayout;\n","/**\n * Graphology Circular Layout\n * ===========================\n *\n * Layout arranging the nodes in a circle.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {object}     [attributes] - Attributes names to map.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericCircularLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var center = options.center;\n  var scale = options.scale;\n  var tau = Math.PI * 2;\n\n  var offset = (center - 0.5) * scale;\n  var l = graph.order;\n\n  var x = dimensions[0];\n  var y = dimensions[1];\n\n  function assignPosition(i, target) {\n    target[x] = scale * Math.cos((i * tau) / l) + offset;\n    target[y] = scale * Math.sin((i * tau) / l) + offset;\n\n    return target;\n  }\n\n  var i = 0;\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition(i++, {});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(i++, attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar circularLayout = genericCircularLayout.bind(null, false);\ncircularLayout.assign = genericCircularLayout.bind(null, true);\n\nmodule.exports = circularLayout;\n","/**\n * Graphology Random Layout\n * =========================\n *\n * Simple layout giving uniform random positions to the nodes.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  center: 0.5,\n  rng: Math.random,\n  scale: 1\n};\n\n/**\n * Abstract function running the layout.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {object}   [options]      - Options:\n * @param  {array}      [dimensions] - List of dimensions of the layout.\n * @param  {number}     [center]     - Center of the layout.\n * @param  {function}   [rng]        - Custom RNG function to be used.\n * @param  {number}     [scale]      - Scale of the layout.\n * @return {object}                  - The positions by node.\n */\nfunction genericRandomLayout(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/random: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length < 1)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  var d = dimensions.length;\n  var center = options.center;\n  var rng = options.rng;\n  var scale = options.scale;\n\n  var offset = (center - 0.5) * scale;\n\n  function assignPosition(target) {\n    for (var i = 0; i < d; i++) {\n      target[dimensions[i]] = rng() * scale + offset;\n    }\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node) {\n      positions[node] = assignPosition({});\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar randomLayout = genericRandomLayout.bind(null, false);\nrandomLayout.assign = genericRandomLayout.bind(null, true);\n\nmodule.exports = randomLayout;\n","/**\n * Graphology Rotation Layout Helper\n * ==================================\n *\n * Function rotating the coordinates of the graph.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Constants.\n */\nvar RAD_CONVERSION = Math.PI / 180;\n\n/**\n * Default options.\n */\nvar DEFAULTS = {\n  dimensions: ['x', 'y'],\n  centeredOnZero: false,\n  degrees: false\n};\n\n/**\n * Abstract function for rotating a graph's coordinates.\n *\n * @param  {Graph}    graph          - Target  graph.\n * @param  {number}   angle          - Rotation angle.\n * @param  {object}   [options]      - Options.\n * @return {object}                  - The positions by node.\n */\nfunction genericRotation(assign, graph, angle, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout/rotation: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  if (options.degrees) angle *= RAD_CONVERSION;\n\n  var dimensions = options.dimensions;\n\n  if (!Array.isArray(dimensions) || dimensions.length !== 2)\n    throw new Error('graphology-layout/random: given dimensions are invalid.');\n\n  // Handling null graph\n  if (graph.order === 0) {\n    if (assign) return;\n\n    return {};\n  }\n\n  var xd = dimensions[0];\n  var yd = dimensions[1];\n\n  var xCenter = 0;\n  var yCenter = 0;\n\n  if (!options.centeredOnZero) {\n    // Finding bounds of the graph\n    var xMin = Infinity;\n    var xMax = -Infinity;\n    var yMin = Infinity;\n    var yMax = -Infinity;\n\n    graph.forEachNode(function (node, attr) {\n      var x = attr[xd];\n      var y = attr[yd];\n\n      if (x < xMin) xMin = x;\n      if (x > xMax) xMax = x;\n      if (y < yMin) yMin = y;\n      if (y > yMax) yMax = y;\n    });\n\n    xCenter = (xMin + xMax) / 2;\n    yCenter = (yMin + yMax) / 2;\n  }\n\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n\n  function assignPosition(target) {\n    var x = target[xd];\n    var y = target[yd];\n\n    target[xd] = xCenter + (x - xCenter) * cos - (y - yCenter) * sin;\n    target[yd] = yCenter + (x - xCenter) * sin + (y - yCenter) * cos;\n\n    return target;\n  }\n\n  if (!assign) {\n    var positions = {};\n\n    graph.forEachNode(function (node, attr) {\n      var o = {};\n      o[xd] = attr[xd];\n      o[yd] = attr[yd];\n      positions[node] = assignPosition(o);\n    });\n\n    return positions;\n  }\n\n  graph.updateEachNodeAttributes(\n    function (_, attr) {\n      assignPosition(attr);\n      return attr;\n    },\n    {\n      attributes: dimensions\n    }\n  );\n}\n\nvar rotation = genericRotation.bind(null, false);\nrotation.assign = genericRotation.bind(null, true);\n\nmodule.exports = rotation;\n","/**\n * Graphology Layout\n * ==================\n *\n * Library endpoint.\n */\nexports.circlepack = require('./circlepack.js');\nexports.circular = require('./circular.js');\nexports.random = require('./random.js');\nexports.rotation = require('./rotation.js');\n","module.exports = require('graphology-layout');\n","module.exports = require('graphology-layout');\n","/* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0;\nvar NODE_Y = 1;\nvar NODE_DX = 2;\nvar NODE_DY = 3;\nvar NODE_OLD_DX = 4;\nvar NODE_OLD_DY = 5;\nvar NODE_MASS = 6;\nvar NODE_CONVERGENCE = 7;\nvar NODE_SIZE = 8;\nvar NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0;\nvar EDGE_TARGET = 1;\nvar EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0;\nvar REGION_CENTER_X = 1;\nvar REGION_CENTER_Y = 2;\nvar REGION_SIZE = 3;\nvar REGION_NEXT_SIBLING = 4;\nvar REGION_FIRST_CHILD = 5;\nvar REGION_MASS = 6;\nvar REGION_MASS_CENTER_X = 7;\nvar REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\nvar PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n    size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= order / PPN;\n  }\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n    // Setting up\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity,\n      q,\n      q2,\n      subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX,\n      dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    } else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            } else {\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          } else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            } else {\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        } else {\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          } else {\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] =\n              RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] <\n              RegionMatrix[r + REGION_CENTER_X]\n            ) {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              } else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance =\n            Math.pow(\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X],\n              2\n            ) +\n            Math.pow(\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y],\n              2\n            );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n            // We treat the region as a single body, and we repulse\n\n            xDist =\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist =\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0) break; // No next sibling: we have finished the tree\n\n            continue;\n          } else {\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n        } else {\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0) break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  } else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n          //-- Anticollision Linear Repulsion\n          distance =\n            Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] += xDist * factor;\n            NodeMatrix[n2 + NODE_DY] += yDist * factor;\n          } else if (distance < 0) {\n            factor =\n              100 *\n              coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        } else {\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (options.strongGravityMode) {\n      //-- Strong gravity\n      if (distance > 0) factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    } else {\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = (coefficient * NodeMatrix[n + NODE_MASS] * g) / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient =\n    1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n      distance = Math.sqrt(\n        Math.pow(xDist, 2) +\n          Math.pow(yDist, 2) -\n          NodeMatrix[n1 + NODE_SIZE] -\n          NodeMatrix[n2 + NODE_SIZE]\n      );\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n          }\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    } else {\n      distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n        } else {\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n  // 5) Apply Forces\n  //-----------------\n  var force, swinging, traction, nodespeed, newX, newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n            Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            (NodeMatrix[n + NODE_DX] * MAX_FORCE) / force;\n          NodeMatrix[n + NODE_DY] =\n            (NodeMatrix[n + NODE_DY] * MAX_FORCE) / force;\n        }\n\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed = (0.1 * Math.log(1 + traction)) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  } else {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed =\n          (NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction)) /\n          (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] = Math.min(\n          1,\n          Math.sqrt(\n            (nodespeed *\n              (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                Math.pow(NodeMatrix[n + NODE_DY], 2))) /\n              (1 + Math.sqrt(swinging))\n          )\n        );\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n","/**\n * Graphology ForceAtlas2 Helpers\n * ===============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\n\n/**\n * Very simple Object.assign-like function.\n *\n * @param  {object} target       - First object.\n * @param  {object} [...objects] - Objects to merge.\n * @return {object}\n */\nexports.assign = function (target) {\n  target = target || {};\n\n  var objects = Array.prototype.slice.call(arguments).slice(1),\n    i,\n    k,\n    l;\n\n  for (i = 0, l = objects.length; i < l; i++) {\n    if (!objects[i]) continue;\n\n    for (k in objects[i]) target[k] = objects[i][k];\n  }\n\n  return target;\n};\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function (settings) {\n  if ('linLogMode' in settings && typeof settings.linLogMode !== 'boolean')\n    return {message: 'the `linLogMode` setting should be a boolean.'};\n\n  if (\n    'outboundAttractionDistribution' in settings &&\n    typeof settings.outboundAttractionDistribution !== 'boolean'\n  )\n    return {\n      message:\n        'the `outboundAttractionDistribution` setting should be a boolean.'\n    };\n\n  if ('adjustSizes' in settings && typeof settings.adjustSizes !== 'boolean')\n    return {message: 'the `adjustSizes` setting should be a boolean.'};\n\n  if (\n    'edgeWeightInfluence' in settings &&\n    typeof settings.edgeWeightInfluence !== 'number'\n  )\n    return {\n      message: 'the `edgeWeightInfluence` setting should be a number.'\n    };\n\n  if (\n    'scalingRatio' in settings &&\n    !(typeof settings.scalingRatio === 'number' && settings.scalingRatio >= 0)\n  )\n    return {message: 'the `scalingRatio` setting should be a number >= 0.'};\n\n  if (\n    'strongGravityMode' in settings &&\n    typeof settings.strongGravityMode !== 'boolean'\n  )\n    return {message: 'the `strongGravityMode` setting should be a boolean.'};\n\n  if (\n    'gravity' in settings &&\n    !(typeof settings.gravity === 'number' && settings.gravity >= 0)\n  )\n    return {message: 'the `gravity` setting should be a number >= 0.'};\n\n  if (\n    'slowDown' in settings &&\n    !(typeof settings.slowDown === 'number' || settings.slowDown >= 0)\n  )\n    return {message: 'the `slowDown` setting should be a number >= 0.'};\n\n  if (\n    'barnesHutOptimize' in settings &&\n    typeof settings.barnesHutOptimize !== 'boolean'\n  )\n    return {message: 'the `barnesHutOptimize` setting should be a boolean.'};\n\n  if (\n    'barnesHutTheta' in settings &&\n    !(\n      typeof settings.barnesHutTheta === 'number' &&\n      settings.barnesHutTheta >= 0\n    )\n  )\n    return {message: 'the `barnesHutTheta` setting should be a number >= 0.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for both nodes & edges of the given graph.\n *\n * @param  {Graph}       graph           - Target graph.\n * @param  {string|null} weightAttribute - Name of the edge weight attribute.\n * @return {object}                      - Both matrices.\n */\nexports.graphToByteArrays = function (graph, weightAttribute) {\n  var order = graph.order;\n  var size = graph.size;\n  var index = {};\n  var j;\n\n  var NodeMatrix = new Float32Array(order * PPN);\n  var EdgeMatrix = new Float32Array(size * PPE);\n\n  // Iterate through nodes\n  j = 0;\n  graph.forEachNode(function (node, attr) {\n    // Node index\n    index[node] = j;\n\n    // Populating byte array\n    NodeMatrix[j] = attr.x;\n    NodeMatrix[j + 1] = attr.y;\n    NodeMatrix[j + 2] = 0;\n    NodeMatrix[j + 3] = 0;\n    NodeMatrix[j + 4] = 0;\n    NodeMatrix[j + 5] = 0;\n    NodeMatrix[j + 6] = 1 + graph.degree(node);\n    NodeMatrix[j + 7] = 1;\n    NodeMatrix[j + 8] = attr.size || 1;\n    NodeMatrix[j + 9] = attr.fixed ? 1 : 0;\n    j += PPN;\n  });\n\n  // Iterate through edges\n  var weightGetter = function (attr) {\n    if (!weightAttribute) return 1;\n\n    var w = attr[weightAttribute];\n\n    if (typeof w !== 'number' || isNaN(w)) w = 1;\n\n    return w;\n  };\n\n  j = 0;\n  graph.forEachEdge(function (_, attr, source, target) {\n    // Populating byte array\n    EdgeMatrix[j] = index[source];\n    EdgeMatrix[j + 1] = index[target];\n    EdgeMatrix[j + 2] = weightGetter(attr);\n    j += PPE;\n  });\n\n  return {\n    nodes: NodeMatrix,\n    edges: EdgeMatrix\n  };\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n */\nexports.assignLayoutChanges = function (graph, NodeMatrix) {\n  var i = 0;\n\n  graph.updateEachNodeAttributes(\n    function (node, attr) {\n      attr.x = NodeMatrix[i];\n      attr.y = NodeMatrix[i + 1];\n\n      i += PPN;\n\n      return attr;\n    },\n    {attributes: ['x', 'y']}\n  );\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}        graph      - Target graph.\n * @param  {Float32Array} NodeMatrix - Node matrix.\n * @return {object}                  - Map to node positions.\n */\nexports.collectLayoutChanges = function (graph, NodeMatrix) {\n  var nodes = graph.nodes(),\n    positions = {};\n\n  for (var i = 0, j = 0, l = NodeMatrix.length; i < l; i += PPN) {\n    positions[nodes[j]] = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    j++;\n  }\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(\n    new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'})\n  );\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n","/**\n * Graphology ForceAtlas2 Layout Default Settings\n * ===============================================\n */\nmodule.exports = {\n  linLogMode: false,\n  outboundAttractionDistribution: false,\n  adjustSizes: false,\n  edgeWeightInfluence: 1,\n  scalingRatio: 1,\n  strongGravityMode: false,\n  gravity: 1,\n  slowDown: 1,\n  barnesHutOptimize: false,\n  barnesHutTheta: 0.5\n};\n","/**\n * Graphology ForceAtlas2 Layout\n * ==============================\n *\n * Library endpoint.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n  iterate = require('./iterate.js'),\n  helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Asbtract function used to run a certain number of iterations.\n *\n * @param  {boolean}       assign       - Whether to assign positions.\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - If number, params.iterations, else:\n * @param  {object}          attributes - Attribute names:\n * @param  {string}            weight   - Name of the edge weight attribute.\n * @param  {boolean}         weighted   - Whether to take edge weights into account.\n * @param  {number}          iterations - Number of iterations.\n * @param  {object}          [settings] - Settings.\n * @return {object|undefined}\n */\nfunction abstractSynchronousLayout(assign, graph, params) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-forceatlas2: the given graph is not a valid graphology instance.'\n    );\n\n  if (typeof params === 'number') params = {iterations: params};\n\n  var iterations = params.iterations;\n\n  if (typeof iterations !== 'number')\n    throw new Error(\n      'graphology-layout-forceatlas2: invalid number of iterations.'\n    );\n\n  if (iterations <= 0)\n    throw new Error(\n      'graphology-layout-forceatlas2: you should provide a positive number of iterations.'\n    );\n\n  var attributes = params.attributes || {};\n  var weightAttribute = params.weighted ? attributes.weight || 'weight' : null;\n\n  // Validating settings\n  var settings = helpers.assign({}, DEFAULT_SETTINGS, params.settings);\n  var validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error(\n      'graphology-layout-forceatlas2: ' + validationError.message\n    );\n\n  // Building matrices\n  var matrices = helpers.graphToByteArrays(graph, weightAttribute);\n\n  var i;\n\n  // Iterating\n  for (i = 0; i < iterations; i++)\n    iterate(settings, matrices.nodes, matrices.edges);\n\n  // Applying\n  if (assign) {\n    helpers.assignLayoutChanges(graph, matrices.nodes);\n    return;\n  }\n\n  return helpers.collectLayoutChanges(graph, matrices.nodes);\n}\n\n/**\n * Function returning sane layout settings for the given graph.\n *\n * @param  {Graph|number} graph - Target graph or graph order.\n * @return {object}\n */\nfunction inferSettings(graph) {\n  var order = typeof graph === 'number' ? graph : graph.order;\n\n  return {\n    barnesHutOptimize: order > 2000,\n    strongGravityMode: true,\n    gravity: 0.05,\n    scalingRatio: 10,\n    slowDown: 1 + Math.log(order)\n  };\n}\n\n/**\n * Exporting.\n */\nvar synchronousLayout = abstractSynchronousLayout.bind(null, false);\nsynchronousLayout.assign = abstractSynchronousLayout.bind(null, true);\nsynchronousLayout.inferSettings = inferSettings;\n\nmodule.exports = synchronousLayout;\n","module.exports = require('graphology-layout-forceatlas2');\n","/**\n * Graphology Noverlap Iteration\n * ==============================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0,\n  NODE_Y = 1,\n  NODE_SIZE = 2;\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Helpers.\n */\nfunction hashPair(a, b) {\n  return a + '§' + b;\n}\n\nfunction jitter() {\n  return 0.01 * (0.5 - Math.random());\n}\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @return {object}                  - Some metadata.\n */\nmodule.exports = function iterate(options, NodeMatrix) {\n  // Caching options\n  var margin = options.margin;\n  var ratio = options.ratio;\n  var expansion = options.expansion;\n  var gridSize = options.gridSize; // TODO: decrease grid size when few nodes?\n  var speed = options.speed;\n\n  // Generic iteration variables\n  var i, j, x, y, l, size;\n  var converged = true;\n\n  var length = NodeMatrix.length;\n  var order = (length / PPN) | 0;\n\n  var deltaX = new Float32Array(order);\n  var deltaY = new Float32Array(order);\n\n  // Finding the extents of our space\n  var xMin = Infinity;\n  var yMin = Infinity;\n  var xMax = -Infinity;\n  var yMax = -Infinity;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    xMin = Math.min(xMin, x - size);\n    xMax = Math.max(xMax, x + size);\n    yMin = Math.min(yMin, y - size);\n    yMax = Math.max(yMax, y + size);\n  }\n\n  var width = xMax - xMin;\n  var height = yMax - yMin;\n  var xCenter = (xMin + xMax) / 2;\n  var yCenter = (yMin + yMax) / 2;\n\n  xMin = xCenter - (expansion * width) / 2;\n  xMax = xCenter + (expansion * width) / 2;\n  yMin = yCenter - (expansion * height) / 2;\n  yMax = yCenter + (expansion * height) / 2;\n\n  // Building grid\n  var grid = new Array(gridSize * gridSize),\n    gridLength = grid.length,\n    c;\n\n  for (c = 0; c < gridLength; c++) grid[c] = [];\n\n  var nxMin, nxMax, nyMin, nyMax;\n  var xMinBox, xMaxBox, yMinBox, yMaxBox;\n\n  var col, row;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    nxMin = x - size;\n    nxMax = x + size;\n    nyMin = y - size;\n    nyMax = y + size;\n\n    xMinBox = Math.floor((gridSize * (nxMin - xMin)) / (xMax - xMin));\n    xMaxBox = Math.floor((gridSize * (nxMax - xMin)) / (xMax - xMin));\n    yMinBox = Math.floor((gridSize * (nyMin - yMin)) / (yMax - yMin));\n    yMaxBox = Math.floor((gridSize * (nyMax - yMin)) / (yMax - yMin));\n\n    for (col = xMinBox; col <= xMaxBox; col++) {\n      for (row = yMinBox; row <= yMaxBox; row++) {\n        grid[col * gridSize + row].push(i);\n      }\n    }\n  }\n\n  // Computing collisions\n  var cell;\n\n  var collisions = new Set();\n\n  var n1, n2, x1, x2, y1, y2, s1, s2, h;\n\n  var xDist, yDist, dist, collision;\n\n  for (c = 0; c < gridLength; c++) {\n    cell = grid[c];\n\n    for (i = 0, l = cell.length; i < l; i++) {\n      n1 = cell[i];\n\n      x1 = NodeMatrix[n1 + NODE_X];\n      y1 = NodeMatrix[n1 + NODE_Y];\n      s1 = NodeMatrix[n1 + NODE_SIZE];\n\n      for (j = i + 1; j < l; j++) {\n        n2 = cell[j];\n        h = hashPair(n1, n2);\n\n        if (gridLength > 1 && collisions.has(h)) continue;\n\n        if (gridLength > 1) collisions.add(h);\n\n        x2 = NodeMatrix[n2 + NODE_X];\n        y2 = NodeMatrix[n2 + NODE_Y];\n        s2 = NodeMatrix[n2 + NODE_SIZE];\n\n        xDist = x2 - x1;\n        yDist = y2 - y1;\n        dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        collision = dist < s1 * ratio + margin + (s2 * ratio + margin);\n\n        if (collision) {\n          converged = false;\n\n          n2 = (n2 / PPN) | 0;\n\n          if (dist > 0) {\n            deltaX[n2] += (xDist / dist) * (1 + s1);\n            deltaY[n2] += (yDist / dist) * (1 + s1);\n          } else {\n            // Nodes are on the exact same spot, we need to jitter a bit\n            deltaX[n2] += width * jitter();\n            deltaY[n2] += height * jitter();\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0, j = 0; i < length; i += PPN, j++) {\n    NodeMatrix[i + NODE_X] += deltaX[j] * 0.1 * speed;\n    NodeMatrix[i + NODE_Y] += deltaY[j] * 0.1 * speed;\n  }\n\n  return {converged: converged};\n};\n","/**\n * Graphology Noverlap Helpers\n * ============================\n *\n * Miscellaneous helper functions.\n */\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Function used to validate the given settings.\n *\n * @param  {object}      settings - Settings to validate.\n * @return {object|null}\n */\nexports.validateSettings = function (settings) {\n  if (\n    ('gridSize' in settings && typeof settings.gridSize !== 'number') ||\n    settings.gridSize <= 0\n  )\n    return {message: 'the `gridSize` setting should be a positive number.'};\n\n  if (\n    ('margin' in settings && typeof settings.margin !== 'number') ||\n    settings.margin < 0\n  )\n    return {\n      message: 'the `margin` setting should be 0 or a positive number.'\n    };\n\n  if (\n    ('expansion' in settings && typeof settings.expansion !== 'number') ||\n    settings.expansion <= 0\n  )\n    return {message: 'the `expansion` setting should be a positive number.'};\n\n  if (\n    ('ratio' in settings && typeof settings.ratio !== 'number') ||\n    settings.ratio <= 0\n  )\n    return {message: 'the `ratio` setting should be a positive number.'};\n\n  if (\n    ('speed' in settings && typeof settings.speed !== 'number') ||\n    settings.speed <= 0\n  )\n    return {message: 'the `speed` setting should be a positive number.'};\n\n  return null;\n};\n\n/**\n * Function generating a flat matrix for the given graph's nodes.\n *\n * @param  {Graph}        graph   - Target graph.\n * @param  {function}     reducer - Node reducer function.\n * @return {Float32Array}         - The node matrix.\n */\nexports.graphToByteArray = function (graph, reducer) {\n  var order = graph.order;\n\n  var matrix = new Float32Array(order * PPN);\n\n  var j = 0;\n\n  graph.forEachNode(function (node, attr) {\n    if (typeof reducer === 'function') attr = reducer(node, attr);\n\n    matrix[j] = attr.x;\n    matrix[j + 1] = attr.y;\n    matrix[j + 2] = attr.size || 1;\n    j += PPN;\n  });\n\n  return matrix;\n};\n\n/**\n * Function applying the layout back to the graph.\n *\n * @param {Graph}        graph      - Target graph.\n * @param {Float32Array} NodeMatrix - Node matrix.\n * @param {function}     reducer    - Reducing function.\n */\nexports.assignLayoutChanges = function (graph, NodeMatrix, reducer) {\n  var i = 0;\n\n  graph.forEachNode(function (node) {\n    var pos = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    if (typeof reducer === 'function') pos = reducer(node, pos);\n\n    graph.mergeNodeAttributes(node, pos);\n\n    i += PPN;\n  });\n};\n\n/**\n * Function collecting the layout positions.\n *\n * @param  {Graph}        graph      - Target graph.\n * @param  {Float32Array} NodeMatrix - Node matrix.\n * @param  {function}     reducer    - Reducing function.\n * @return {object}                  - Map to node positions.\n */\nexports.collectLayoutChanges = function (graph, NodeMatrix, reducer) {\n  var positions = {};\n\n  var i = 0;\n\n  graph.forEachNode(function (node) {\n    var pos = {\n      x: NodeMatrix[i],\n      y: NodeMatrix[i + 1]\n    };\n\n    if (typeof reducer === 'function') pos = reducer(node, pos);\n\n    positions[node] = pos;\n\n    i += PPN;\n  });\n\n  return positions;\n};\n\n/**\n * Function returning a web worker from the given function.\n *\n * @param  {function}  fn - Function for the worker.\n * @return {DOMString}\n */\nexports.createWorker = function createWorker(fn) {\n  var xURL = window.URL || window.webkitURL;\n  var code = fn.toString();\n  var objectUrl = xURL.createObjectURL(\n    new Blob(['(' + code + ').call(this);'], {type: 'text/javascript'})\n  );\n  var worker = new Worker(objectUrl);\n  xURL.revokeObjectURL(objectUrl);\n\n  return worker;\n};\n","/**\n * Graphology Noverlap Layout Default Settings\n * ============================================\n */\nmodule.exports = {\n  gridSize: 20,\n  margin: 5,\n  expansion: 1.1,\n  ratio: 1.0,\n  speed: 3\n};\n","/**\n * Graphology Noverlap Layout\n * ===========================\n *\n * Library endpoint.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar iterate = require('./iterate.js');\nvar helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\nvar DEFAULT_MAX_ITERATIONS = 500;\n\n/**\n * Asbtract function used to run a certain number of iterations.\n *\n * @param  {boolean}       assign       - Whether to assign positions.\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - If number, params.maxIterations, else:\n * @param  {number}          maxIterations - Maximum number of iterations.\n * @param  {object}          [settings] - Settings.\n * @return {object|undefined}\n */\nfunction abstractSynchronousLayout(assign, graph, params) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-noverlap: the given graph is not a valid graphology instance.'\n    );\n\n  if (typeof params === 'number') params = {maxIterations: params};\n  else params = params || {};\n\n  var maxIterations = params.maxIterations || DEFAULT_MAX_ITERATIONS;\n\n  if (typeof maxIterations !== 'number' || maxIterations <= 0)\n    throw new Error(\n      'graphology-layout-force: you should provide a positive number of maximum iterations.'\n    );\n\n  // Validating settings\n  var settings = Object.assign({}, DEFAULT_SETTINGS, params.settings),\n    validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error('graphology-layout-noverlap: ' + validationError.message);\n\n  // Building matrices\n  var matrix = helpers.graphToByteArray(graph, params.inputReducer),\n    converged = false,\n    i;\n\n  // Iterating\n  for (i = 0; i < maxIterations && !converged; i++)\n    converged = iterate(settings, matrix).converged;\n\n  // Applying\n  if (assign) {\n    helpers.assignLayoutChanges(graph, matrix, params.outputReducer);\n    return;\n  }\n\n  return helpers.collectLayoutChanges(graph, matrix, params.outputReducer);\n}\n\n/**\n * Exporting.\n */\nvar synchronousLayout = abstractSynchronousLayout.bind(null, false);\nsynchronousLayout.assign = abstractSynchronousLayout.bind(null, true);\n\nmodule.exports = synchronousLayout;\n","module.exports = require('graphology-layout-noverlap');\n","/**\n * Graphology Degree Centrality\n * =============================\n *\n * Function computing degree centrality.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Asbtract function to perform any kind of degree centrality.\n *\n * Intuitively, the degree centrality of a node is the fraction of nodes it\n * is connected to.\n *\n * @param  {boolean} assign           - Whether to assign the result to the nodes.\n * @param  {string}  method           - Method of the graph to get the degree.\n * @param  {Graph}   graph            - A graphology instance.\n * @param  {object}  [options]        - Options:\n * @param  {string}    [nodeCentralityAttribute] - Name of the attribute to assign.\n * @return {object|void}\n */\nfunction abstractDegreeCentrality(assign, method, graph, options) {\n  var name = method + 'Centrality';\n\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-centrality/' +\n        name +\n        ': the given graph is not a valid graphology instance.'\n    );\n\n  if (method !== 'degree' && graph.type === 'undirected')\n    throw new Error(\n      'graphology-centrality/' +\n        name +\n        ': cannot compute ' +\n        method +\n        ' centrality on an undirected graph.'\n    );\n\n  // Solving options\n  options = options || {};\n\n  var centralityAttribute = options.nodeCentralityAttribute || name;\n\n  var ratio = graph.order - 1;\n  var getDegree = graph[method].bind(graph);\n\n  if (assign) {\n    graph.updateEachNodeAttributes(\n      function (node, attr) {\n        attr[centralityAttribute] = getDegree(node) / ratio;\n        return attr;\n      },\n      {attributes: [centralityAttribute]}\n    );\n\n    return;\n  }\n\n  var centralities = {};\n\n  graph.forEachNode(function (node) {\n    centralities[node] = getDegree(node) / ratio;\n  });\n\n  return centralities;\n}\n\n/**\n * Building various functions to export.\n */\nvar degreeCentrality = abstractDegreeCentrality.bind(null, false, 'degree');\nvar inDegreeCentrality = abstractDegreeCentrality.bind(null, false, 'inDegree');\nvar outDegreeCentrality = abstractDegreeCentrality.bind(\n  null,\n  false,\n  'outDegree'\n);\n\ndegreeCentrality.assign = abstractDegreeCentrality.bind(null, true, 'degree');\ninDegreeCentrality.assign = abstractDegreeCentrality.bind(\n  null,\n  true,\n  'inDegree'\n);\noutDegreeCentrality.assign = abstractDegreeCentrality.bind(\n  null,\n  true,\n  'outDegree'\n);\n\n/**\n * Exporting.\n */\nexports.degreeCentrality = degreeCentrality;\nexports.inDegreeCentrality = inDegreeCentrality;\nexports.outDegreeCentrality = outDegreeCentrality;\n","exports.ARRAY_BUFFER_SUPPORT = typeof ArrayBuffer !== 'undefined';\nexports.SYMBOL_SUPPORT = typeof Symbol !== 'undefined';\n","/**\n * Obliterator ForEach Function\n * =============================\n *\n * Helper function used to easily iterate over mixed values.\n */\nvar support = require('./support.js');\n\nvar ARRAY_BUFFER_SUPPORT = support.ARRAY_BUFFER_SUPPORT;\nvar SYMBOL_SUPPORT = support.SYMBOL_SUPPORT;\n\n/**\n * Function able to iterate over almost any iterable JS value.\n *\n * @param  {any}      iterable - Iterable value.\n * @param  {function} callback - Callback function.\n */\nmodule.exports = function forEach(iterable, callback) {\n  var iterator, k, i, l, s;\n\n  if (!iterable) throw new Error('obliterator/forEach: invalid iterable.');\n\n  if (typeof callback !== 'function')\n    throw new Error('obliterator/forEach: expecting a callback.');\n\n  // The target is an array or a string or function arguments\n  if (\n    Array.isArray(iterable) ||\n    (ARRAY_BUFFER_SUPPORT && ArrayBuffer.isView(iterable)) ||\n    typeof iterable === 'string' ||\n    iterable.toString() === '[object Arguments]'\n  ) {\n    for (i = 0, l = iterable.length; i < l; i++) callback(iterable[i], i);\n    return;\n  }\n\n  // The target has a #.forEach method\n  if (typeof iterable.forEach === 'function') {\n    iterable.forEach(callback);\n    return;\n  }\n\n  // The target is iterable\n  if (\n    SYMBOL_SUPPORT &&\n    Symbol.iterator in iterable &&\n    typeof iterable.next !== 'function'\n  ) {\n    iterable = iterable[Symbol.iterator]();\n  }\n\n  // The target is an iterator\n  if (typeof iterable.next === 'function') {\n    iterator = iterable;\n    i = 0;\n\n    while (((s = iterator.next()), s.done !== true)) {\n      callback(s.value, i);\n      i++;\n    }\n\n    return;\n  }\n\n  // The target is a plain object\n  for (k in iterable) {\n    if (iterable.hasOwnProperty(k)) {\n      callback(iterable[k], k);\n    }\n  }\n\n  return;\n};\n","/**\n * Mnemonist Iterable Function\n * ============================\n *\n * Harmonized iteration helpers over mixed iterable targets.\n */\nvar forEach = require('obliterator/foreach');\n\nvar typed = require('./typed-arrays.js');\n\n/**\n * Function used to determine whether the given object supports array-like\n * random access.\n *\n * @param  {any} target - Target object.\n * @return {boolean}\n */\nfunction isArrayLike(target) {\n  return Array.isArray(target) || typed.isTypedArray(target);\n}\n\n/**\n * Function used to guess the length of the structure over which we are going\n * to iterate.\n *\n * @param  {any} target - Target object.\n * @return {number|undefined}\n */\nfunction guessLength(target) {\n  if (typeof target.length === 'number')\n    return target.length;\n\n  if (typeof target.size === 'number')\n    return target.size;\n\n  return;\n}\n\n/**\n * Function used to convert an iterable to an array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArray(target) {\n  var l = guessLength(target);\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i++] = value;\n  });\n\n  return array;\n}\n\n/**\n * Same as above but returns a supplementary indices array.\n *\n * @param  {any}   target - Iteration target.\n * @return {array}\n */\nfunction toArrayWithIndices(target) {\n  var l = guessLength(target);\n\n  var IndexArray = typeof l === 'number' ?\n    typed.getPointerArray(l) :\n    Array;\n\n  var array = typeof l === 'number' ? new Array(l) : [];\n  var indices = typeof l === 'number' ? new IndexArray(l) : [];\n\n  var i = 0;\n\n  // TODO: we could optimize when given target is array like\n  forEach(target, function(value) {\n    array[i] = value;\n    indices[i] = i++;\n  });\n\n  return [array, indices];\n}\n\n/**\n * Exporting.\n */\nexports.isArrayLike = isArrayLike;\nexports.guessLength = guessLength;\nexports.toArray = toArray;\nexports.toArrayWithIndices = toArrayWithIndices;\n","/**\n * Mnemonist FixedDeque\n * =====================\n *\n * Fixed capacity double-ended queue implemented as ring deque.\n */\nvar iterables = require('./utils/iterables.js'),\n    Iterator = require('obliterator/iterator');\n\n/**\n * FixedDeque.\n *\n * @constructor\n */\nfunction FixedDeque(ArrayClass, capacity) {\n\n  if (arguments.length < 2)\n    throw new Error('mnemonist/fixed-deque: expecting an Array class and a capacity.');\n\n  if (typeof capacity !== 'number' || capacity <= 0)\n    throw new Error('mnemonist/fixed-deque: `capacity` should be a positive number.');\n\n  this.ArrayClass = ArrayClass;\n  this.capacity = capacity;\n  this.items = new ArrayClass(this.capacity);\n  this.clear();\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nFixedDeque.prototype.clear = function() {\n\n  // Properties\n  this.start = 0;\n  this.size = 0;\n};\n\n/**\n * Method used to append a value to the deque.\n *\n * @param  {any}    item - Item to append.\n * @return {number}      - Returns the new size of the deque.\n */\nFixedDeque.prototype.push = function(item) {\n  if (this.size === this.capacity)\n    throw new Error('mnemonist/fixed-deque.push: deque capacity (' + this.capacity + ') exceeded!');\n\n  var index = (this.start + this.size) % this.capacity;\n\n  this.items[index] = item;\n\n  return ++this.size;\n};\n\n/**\n * Method used to prepend a value to the deque.\n *\n * @param  {any}    item - Item to prepend.\n * @return {number}      - Returns the new size of the deque.\n */\nFixedDeque.prototype.unshift = function(item) {\n  if (this.size === this.capacity)\n    throw new Error('mnemonist/fixed-deque.unshift: deque capacity (' + this.capacity + ') exceeded!');\n\n  var index = this.start - 1;\n\n  if (this.start === 0)\n    index = this.capacity - 1;\n\n  this.items[index] = item;\n  this.start = index;\n\n  return ++this.size;\n};\n\n/**\n * Method used to pop the deque.\n *\n * @return {any} - Returns the popped item.\n */\nFixedDeque.prototype.pop = function() {\n  if (this.size === 0)\n    return;\n\n  const index = (this.start + this.size - 1) % this.capacity;\n\n  this.size--;\n\n  return this.items[index];\n};\n\n/**\n * Method used to shift the deque.\n *\n * @return {any} - Returns the shifted item.\n */\nFixedDeque.prototype.shift = function() {\n  if (this.size === 0)\n    return;\n\n  var index = this.start;\n\n  this.size--;\n  this.start++;\n\n  if (this.start === this.capacity)\n    this.start = 0;\n\n  return this.items[index];\n};\n\n/**\n * Method used to peek the first value of the deque.\n *\n * @return {any}\n */\nFixedDeque.prototype.peekFirst = function() {\n  if (this.size === 0)\n    return;\n\n  return this.items[this.start];\n};\n\n/**\n * Method used to peek the last value of the deque.\n *\n * @return {any}\n */\nFixedDeque.prototype.peekLast = function() {\n  if (this.size === 0)\n    return;\n\n  var index = this.start + this.size - 1;\n\n  if (index > this.capacity)\n    index -= this.capacity;\n\n  return this.items[index];\n};\n\n/**\n * Method used to get the desired value of the deque.\n *\n * @param  {number} index\n * @return {any}\n */\nFixedDeque.prototype.get = function(index) {\n  if (this.size === 0)\n    return;\n\n  index = this.start + index;\n\n  if (index > this.capacity)\n    index -= this.capacity;\n\n  return this.items[index];\n};\n\n/**\n * Method used to iterate over the deque.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nFixedDeque.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  while (j < l) {\n    callback.call(scope, this.items[i], j, this);\n    i++;\n    j++;\n\n    if (i === c)\n      i = 0;\n  }\n};\n\n/**\n * Method used to convert the deque to a JavaScript array.\n *\n * @return {array}\n */\n// TODO: optional array class as argument?\nFixedDeque.prototype.toArray = function() {\n\n  // Optimization\n  var offset = this.start + this.size;\n\n  if (offset < this.capacity)\n    return this.items.slice(this.start, offset);\n\n  var array = new this.ArrayClass(this.size),\n      c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  while (j < l) {\n    array[j] = this.items[i];\n    i++;\n    j++;\n\n    if (i === c)\n      i = 0;\n  }\n\n  return array;\n};\n\n/**\n * Method used to create an iterator over the deque's values.\n *\n * @return {Iterator}\n */\nFixedDeque.prototype.values = function() {\n  var items = this.items,\n      c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  return new Iterator(function() {\n    if (j >= l)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n\n    i++;\n    j++;\n\n    if (i === c)\n      i = 0;\n\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over the deque's entries.\n *\n * @return {Iterator}\n */\nFixedDeque.prototype.entries = function() {\n  var items = this.items,\n      c = this.capacity,\n      l = this.size,\n      i = this.start,\n      j = 0;\n\n  return new Iterator(function() {\n    if (j >= l)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n\n    i++;\n\n    if (i === c)\n      i = 0;\n\n    return {\n      value: [j++, value],\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  FixedDeque.prototype[Symbol.iterator] = FixedDeque.prototype.values;\n\n/**\n * Convenience known methods.\n */\nFixedDeque.prototype.inspect = function() {\n  var array = this.toArray();\n\n  array.type = this.ArrayClass.name;\n  array.capacity = this.capacity;\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(array, 'constructor', {\n    value: FixedDeque,\n    enumerable: false\n  });\n\n  return array;\n};\n\nif (typeof Symbol !== 'undefined')\n  FixedDeque.prototype[Symbol.for('nodejs.util.inspect.custom')] = FixedDeque.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a deque.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {function} ArrayClass - Array class to use.\n * @param  {number}   capacity   - Desired capacity.\n * @return {FiniteStack}\n */\nFixedDeque.from = function(iterable, ArrayClass, capacity) {\n  if (arguments.length < 3) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/fixed-deque.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n\n  var deque = new FixedDeque(ArrayClass, capacity);\n\n  if (iterables.isArrayLike(iterable)) {\n    var i, l;\n\n    for (i = 0, l = iterable.length; i < l; i++)\n      deque.items[i] = iterable[i];\n\n    deque.size = l;\n\n    return deque;\n  }\n\n  iterables.forEach(iterable, function(value) {\n    deque.push(value);\n  });\n\n  return deque;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = FixedDeque;\n","/**\n * Mnemonist FixedStack\n * =====================\n *\n * The fixed stack is a stack whose capacity is defined beforehand and that\n * cannot be exceeded. This class is really useful when combined with\n * byte arrays to save up some memory and avoid memory re-allocation, hence\n * speeding up computations.\n *\n * This has however a downside: you need to know the maximum size you stack\n * can have during your iteration (which is not too difficult to compute when\n * performing, say, a DFS on a balanced binary tree).\n */\nvar Iterator = require('obliterator/iterator'),\n    iterables = require('./utils/iterables.js');\n\n/**\n * FixedStack\n *\n * @constructor\n * @param {function} ArrayClass - Array class to use.\n * @param {number}   capacity   - Desired capacity.\n */\nfunction FixedStack(ArrayClass, capacity) {\n\n  if (arguments.length < 2)\n    throw new Error('mnemonist/fixed-stack: expecting an Array class and a capacity.');\n\n  if (typeof capacity !== 'number' || capacity <= 0)\n    throw new Error('mnemonist/fixed-stack: `capacity` should be a positive number.');\n\n  this.capacity = capacity;\n  this.ArrayClass = ArrayClass;\n  this.items = new this.ArrayClass(this.capacity);\n  this.clear();\n}\n\n/**\n * Method used to clear the stack.\n *\n * @return {undefined}\n */\nFixedStack.prototype.clear = function() {\n\n  // Properties\n  this.size = 0;\n};\n\n/**\n * Method used to add an item to the stack.\n *\n * @param  {any}    item - Item to add.\n * @return {number}\n */\nFixedStack.prototype.push = function(item) {\n  if (this.size === this.capacity)\n    throw new Error('mnemonist/fixed-stack.push: stack capacity (' + this.capacity + ') exceeded!');\n\n  this.items[this.size++] = item;\n  return this.size;\n};\n\n/**\n * Method used to retrieve & remove the last item of the stack.\n *\n * @return {any}\n */\nFixedStack.prototype.pop = function() {\n  if (this.size === 0)\n    return;\n\n  return this.items[--this.size];\n};\n\n/**\n * Method used to get the last item of the stack.\n *\n * @return {any}\n */\nFixedStack.prototype.peek = function() {\n  return this.items[this.size - 1];\n};\n\n/**\n * Method used to iterate over the stack.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nFixedStack.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  for (var i = 0, l = this.items.length; i < l; i++)\n    callback.call(scope, this.items[l - i - 1], i, this);\n};\n\n/**\n * Method used to convert the stack to a JavaScript array.\n *\n * @return {array}\n */\nFixedStack.prototype.toArray = function() {\n  var array = new this.ArrayClass(this.size),\n      l = this.size - 1,\n      i = this.size;\n\n  while (i--)\n    array[i] = this.items[l - i];\n\n  return array;\n};\n\n/**\n * Method used to create an iterator over a stack's values.\n *\n * @return {Iterator}\n */\nFixedStack.prototype.values = function() {\n  var items = this.items,\n      l = this.size,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {\n        done: true\n      };\n\n    var value = items[l - i - 1];\n    i++;\n\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a stack's entries.\n *\n * @return {Iterator}\n */\nFixedStack.prototype.entries = function() {\n  var items = this.items,\n      l = this.size,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i >= l)\n      return {\n        done: true\n      };\n\n    var value = items[l - i - 1];\n\n    return {\n      value: [i++, value],\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  FixedStack.prototype[Symbol.iterator] = FixedStack.prototype.values;\n\n\n/**\n * Convenience known methods.\n */\nFixedStack.prototype.toString = function() {\n  return this.toArray().join(',');\n};\n\nFixedStack.prototype.toJSON = function() {\n  return this.toArray();\n};\n\nFixedStack.prototype.inspect = function() {\n  var array = this.toArray();\n\n  array.type = this.ArrayClass.name;\n  array.capacity = this.capacity;\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(array, 'constructor', {\n    value: FixedStack,\n    enumerable: false\n  });\n\n  return array;\n};\n\nif (typeof Symbol !== 'undefined')\n  FixedStack.prototype[Symbol.for('nodejs.util.inspect.custom')] = FixedStack.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a stack.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {function} ArrayClass - Array class to use.\n * @param  {number}   capacity   - Desired capacity.\n * @return {FixedStack}\n */\nFixedStack.from = function(iterable, ArrayClass, capacity) {\n\n  if (arguments.length < 3) {\n    capacity = iterables.guessLength(iterable);\n\n    if (typeof capacity !== 'number')\n      throw new Error('mnemonist/fixed-stack.from: could not guess iterable length. Please provide desired capacity as last argument.');\n  }\n\n  var stack = new FixedStack(ArrayClass, capacity);\n\n  if (iterables.isArrayLike(iterable)) {\n    var i, l;\n\n    for (i = 0, l = iterable.length; i < l; i++)\n      stack.items[i] = iterable[i];\n\n    stack.size = l;\n\n    return stack;\n  }\n\n  iterables.forEach(iterable, function(value) {\n    stack.push(value);\n  });\n\n  return stack;\n};\n\n/**\n * Exporting.\n */\nmodule.exports = FixedStack;\n","/**\n * Mnemonist Heap Comparators\n * ===========================\n *\n * Default comparators & functions dealing with comparators reversing etc.\n */\nvar DEFAULT_COMPARATOR = function(a, b) {\n  if (a < b)\n    return -1;\n  if (a > b)\n    return 1;\n\n  return 0;\n};\n\nvar DEFAULT_REVERSE_COMPARATOR = function(a, b) {\n  if (a < b)\n    return 1;\n  if (a > b)\n    return -1;\n\n  return 0;\n};\n\n/**\n * Function used to reverse a comparator.\n */\nfunction reverseComparator(comparator) {\n  return function(a, b) {\n    return comparator(b, a);\n  };\n}\n\n/**\n * Function returning a tuple comparator.\n */\nfunction createTupleComparator(size) {\n  if (size === 2) {\n    return function(a, b) {\n      if (a[0] < b[0])\n        return -1;\n\n      if (a[0] > b[0])\n        return 1;\n\n      if (a[1] < b[1])\n        return -1;\n\n      if (a[1] > b[1])\n        return 1;\n\n      return 0;\n    };\n  }\n\n  return function(a, b) {\n    var i = 0;\n\n    while (i < size) {\n      if (a[i] < b[i])\n        return -1;\n\n      if (a[i] > b[i])\n        return 1;\n\n      i++;\n    }\n\n    return 0;\n  };\n}\n\n/**\n * Exporting.\n */\nexports.DEFAULT_COMPARATOR = DEFAULT_COMPARATOR;\nexports.DEFAULT_REVERSE_COMPARATOR = DEFAULT_REVERSE_COMPARATOR;\nexports.reverseComparator = reverseComparator;\nexports.createTupleComparator = createTupleComparator;\n","/**\n * Mnemonist Binary Heap\n * ======================\n *\n * Binary heap implementation.\n */\nvar forEach = require('obliterator/foreach'),\n    comparators = require('./utils/comparators.js'),\n    iterables = require('./utils/iterables.js');\n\nvar DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,\n    reverseComparator = comparators.reverseComparator;\n\n/**\n * Heap helper functions.\n */\n\n/**\n * Function used to sift down.\n *\n * @param {function} compare    - Comparison function.\n * @param {array}    heap       - Array storing the heap's data.\n * @param {number}   startIndex - Starting index.\n * @param {number}   i          - Index.\n */\nfunction siftDown(compare, heap, startIndex, i) {\n  var item = heap[i],\n      parentIndex,\n      parent;\n\n  while (i > startIndex) {\n    parentIndex = (i - 1) >> 1;\n    parent = heap[parentIndex];\n\n    if (compare(item, parent) < 0) {\n      heap[i] = parent;\n      i = parentIndex;\n      continue;\n    }\n\n    break;\n  }\n\n  heap[i] = item;\n}\n\n/**\n * Function used to sift up.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {number}   i       - Index.\n */\nfunction siftUp(compare, heap, i) {\n  var endIndex = heap.length,\n      startIndex = i,\n      item = heap[i],\n      childIndex = 2 * i + 1,\n      rightIndex;\n\n  while (childIndex < endIndex) {\n    rightIndex = childIndex + 1;\n\n    if (\n      rightIndex < endIndex &&\n      compare(heap[childIndex], heap[rightIndex]) >= 0\n    ) {\n      childIndex = rightIndex;\n    }\n\n    heap[i] = heap[childIndex];\n    i = childIndex;\n    childIndex = 2 * i + 1;\n  }\n\n  heap[i] = item;\n  siftDown(compare, heap, startIndex, i);\n}\n\n/**\n * Function used to push an item into a heap represented by a raw array.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {any}      item    - Item to push.\n */\nfunction push(compare, heap, item) {\n  heap.push(item);\n  siftDown(compare, heap, 0, heap.length - 1);\n}\n\n/**\n * Function used to pop an item from a heap represented by a raw array.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @return {any}\n */\nfunction pop(compare, heap) {\n  var lastItem = heap.pop();\n\n  if (heap.length !== 0) {\n    var item = heap[0];\n    heap[0] = lastItem;\n    siftUp(compare, heap, 0);\n\n    return item;\n  }\n\n  return lastItem;\n}\n\n/**\n * Function used to pop the heap then push a new value into it, thus \"replacing\"\n * it.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @param  {any}      item    - The item to push.\n * @return {any}\n */\nfunction replace(compare, heap, item) {\n  if (heap.length === 0)\n    throw new Error('mnemonist/heap.replace: cannot pop an empty heap.');\n\n  var popped = heap[0];\n  heap[0] = item;\n  siftUp(compare, heap, 0);\n\n  return popped;\n}\n\n/**\n * Function used to push an item in the heap then pop the heap and return the\n * popped value.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @param  {any}      item    - The item to push.\n * @return {any}\n */\nfunction pushpop(compare, heap, item) {\n  var tmp;\n\n  if (heap.length !== 0 && compare(heap[0], item) < 0) {\n    tmp = heap[0];\n    heap[0] = item;\n    item = tmp;\n    siftUp(compare, heap, 0);\n  }\n\n  return item;\n}\n\n/**\n * Converts and array into an abstract heap in linear time.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    array   - Target array.\n */\nfunction heapify(compare, array) {\n  var n = array.length,\n      l = n >> 1,\n      i = l;\n\n  while (--i >= 0)\n    siftUp(compare, array, i);\n}\n\n/**\n * Fully consumes the given heap.\n *\n * @param  {function} compare - Comparison function.\n * @param  {array}    heap    - Array storing the heap's data.\n * @return {array}\n */\nfunction consume(compare, heap) {\n  var l = heap.length,\n      i = 0;\n\n  var array = new Array(l);\n\n  while (i < l)\n    array[i++] = pop(compare, heap);\n\n  return array;\n}\n\n/**\n * Function used to retrieve the n smallest items from the given iterable.\n *\n * @param {function} compare  - Comparison function.\n * @param {number}   n        - Number of top items to retrieve.\n * @param {any}      iterable - Arbitrary iterable.\n * @param {array}\n */\nfunction nsmallest(compare, n, iterable) {\n  if (arguments.length === 2) {\n    iterable = n;\n    n = compare;\n    compare = DEFAULT_COMPARATOR;\n  }\n\n  var reverseCompare = reverseComparator(compare);\n\n  var i, l, v;\n\n  var min = Infinity;\n\n  var result;\n\n  // If n is equal to 1, it's just a matter of finding the minimum\n  if (n === 1) {\n    if (iterables.isArrayLike(iterable)) {\n      for (i = 0, l = iterable.length; i < l; i++) {\n        v = iterable[i];\n\n        if (min === Infinity || compare(v, min) < 0)\n          min = v;\n      }\n\n      result = new iterable.constructor(1);\n      result[0] = min;\n\n      return result;\n    }\n\n    forEach(iterable, function(value) {\n      if (min === Infinity || compare(value, min) < 0)\n        min = value;\n    });\n\n    return [min];\n  }\n\n  if (iterables.isArrayLike(iterable)) {\n\n    // If n > iterable length, we just clone and sort\n    if (n >= iterable.length)\n      return iterable.slice().sort(compare);\n\n    result = iterable.slice(0, n);\n    heapify(reverseCompare, result);\n\n    for (i = n, l = iterable.length; i < l; i++)\n      if (reverseCompare(iterable[i], result[0]) > 0)\n        replace(reverseCompare, result, iterable[i]);\n\n    // NOTE: if n is over some number, it becomes faster to consume the heap\n    return result.sort(compare);\n  }\n\n  // Correct for size\n  var size = iterables.guessLength(iterable);\n\n  if (size !== null && size < n)\n    n = size;\n\n  result = new Array(n);\n  i = 0;\n\n  forEach(iterable, function(value) {\n    if (i < n) {\n      result[i] = value;\n    }\n    else {\n      if (i === n)\n        heapify(reverseCompare, result);\n\n      if (reverseCompare(value, result[0]) > 0)\n        replace(reverseCompare, result, value);\n    }\n\n    i++;\n  });\n\n  if (result.length > i)\n    result.length = i;\n\n  // NOTE: if n is over some number, it becomes faster to consume the heap\n  return result.sort(compare);\n}\n\n/**\n * Function used to retrieve the n largest items from the given iterable.\n *\n * @param {function} compare  - Comparison function.\n * @param {number}   n        - Number of top items to retrieve.\n * @param {any}      iterable - Arbitrary iterable.\n * @param {array}\n */\nfunction nlargest(compare, n, iterable) {\n  if (arguments.length === 2) {\n    iterable = n;\n    n = compare;\n    compare = DEFAULT_COMPARATOR;\n  }\n\n  var reverseCompare = reverseComparator(compare);\n\n  var i, l, v;\n\n  var max = -Infinity;\n\n  var result;\n\n  // If n is equal to 1, it's just a matter of finding the maximum\n  if (n === 1) {\n    if (iterables.isArrayLike(iterable)) {\n      for (i = 0, l = iterable.length; i < l; i++) {\n        v = iterable[i];\n\n        if (max === -Infinity || compare(v, max) > 0)\n          max = v;\n      }\n\n      result = new iterable.constructor(1);\n      result[0] = max;\n\n      return result;\n    }\n\n    forEach(iterable, function(value) {\n      if (max === -Infinity || compare(value, max) > 0)\n        max = value;\n    });\n\n    return [max];\n  }\n\n  if (iterables.isArrayLike(iterable)) {\n\n    // If n > iterable length, we just clone and sort\n    if (n >= iterable.length)\n      return iterable.slice().sort(reverseCompare);\n\n    result = iterable.slice(0, n);\n    heapify(compare, result);\n\n    for (i = n, l = iterable.length; i < l; i++)\n      if (compare(iterable[i], result[0]) > 0)\n        replace(compare, result, iterable[i]);\n\n    // NOTE: if n is over some number, it becomes faster to consume the heap\n    return result.sort(reverseCompare);\n  }\n\n  // Correct for size\n  var size = iterables.guessLength(iterable);\n\n  if (size !== null && size < n)\n    n = size;\n\n  result = new Array(n);\n  i = 0;\n\n  forEach(iterable, function(value) {\n    if (i < n) {\n      result[i] = value;\n    }\n    else {\n      if (i === n)\n        heapify(compare, result);\n\n      if (compare(value, result[0]) > 0)\n        replace(compare, result, value);\n    }\n\n    i++;\n  });\n\n  if (result.length > i)\n    result.length = i;\n\n  // NOTE: if n is over some number, it becomes faster to consume the heap\n  return result.sort(reverseCompare);\n}\n\n/**\n * Binary Minimum Heap.\n *\n * @constructor\n * @param {function} comparator - Comparator function to use.\n */\nfunction Heap(comparator) {\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/Heap.constructor: given comparator should be a function.');\n}\n\n/**\n * Method used to clear the heap.\n *\n * @return {undefined}\n */\nHeap.prototype.clear = function() {\n\n  // Properties\n  this.items = [];\n  this.size = 0;\n};\n\n/**\n * Method used to push an item into the heap.\n *\n * @param  {any}    item - Item to push.\n * @return {number}\n */\nHeap.prototype.push = function(item) {\n  push(this.comparator, this.items, item);\n  return ++this.size;\n};\n\n/**\n * Method used to retrieve the \"first\" item of the heap.\n *\n * @return {any}\n */\nHeap.prototype.peek = function() {\n  return this.items[0];\n};\n\n/**\n * Method used to retrieve & remove the \"first\" item of the heap.\n *\n * @return {any}\n */\nHeap.prototype.pop = function() {\n  if (this.size !== 0)\n    this.size--;\n\n  return pop(this.comparator, this.items);\n};\n\n/**\n * Method used to pop the heap, then push an item and return the popped\n * item.\n *\n * @param  {any} item - Item to push into the heap.\n * @return {any}\n */\nHeap.prototype.replace = function(item) {\n  return replace(this.comparator, this.items, item);\n};\n\n/**\n * Method used to push the heap, the pop it and return the pooped item.\n *\n * @param  {any} item - Item to push into the heap.\n * @return {any}\n */\nHeap.prototype.pushpop = function(item) {\n  return pushpop(this.comparator, this.items, item);\n};\n\n/**\n * Method used to consume the heap fully and return its items as a sorted array.\n *\n * @return {array}\n */\nHeap.prototype.consume = function() {\n  this.size = 0;\n  return consume(this.comparator, this.items);\n};\n\n/**\n * Method used to convert the heap to an array. Note that it basically clone\n * the heap and consumes it completely. This is hardly performant.\n *\n * @return {array}\n */\nHeap.prototype.toArray = function() {\n  return consume(this.comparator, this.items.slice());\n};\n\n/**\n * Convenience known methods.\n */\nHeap.prototype.inspect = function() {\n  var proxy = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: Heap,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  Heap.prototype[Symbol.for('nodejs.util.inspect.custom')] = Heap.prototype.inspect;\n\n/**\n * Binary Maximum Heap.\n *\n * @constructor\n * @param {function} comparator - Comparator function to use.\n */\nfunction MaxHeap(comparator) {\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/MaxHeap.constructor: given comparator should be a function.');\n\n  this.comparator = reverseComparator(this.comparator);\n}\n\nMaxHeap.prototype = Heap.prototype;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a heap.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {function} comparator - Custom comparator function.\n * @return {Heap}\n */\nHeap.from = function(iterable, comparator) {\n  var heap = new Heap(comparator);\n\n  var items;\n\n  // If iterable is an array, we can be clever about it\n  if (iterables.isArrayLike(iterable))\n    items = iterable.slice();\n  else\n    items = iterables.toArray(iterable);\n\n  heapify(heap.comparator, items);\n  heap.items = items;\n  heap.size = items.length;\n\n  return heap;\n};\n\nMaxHeap.from = function(iterable, comparator) {\n  var heap = new MaxHeap(comparator);\n\n  var items;\n\n  // If iterable is an array, we can be clever about it\n  if (iterables.isArrayLike(iterable))\n    items = iterable.slice();\n  else\n    items = iterables.toArray(iterable);\n\n  heapify(heap.comparator, items);\n  heap.items = items;\n  heap.size = items.length;\n\n  return heap;\n};\n\n/**\n * Exporting.\n */\nHeap.siftUp = siftUp;\nHeap.siftDown = siftDown;\nHeap.push = push;\nHeap.pop = pop;\nHeap.replace = replace;\nHeap.pushpop = pushpop;\nHeap.heapify = heapify;\nHeap.consume = consume;\n\nHeap.nsmallest = nsmallest;\nHeap.nlargest = nlargest;\n\nHeap.MinHeap = Heap;\nHeap.MaxHeap = MaxHeap;\n\nmodule.exports = Heap;\n","/**\n * Graphology Neighborhood Indices\n * ================================\n */\nvar typed = require('mnemonist/utils/typed-arrays');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\n\nfunction NeighborhoodIndex(graph, method) {\n  method = method || 'outbound';\n  var getNeighbors = graph[method + 'Neighbors'].bind(graph);\n\n  var upperBound = graph.directedSize + graph.undirectedSize * 2;\n\n  var NeighborhoodPointerArray = typed.getPointerArray(upperBound);\n  var NodesPointerArray = typed.getPointerArray(graph.order);\n\n  // NOTE: directedSize + undirectedSize * 2 is an upper bound for\n  // neighborhood size\n  this.graph = graph;\n  this.neighborhood = new NodesPointerArray(upperBound);\n\n  this.starts = new NeighborhoodPointerArray(graph.order + 1);\n\n  this.nodes = graph.nodes();\n\n  var ids = {};\n\n  var i, l, j, m, node, neighbors;\n\n  var n = 0;\n\n  for (i = 0, l = graph.order; i < l; i++) ids[this.nodes[i]] = i;\n\n  for (i = 0, l = graph.order; i < l; i++) {\n    node = this.nodes[i];\n    neighbors = getNeighbors(node);\n\n    this.starts[i] = n;\n\n    for (j = 0, m = neighbors.length; j < m; j++)\n      this.neighborhood[n++] = ids[neighbors[j]];\n  }\n\n  // NOTE: we keep one more index as upper bound to simplify iteration\n  this.starts[i] = upperBound;\n}\n\nNeighborhoodIndex.prototype.bounds = function (i) {\n  return [this.starts[i], this.starts[i + 1]];\n};\n\nNeighborhoodIndex.prototype.project = function () {\n  var self = this;\n\n  var projection = {};\n\n  self.nodes.forEach(function (node, i) {\n    projection[node] = Array.from(\n      self.neighborhood.slice(self.starts[i], self.starts[i + 1])\n    ).map(function (j) {\n      return self.nodes[j];\n    });\n  });\n\n  return projection;\n};\n\nNeighborhoodIndex.prototype.collect = function (results) {\n  var i, l;\n\n  var o = {};\n\n  for (i = 0, l = results.length; i < l; i++) o[this.nodes[i]] = results[i];\n\n  return o;\n};\n\nNeighborhoodIndex.prototype.assign = function (prop, results) {\n  var i = 0;\n\n  this.graph.updateEachNodeAttributes(\n    function (_, attr) {\n      attr[prop] = results[i++];\n\n      return attr;\n    },\n    {attributes: [prop]}\n  );\n};\n\nexports.NeighborhoodIndex = NeighborhoodIndex;\n\nfunction WeightedNeighborhoodIndex(graph, getEdgeWeight, method) {\n  method = method || 'outbound';\n  var getEdges = graph[method + 'Edges'].bind(graph);\n\n  var upperBound = graph.directedSize + graph.undirectedSize * 2;\n\n  var NeighborhoodPointerArray = typed.getPointerArray(upperBound);\n  var NodesPointerArray = typed.getPointerArray(graph.order);\n\n  var weightGetter = createEdgeWeightGetter(getEdgeWeight).fromMinimalEntry;\n\n  // NOTE: directedSize + undirectedSize * 2 is an upper bound for\n  // neighborhood size\n  this.graph = graph;\n  this.neighborhood = new NodesPointerArray(upperBound);\n  this.weights = new Float64Array(upperBound);\n  this.outDegrees = new Float64Array(graph.order);\n\n  this.starts = new NeighborhoodPointerArray(graph.order + 1);\n\n  this.nodes = graph.nodes();\n\n  var ids = {};\n\n  var i, l, j, m, node, neighbor, edges, edge, weight;\n\n  var n = 0;\n\n  for (i = 0, l = graph.order; i < l; i++) ids[this.nodes[i]] = i;\n\n  for (i = 0, l = graph.order; i < l; i++) {\n    node = this.nodes[i];\n    edges = getEdges(node);\n\n    this.starts[i] = n;\n\n    for (j = 0, m = edges.length; j < m; j++) {\n      edge = edges[j];\n      neighbor = graph.opposite(node, edge);\n      weight = weightGetter(edge, graph.getEdgeAttributes(edge));\n\n      // NOTE: for weighted mixed beware of merging weights if twice the same neighbor\n      this.neighborhood[n] = ids[neighbor];\n      this.weights[n++] = weight;\n      this.outDegrees[i] += weight;\n    }\n  }\n\n  // NOTE: we keep one more index as upper bound to simplify iteration\n  this.starts[i] = upperBound;\n}\n\nWeightedNeighborhoodIndex.prototype.bounds = NeighborhoodIndex.prototype.bounds;\nWeightedNeighborhoodIndex.prototype.project =\n  NeighborhoodIndex.prototype.project;\nWeightedNeighborhoodIndex.prototype.collect =\n  NeighborhoodIndex.prototype.collect;\nWeightedNeighborhoodIndex.prototype.assign = NeighborhoodIndex.prototype.assign;\n\nexports.WeightedNeighborhoodIndex = WeightedNeighborhoodIndex;\n","/**\n * Graphology Indexed Brandes Routine\n * ===================================\n *\n * Indexed version of the famous Brandes routine aiming at computing\n * betweenness centrality efficiently.\n */\nvar FixedDeque = require('mnemonist/fixed-deque');\nvar FixedStack = require('mnemonist/fixed-stack');\nvar Heap = require('mnemonist/heap');\nvar typed = require('mnemonist/utils/typed-arrays');\nvar neighborhoodIndices = require('graphology-indices/neighborhood');\n\nvar NeighborhoodIndex = neighborhoodIndices.NeighborhoodIndex;\nvar WeightedNeighborhoodIndex = neighborhoodIndices.WeightedNeighborhoodIndex;\n\n/**\n * Indexed unweighted Brandes routine.\n *\n * [Reference]:\n * Ulrik Brandes: A Faster Algorithm for Betweenness Centrality.\n * Journal of Mathematical Sociology 25(2):163-177, 2001.\n *\n * @param  {Graph}    graph - The graphology instance.\n * @return {function}\n */\nexports.createUnweightedIndexedBrandes =\n  function createUnweightedIndexedBrandes(graph) {\n    var neighborhoodIndex = new NeighborhoodIndex(graph);\n\n    var neighborhood = neighborhoodIndex.neighborhood,\n      starts = neighborhoodIndex.starts;\n\n    var order = graph.order;\n\n    var S = new FixedStack(typed.getPointerArray(order), order),\n      sigma = new Uint32Array(order),\n      P = new Array(order),\n      D = new Int32Array(order);\n\n    var Q = new FixedDeque(Uint32Array, order);\n\n    var brandes = function (sourceIndex) {\n      var Dv, sigmav, start, stop, j, v, w;\n\n      for (v = 0; v < order; v++) {\n        P[v] = [];\n        sigma[v] = 0;\n        D[v] = -1;\n      }\n\n      sigma[sourceIndex] = 1;\n      D[sourceIndex] = 0;\n\n      Q.push(sourceIndex);\n\n      while (Q.size !== 0) {\n        v = Q.shift();\n        S.push(v);\n\n        Dv = D[v];\n        sigmav = sigma[v];\n\n        start = starts[v];\n        stop = starts[v + 1];\n\n        for (j = start; j < stop; j++) {\n          w = neighborhood[j];\n\n          if (D[w] === -1) {\n            Q.push(w);\n            D[w] = Dv + 1;\n          }\n\n          if (D[w] === Dv + 1) {\n            sigma[w] += sigmav;\n            P[w].push(v);\n          }\n        }\n      }\n\n      return [S, P, sigma];\n    };\n\n    brandes.index = neighborhoodIndex;\n\n    return brandes;\n  };\n\nfunction BRANDES_DIJKSTRA_HEAP_COMPARATOR(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (a[0] < b[0]) return -1;\n\n  if (a[1] > b[1]) return 1;\n  if (a[1] < b[1]) return -1;\n\n  if (a[2] > b[2]) return 1;\n  if (a[2] < b[2]) return -1;\n\n  if (a[3] > b[3]) return 1;\n  if (a[3] < b[3]) return -1;\n\n  return 0;\n}\n\n/**\n * Indexed Dijkstra Brandes routine.\n *\n * [Reference]:\n * Ulrik Brandes: A Faster Algorithm for Betweenness Centrality.\n * Journal of Mathematical Sociology 25(2):163-177, 2001.\n *\n * @param  {Graph}    graph         - The graphology instance.\n * @param  {string}   getEdgeWeight - Name of the weight attribute or getter function.\n * @return {function}\n */\nexports.createDijkstraIndexedBrandes = function createDijkstraIndexedBrandes(\n  graph,\n  getEdgeWeight\n) {\n  var neighborhoodIndex = new WeightedNeighborhoodIndex(\n    graph,\n    getEdgeWeight || 'weight'\n  );\n\n  var neighborhood = neighborhoodIndex.neighborhood,\n    weights = neighborhoodIndex.weights,\n    starts = neighborhoodIndex.starts;\n\n  var order = graph.order;\n\n  var S = new FixedStack(typed.getPointerArray(order), order),\n    sigma = new Uint32Array(order),\n    P = new Array(order),\n    D = new Float64Array(order),\n    seen = new Float64Array(order);\n\n  // TODO: use fixed-size heap\n  var Q = new Heap(BRANDES_DIJKSTRA_HEAP_COMPARATOR);\n\n  var brandes = function (sourceIndex) {\n    var start, stop, item, dist, pred, cost, j, v, w;\n\n    var count = 0;\n\n    for (v = 0; v < order; v++) {\n      P[v] = [];\n      sigma[v] = 0;\n      D[v] = -1;\n      seen[v] = -1;\n    }\n\n    sigma[sourceIndex] = 1;\n    seen[sourceIndex] = 0;\n\n    Q.push([0, count++, sourceIndex, sourceIndex]);\n\n    while (Q.size !== 0) {\n      item = Q.pop();\n      dist = item[0];\n      pred = item[2];\n      v = item[3];\n\n      if (D[v] !== -1) continue;\n\n      S.push(v);\n      D[v] = dist;\n      sigma[v] += sigma[pred];\n\n      start = starts[v];\n      stop = starts[v + 1];\n\n      for (j = start; j < stop; j++) {\n        w = neighborhood[j];\n        cost = dist + weights[j];\n\n        if (D[w] === -1 && (seen[w] === -1 || cost < seen[w])) {\n          seen[w] = cost;\n          Q.push([cost, count++, v, w]);\n          sigma[w] = 0;\n          P[w] = [v];\n        } else if (cost === seen[w]) {\n          sigma[w] += sigma[v];\n          P[w].push(v);\n        }\n      }\n    }\n\n    return [S, P, sigma];\n  };\n\n  brandes.index = neighborhoodIndex;\n\n  return brandes;\n};\n","/**\n * Graphology Betweenness Centrality\n * ==================================\n *\n * Function computing betweenness centrality.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar lib = require('graphology-shortest-path/indexed-brandes');\nvar resolveDefaults = require('graphology-utils/defaults');\n\nvar createUnweightedIndexedBrandes = lib.createUnweightedIndexedBrandes;\nvar createDijkstraIndexedBrandes = lib.createDijkstraIndexedBrandes;\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  nodeCentralityAttribute: 'betweennessCentrality',\n  getEdgeWeight: 'weight',\n  normalized: true\n};\n\n/**\n * Abstract function computing beetweenness centrality for the given graph.\n *\n * @param  {boolean} assign                      - Assign the results to node attributes?\n * @param  {Graph}   graph                       - Target graph.\n * @param  {object}  [options]                   - Options:\n * @param  {object}    [nodeCentralityAttribute] - Name of the attribute to assign.\n * @param  {string}    [getEdgeWeight]           - Name of the weight attribute or getter function.\n * @param  {boolean}   [normalized]              - Should the centrality be normalized?\n * @param  {object}\n */\nfunction abstractBetweennessCentrality(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-centrality/beetweenness-centrality: the given graph is not a valid graphology instance.'\n    );\n\n  // Solving options\n  options = resolveDefaults(options, DEFAULTS);\n\n  var outputName = options.nodeCentralityAttribute;\n  var normalized = options.normalized;\n\n  var brandes = options.getEdgeWeight\n    ? createDijkstraIndexedBrandes(graph, options.getEdgeWeight)\n    : createUnweightedIndexedBrandes(graph);\n\n  var N = graph.order;\n\n  var result, S, P, sigma, coefficient, i, j, m, v, w;\n\n  var delta = new Float64Array(N);\n  var centralities = new Float64Array(N);\n\n  // Iterating over each node\n  for (i = 0; i < N; i++) {\n    result = brandes(i);\n\n    S = result[0];\n    P = result[1];\n    sigma = result[2];\n\n    // Accumulating\n    j = S.size;\n\n    while (j--) delta[S.items[S.size - j]] = 0;\n\n    while (S.size !== 0) {\n      w = S.pop();\n      coefficient = (1 + delta[w]) / sigma[w];\n\n      for (j = 0, m = P[w].length; j < m; j++) {\n        v = P[w][j];\n        delta[v] += sigma[v] * coefficient;\n      }\n\n      if (w !== i) centralities[w] += delta[w];\n    }\n  }\n\n  // Rescaling\n  var scale = null;\n\n  if (normalized) scale = N <= 2 ? null : 1 / ((N - 1) * (N - 2));\n  else scale = graph.type === 'undirected' ? 0.5 : null;\n\n  if (scale !== null) {\n    for (i = 0; i < N; i++) centralities[i] *= scale;\n  }\n\n  if (assign) return brandes.index.assign(outputName, centralities);\n\n  return brandes.index.collect(centralities);\n}\n\n/**\n * Exporting.\n */\nvar betweennessCentrality = abstractBetweennessCentrality.bind(null, false);\nbetweennessCentrality.assign = abstractBetweennessCentrality.bind(null, true);\n\nmodule.exports = betweennessCentrality;\n","/**\n * Mnemonist SparseSet\n * ====================\n *\n * JavaScript sparse set implemented on top of byte arrays.\n *\n * [Reference]: https://research.swtch.com/sparse\n */\nvar Iterator = require('obliterator/iterator'),\n    getPointerArray = require('./utils/typed-arrays.js').getPointerArray;\n\n/**\n * SparseSet.\n *\n * @constructor\n */\nfunction SparseSet(length) {\n\n  var ByteArray = getPointerArray(length);\n\n  // Properties\n  this.size = 0;\n  this.length = length;\n  this.dense = new ByteArray(length);\n  this.sparse = new ByteArray(length);\n}\n\n/**\n * Method used to clear the structure.\n *\n * @return {undefined}\n */\nSparseSet.prototype.clear = function() {\n  this.size = 0;\n};\n\n/**\n * Method used to check the existence of a member in the set.\n *\n * @param  {number} member - Member to test.\n * @return {SparseSet}\n */\nSparseSet.prototype.has = function(member) {\n  var index = this.sparse[member];\n\n  return (\n    index < this.size &&\n    this.dense[index] === member\n  );\n};\n\n/**\n * Method used to add a member to the set.\n *\n * @param  {number} member - Member to add.\n * @return {SparseSet}\n */\nSparseSet.prototype.add = function(member) {\n  var index = this.sparse[member];\n\n  if (index < this.size && this.dense[index] === member)\n    return this;\n\n  this.dense[this.size] = member;\n  this.sparse[member] = this.size;\n  this.size++;\n\n  return this;\n};\n\n/**\n * Method used to remove a member from the set.\n *\n * @param  {number} member - Member to delete.\n * @return {boolean}\n */\nSparseSet.prototype.delete = function(member) {\n  var index = this.sparse[member];\n\n  if (index >= this.size || this.dense[index] !== member)\n    return false;\n\n  index = this.dense[this.size - 1];\n  this.dense[this.sparse[member]] = index;\n  this.sparse[index] = this.sparse[member];\n  this.size--;\n\n  return true;\n};\n\n/**\n * Method used to iterate over the set's values.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nSparseSet.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  var item;\n\n  for (var i = 0; i < this.size; i++) {\n    item = this.dense[i];\n\n    callback.call(scope, item, item);\n  }\n};\n\n/**\n * Method used to create an iterator over a set's values.\n *\n * @return {Iterator}\n */\nSparseSet.prototype.values = function() {\n  var size = this.size,\n      dense = this.dense,\n      i = 0;\n\n  return new Iterator(function() {\n    if (i < size) {\n      var item = dense[i];\n      i++;\n\n      return {\n        value: item\n      };\n    }\n\n    return {\n      done: true\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  SparseSet.prototype[Symbol.iterator] = SparseSet.prototype.values;\n\n/**\n * Convenience known methods.\n */\nSparseSet.prototype.inspect = function() {\n  var proxy = new Set();\n\n  for (var i = 0; i < this.size; i++)\n    proxy.add(this.dense[i]);\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: SparseSet,\n    enumerable: false\n  });\n\n  proxy.length = this.length;\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  SparseSet.prototype[Symbol.for('nodejs.util.inspect.custom')] = SparseSet.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = SparseSet;\n","/**\n * Graphology Closeness Centrality\n * ================================\n *\n * JavaScript implementation of the closeness centrality\n *\n * [References]:\n * https://en.wikipedia.org/wiki/Closeness_centrality\n *\n * Linton C. Freeman: Centrality in networks: I.\n * Conceptual clarification. Social Networks 1:215-239, 1979.\n * https://doi.org/10.1016/0378-8733(78)90021-7\n *\n * pg. 201 of Wasserman, S. and Faust, K.,\n * Social Network Analysis: Methods and Applications, 1994,\n * Cambridge University Press.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar resolveDefaults = require('graphology-utils/defaults');\nvar FixedDeque = require('mnemonist/fixed-deque');\nvar SparseSet = require('mnemonist/sparse-set');\nvar NeighborhoodIndex =\n  require('graphology-indices/neighborhood').NeighborhoodIndex;\n\n// TODO: can be computed for a single node\n// TODO: weighted\n// TODO: abstract the single source indexed shortest path in lib\n// TODO: what about self loops?\n// TODO: refactor a BFSQueue working on integer ranges in graphology-indices?\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  nodeCentralityAttribute: 'closenessCentrality',\n  wassermanFaust: false\n};\n\n/**\n * Helpers.\n */\nfunction IndexedBFS(graph) {\n  this.index = new NeighborhoodIndex(graph, 'inbound');\n  this.queue = new FixedDeque(Array, graph.order);\n  this.seen = new SparseSet(graph.order);\n}\n\nIndexedBFS.prototype.fromNode = function (i) {\n  var index = this.index;\n  var queue = this.queue;\n  var seen = this.seen;\n\n  seen.clear();\n  queue.clear();\n\n  seen.add(i);\n  queue.push([i, 0]);\n\n  var item, n, d, j, l, neighbor;\n\n  var total = 0;\n  var count = 0;\n\n  while (queue.size !== 0) {\n    item = queue.shift();\n    n = item[0];\n    d = item[1];\n\n    if (d !== 0) {\n      total += d;\n      count += 1;\n    }\n\n    l = index.starts[n + 1];\n\n    for (j = index.starts[n]; j < l; j++) {\n      neighbor = index.neighborhood[j];\n\n      if (seen.has(neighbor)) continue;\n\n      seen.add(neighbor);\n      queue.push([neighbor, d + 1]);\n    }\n  }\n\n  return [count, total];\n};\n\n/**\n * Abstract function computing the closeness centrality of a graph's nodes.\n *\n * @param  {boolean}  assign        - Should we assign the result to nodes.\n * @param  {Graph}    graph         - Target graph.\n * @param  {?object}  option        - Options:\n * @param  {?string}   nodeCentralityAttribute - Name of the centrality attribute to assign.\n * @param  {?boolean}  wassermanFaust - Whether to compute the Wasserman & Faust\n *                                      variant of the metric.\n * @return {object|undefined}\n */\nfunction abstractClosenessCentrality(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/centrality/closeness: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var wassermanFaust = options.wassermanFaust;\n\n  var bfs = new IndexedBFS(graph);\n\n  var N = graph.order;\n\n  var i, result, count, total, closeness;\n\n  var mapping = new Float64Array(N);\n\n  for (i = 0; i < N; i++) {\n    result = bfs.fromNode(i);\n    count = result[0];\n    total = result[1];\n\n    closeness = 0;\n\n    if (total > 0 && N > 1) {\n      closeness = count / total;\n\n      if (wassermanFaust) {\n        closeness *= count / (N - 1);\n      }\n    }\n\n    mapping[i] = closeness;\n  }\n\n  if (assign) {\n    return bfs.index.assign(options.nodeCentralityAttribute, mapping);\n  }\n\n  return bfs.index.collect(mapping);\n}\n\n/**\n * Exporting.\n */\nvar closenessCentrality = abstractClosenessCentrality.bind(null, false);\nclosenessCentrality.assign = abstractClosenessCentrality.bind(null, true);\n\nmodule.exports = closenessCentrality;\n","/**\n * Graphology Eigenvector Centrality\n * ==================================\n *\n * JavaScript implementation of the eigenvector centrality.\n *\n * [References]:\n * https://en.wikipedia.org/wiki/Eigenvector_centrality\n *\n * Phillip Bonacich. \"Power and Centrality: A Family of Measures.\"\n * American Journal of Sociology, 92(5):1170–1182, 1986\n * http://www.leonidzhukov.net/hse/2014/socialnetworks/papers/Bonacich-Centrality.pdf\n *\n * Mark E. J. Newman.\n * Networks: An Introduct *\n * Oxford University Press, USA, 2010, pp. 169.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar resolveDefaults = require('graphology-utils/defaults');\nvar WeightedNeighborhoodIndex =\n  require('graphology-indices/neighborhood').WeightedNeighborhoodIndex;\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  nodeCentralityAttribute: 'eigenvectorCentrality',\n  getEdgeWeight: 'weight',\n  maxIterations: 100,\n  tolerance: 1e-6\n};\n\n/**\n * Helpers.\n */\nfunction safeVariadicHypot(x) {\n  var max = 0;\n  var s = 0;\n\n  for (var i = 0, l = x.length; i < l; i++) {\n    var n = Math.abs(x[i]);\n\n    if (n > max) {\n      s *= (max / n) * (max / n);\n      max = n;\n    }\n    s += n === 0 && max === 0 ? 0 : (n / max) * (n / max);\n  }\n\n  // NOTE: In case of numerical error we'll assume the norm is 1 in our case!\n  return max === Infinity ? 1 : max * Math.sqrt(s);\n}\n\n/**\n * Abstract function computing the eigenvector centrality of a graph's nodes.\n *\n * @param  {boolean}  assign        - Should we assign the result to nodes.\n * @param  {Graph}    graph         - Target graph.\n * @param  {?object}  option        - Options:\n * @param  {?string}    nodeCentralityAttribute - Name of the centrality attribute to assign.\n * @param  {?string}    getEdgeWeight - Name of the weight algorithm or getter function.\n * @param  {?number}    maxIterations - Maximum number of iterations to perform.\n * @param  {?number}    tolerance     - Error tolerance when checking for convergence.\n * @return {object|undefined}\n */\nfunction abstractEigenvectorCentrality(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/centrality/eigenvector: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var maxIterations = options.maxIterations;\n  var tolerance = options.tolerance;\n\n  var N = graph.order;\n\n  var index = new WeightedNeighborhoodIndex(graph, options.getEdgeWeight);\n\n  var i, j, l, w;\n\n  var x = new Float64Array(graph.order);\n\n  // Initializing\n  for (i = 0; i < N; i++) {\n    x[i] = 1 / N;\n  }\n\n  // Power iterations\n  var iteration = 0;\n  var error = 0;\n  var neighbor, xLast, norm;\n  var converged = false;\n\n  while (iteration < maxIterations) {\n    xLast = x;\n    x = new Float64Array(xLast);\n\n    for (i = 0; i < N; i++) {\n      l = index.starts[i + 1];\n\n      for (j = index.starts[i]; j < l; j++) {\n        neighbor = index.neighborhood[j];\n        w = index.weights[j];\n        x[neighbor] += xLast[i] * w;\n      }\n    }\n\n    norm = safeVariadicHypot(x);\n\n    for (i = 0; i < N; i++) {\n      x[i] /= norm;\n    }\n\n    // Checking convergence\n    error = 0;\n\n    for (i = 0; i < N; i++) {\n      error += Math.abs(x[i] - xLast[i]);\n    }\n\n    if (error < N * tolerance) {\n      converged = true;\n      break;\n    }\n\n    iteration++;\n  }\n\n  if (!converged)\n    throw Error(\n      'graphology-metrics/centrality/eigenvector: failed to converge.'\n    );\n\n  if (assign) {\n    index.assign(options.nodeCentralityAttribute, x);\n    return;\n  }\n\n  return index.collect(x);\n}\n\n/**\n * Exporting.\n */\nvar eigenvectorCentrality = abstractEigenvectorCentrality.bind(null, false);\neigenvectorCentrality.assign = abstractEigenvectorCentrality.bind(null, true);\n\nmodule.exports = eigenvectorCentrality;\n","/**\n * Graphology HITS Algorithm\n * ==========================\n *\n * Implementation of the HITS algorithm for the graphology specs.\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\n\n// TODO: optimize using NeighborhoodIndex\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  nodeAuthorityAttribute: 'authority',\n  nodeHubAttribute: 'hub',\n  getEdgeWeight: 'weight',\n  maxIterations: 100,\n  normalize: true,\n  tolerance: 1e-8\n};\n\n/**\n * Function returning an object with the given keys set to the given value.\n *\n * @param  {array}  keys  - Keys to set.\n * @param  {number} value - Value to set.\n * @return {object}       - The created object.\n */\nfunction dict(keys, value) {\n  var o = Object.create(null);\n\n  var i, l;\n\n  for (i = 0, l = keys.length; i < l; i++) o[keys[i]] = value;\n\n  return o;\n}\n\n/**\n * Function returning the sum of an object's values.\n *\n * @param  {object} o - Target object.\n * @return {number}   - The sum.\n */\nfunction sum(o) {\n  var nb = 0;\n\n  for (var k in o) nb += o[k];\n\n  return nb;\n}\n\n/**\n * HITS function taking a Graph instance & some options and returning a map\n * of nodes to their hubs & authorities.\n *\n * @param  {boolean} assign    - Should we assign the results as node attributes?\n * @param  {Graph}   graph     - A Graph instance.\n * @param  {object}  [options] - Options:\n * @param  {number}    [maxIterations] - Maximum number of iterations to perform.\n * @param  {boolean}   [normalize]     - Whether to normalize the results by the\n *                                       sum of all values.\n * @param  {number}    [tolerance]     - Error tolerance used to check\n *                                       convergence in power method iteration.\n */\nfunction hits(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-hits: the given graph is not a valid graphology instance.'\n    );\n\n  if (graph.multi)\n    throw new Error(\n      'graphology-hits: the HITS algorithm does not work with MultiGraphs.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var getEdgeWeight = createEdgeWeightGetter(options.getEdgeWeight).fromEntry;\n\n  // Variables\n  var order = graph.order;\n  var nodes = graph.nodes();\n  var edges;\n  var hubs = dict(nodes, 1 / order);\n  var weights = {};\n  var converged = false;\n  var lastHubs;\n  var authorities;\n\n  // Iteration variables\n  var node, neighbor, edge, iteration, maxAuthority, maxHub, error, S, i, j, m;\n\n  // Indexing weights\n  graph.forEachEdge(function (e, a, s, t, sa, ta, u) {\n    weights[e] = getEdgeWeight(e, a, s, t, sa, ta, u);\n  });\n\n  // Performing iterations\n  for (iteration = 0; iteration < options.maxIterations; iteration++) {\n    lastHubs = hubs;\n    hubs = dict(nodes, 0);\n    authorities = dict(nodes, 0);\n    maxHub = 0;\n    maxAuthority = 0;\n\n    // Iterating over nodes to update authorities\n    for (i = 0; i < order; i++) {\n      node = nodes[i];\n      edges = graph.outboundEdges(node);\n\n      // Iterating over neighbors\n      for (j = 0, m = edges.length; j < m; j++) {\n        edge = edges[j];\n        neighbor = graph.opposite(node, edge);\n\n        authorities[neighbor] += lastHubs[node] * weights[edge];\n\n        if (authorities[neighbor] > maxAuthority)\n          maxAuthority = authorities[neighbor];\n      }\n    }\n\n    // Iterating over nodes to update hubs\n    for (i = 0; i < order; i++) {\n      node = nodes[i];\n      edges = graph.outboundEdges(node);\n\n      for (j = 0, m = edges.length; j < m; j++) {\n        edge = edges[j];\n        neighbor = graph.opposite(node, edge);\n\n        hubs[node] += authorities[neighbor] * weights[edge];\n\n        if (hubs[neighbor] > maxHub) maxHub = hubs[neighbor];\n      }\n    }\n\n    // Normalizing\n    S = 1 / maxHub;\n\n    for (node in hubs) hubs[node] *= S;\n\n    S = 1 / maxAuthority;\n\n    for (node in authorities) authorities[node] *= S;\n\n    // Checking convergence\n    error = 0;\n\n    for (node in hubs) error += Math.abs(hubs[node] - lastHubs[node]);\n\n    if (error < options.tolerance) {\n      converged = true;\n      break;\n    }\n  }\n\n  if (!converged)\n    throw Error('graphology-metrics/centrality/hits: failed to converge.');\n\n  // Should we normalize the result?\n  if (options.normalize) {\n    S = 1 / sum(authorities);\n\n    for (node in authorities) authorities[node] *= S;\n\n    S = 1 / sum(hubs);\n\n    for (node in hubs) hubs[node] *= S;\n  }\n\n  // Should we assign the results to the graph?\n  if (assign) {\n    graph.updateEachNodeAttributes(\n      function (n, attr) {\n        attr[options.nodeAuthorityAttribute] = authorities[n];\n        attr[options.nodeHubAttribute] = hubs[n];\n\n        return attr;\n      },\n      {\n        attributes: [options.nodeAuthorityAttribute, options.nodeHubAttribute]\n      }\n    );\n\n    return;\n  }\n\n  return {hubs: hubs, authorities: authorities};\n}\n\n/**\n * Exporting.\n */\nvar main = hits.bind(null, false);\nmain.assign = hits.bind(null, true);\n\nmodule.exports = main;\n","/**\n * Graphology Pagerank\n * ====================\n *\n * JavaScript implementation of the pagerank algorithm for graphology.\n *\n * [Reference]:\n * Page, Lawrence; Brin, Sergey; Motwani, Rajeev and Winograd, Terry,\n * The PageRank citation ranking: Bringing order to the Web. 1999\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar resolveDefaults = require('graphology-utils/defaults');\nvar WeightedNeighborhoodIndex =\n  require('graphology-indices/neighborhood').WeightedNeighborhoodIndex;\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  nodePagerankAttribute: 'pagerank',\n  getEdgeWeight: 'weight',\n  alpha: 0.85,\n  maxIterations: 100,\n  tolerance: 1e-6\n};\n\n/**\n * Abstract function applying the pagerank algorithm to the given graph.\n *\n * @param  {boolean}  assign        - Should we assign the result to nodes.\n * @param  {Graph}    graph         - Target graph.\n * @param  {?object}  option        - Options:\n * @param  {?object}    attributes  - Custom attribute names:\n * @param  {?string}      pagerank  - Name of the pagerank attribute to assign.\n * @param  {?string}      weight    - Name of the weight algorithm.\n * @param  {?number}  alpha         - Damping parameter.\n * @param  {?number}  maxIterations - Maximum number of iterations to perform.\n * @param  {?number}  tolerance     - Error tolerance when checking for convergence.\n * @param  {?boolean} weighted      - Should we use the graph's weights.\n * @return {object|undefined}\n */\nfunction abstractPagerank(assign, graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/centrality/pagerank: the given graph is not a valid graphology instance.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  var alpha = options.alpha;\n  var maxIterations = options.maxIterations;\n  var tolerance = options.tolerance;\n\n  var pagerankAttribute = options.nodePagerankAttribute;\n\n  var N = graph.order;\n  var p = 1 / N;\n\n  var index = new WeightedNeighborhoodIndex(graph, options.getEdgeWeight);\n\n  var i, j, l, d;\n\n  var x = new Float64Array(graph.order);\n\n  // Normalizing edge weights & indexing dangling nodes\n  var normalizedEdgeWeights = new Float64Array(index.weights.length);\n  var danglingNodes = [];\n\n  for (i = 0; i < N; i++) {\n    x[i] = p;\n    l = index.starts[i + 1];\n    d = index.outDegrees[i];\n\n    if (d === 0) danglingNodes.push(i);\n\n    for (j = index.starts[i]; j < l; j++) {\n      normalizedEdgeWeights[j] = index.weights[j] / d;\n    }\n  }\n\n  // Power iterations\n  var iteration = 0;\n  var error = 0;\n  var dangleSum, neighbor, xLast;\n  var converged = false;\n\n  while (iteration < maxIterations) {\n    xLast = x;\n    x = new Float64Array(graph.order); // TODO: it should be possible to swap two arrays to avoid allocations (bench)\n\n    dangleSum = 0;\n\n    for (i = 0, l = danglingNodes.length; i < l; i++)\n      dangleSum += xLast[danglingNodes[i]];\n\n    dangleSum *= alpha;\n\n    for (i = 0; i < N; i++) {\n      l = index.starts[i + 1];\n\n      for (j = index.starts[i]; j < l; j++) {\n        neighbor = index.neighborhood[j];\n        x[neighbor] += alpha * xLast[i] * normalizedEdgeWeights[j];\n      }\n\n      x[i] += dangleSum * p + (1 - alpha) * p;\n    }\n\n    // Checking convergence\n    error = 0;\n\n    for (i = 0; i < N; i++) {\n      error += Math.abs(x[i] - xLast[i]);\n    }\n\n    if (error < N * tolerance) {\n      converged = true;\n      break;\n    }\n\n    iteration++;\n  }\n\n  if (!converged)\n    throw Error('graphology-metrics/centrality/pagerank: failed to converge.');\n\n  if (assign) {\n    index.assign(pagerankAttribute, x);\n    return;\n  }\n\n  return index.collect(x);\n}\n\n/**\n * Exporting.\n */\nvar pagerank = abstractPagerank.bind(null, false);\npagerank.assign = abstractPagerank.bind(null, true);\n\nmodule.exports = pagerank;\n","/**\n * Graphology Metrics Centrality\n * ==============================\n *\n * Sub module endpoint.\n */\nvar degree = require('./degree.js');\n\nexports.betweenness = require('./betweenness.js');\nexports.closeness = require('./closeness.js');\nexports.eigenvector = require('./eigenvector.js');\nexports.hits = require('./hits.js');\nexports.pagerank = require('./pagerank.js');\n\nexports.degree = degree.degreeCentrality;\nexports.inDegree = degree.inDegreeCentrality;\nexports.outDegree = degree.outDegreeCentrality;\n","/**\n * Mnemonist Set\n * ==============\n *\n * Useful function related to sets such as union, intersection and so on...\n */\n\n// TODO: optimize versions for less variadicities\n\n/**\n * Variadic function computing the intersection of multiple sets.\n *\n * @param  {...Set} sets - Sets to intersect.\n * @return {Set}         - The intesection.\n */\nexports.intersection = function() {\n  if (arguments.length < 2)\n    throw new Error('mnemonist/Set.intersection: needs at least two arguments.');\n\n  var I = new Set();\n\n  // First we need to find the smallest set\n  var smallestSize = Infinity,\n      smallestSet = null;\n\n  var s, i, l = arguments.length;\n\n  for (i = 0; i < l; i++) {\n    s = arguments[i];\n\n    // If one of the set has no items, we can stop right there\n    if (s.size === 0)\n      return I;\n\n    if (s.size < smallestSize) {\n      smallestSize = s.size;\n      smallestSet = s;\n    }\n  }\n\n  // Now we need to intersect this set with the others\n  var iterator = smallestSet.values(),\n      step,\n      item,\n      add,\n      set;\n\n  // TODO: we can optimize by iterating each next time over the current intersection\n  // but this probably means more RAM to consume since we'll create n-1 sets rather than\n  // only the one.\n  while ((step = iterator.next(), !step.done)) {\n    item = step.value;\n    add = true;\n\n    for (i = 0; i < l; i++) {\n      set = arguments[i];\n\n      if (set === smallestSet)\n        continue;\n\n      if (!set.has(item)) {\n        add = false;\n        break;\n      }\n    }\n\n    if (add)\n      I.add(item);\n  }\n\n  return I;\n};\n\n/**\n * Variadic function computing the union of multiple sets.\n *\n * @param  {...Set} sets - Sets to unite.\n * @return {Set}         - The union.\n */\nexports.union = function() {\n  if (arguments.length < 2)\n    throw new Error('mnemonist/Set.union: needs at least two arguments.');\n\n  var U = new Set();\n\n  var i, l = arguments.length;\n\n  var iterator,\n      step;\n\n  for (i = 0; i < l; i++) {\n    iterator = arguments[i].values();\n\n    while ((step = iterator.next(), !step.done))\n      U.add(step.value);\n  }\n\n  return U;\n};\n\n/**\n * Function computing the difference between two sets.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {Set}   - The difference.\n */\nexports.difference = function(A, B) {\n\n  // If first set is empty\n  if (!A.size)\n    return new Set();\n\n  if (!B.size)\n    return new Set(A);\n\n  var D = new Set();\n\n  var iterator = A.values(),\n      step;\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!B.has(step.value))\n      D.add(step.value);\n  }\n\n  return D;\n};\n\n/**\n * Function computing the symmetric difference between two sets.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {Set}   - The symmetric difference.\n */\nexports.symmetricDifference = function(A, B) {\n  var S = new Set();\n\n  var iterator = A.values(),\n      step;\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!B.has(step.value))\n      S.add(step.value);\n  }\n\n  iterator = B.values();\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!A.has(step.value))\n      S.add(step.value);\n  }\n\n  return S;\n};\n\n/**\n * Function returning whether A is a subset of B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {boolean}\n */\nexports.isSubset = function(A, B) {\n  var iterator = A.values(),\n      step;\n\n  // Shortcuts\n  if (A === B)\n    return true;\n\n  if (A.size > B.size)\n    return false;\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!B.has(step.value))\n      return false;\n  }\n\n  return true;\n};\n\n/**\n * Function returning whether A is a superset of B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {boolean}\n */\nexports.isSuperset = function(A, B) {\n  return exports.isSubset(B, A);\n};\n\n/**\n * Function adding the items of set B to the set A.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n */\nexports.add = function(A, B) {\n  var iterator = B.values(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    A.add(step.value);\n\n  return;\n};\n\n/**\n * Function subtracting the items of set B from the set A.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n */\nexports.subtract = function(A, B) {\n  var iterator = B.values(),\n      step;\n\n  while ((step = iterator.next(), !step.done))\n    A.delete(step.value);\n\n  return;\n};\n\n/**\n * Function intersecting the items of A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n */\nexports.intersect = function(A, B) {\n  var iterator = A.values(),\n      step;\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!B.has(step.value))\n      A.delete(step.value);\n  }\n\n  return;\n};\n\n/**\n * Function disjuncting the items of A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n */\nexports.disjunct = function(A, B) {\n  var iterator = A.values(),\n      step;\n\n  var toRemove = [];\n\n  while ((step = iterator.next(), !step.done)) {\n    if (B.has(step.value))\n      toRemove.push(step.value);\n  }\n\n  iterator = B.values();\n\n  while ((step = iterator.next(), !step.done)) {\n    if (!A.has(step.value))\n      A.add(step.value);\n  }\n\n  for (var i = 0, l = toRemove.length; i < l; i++)\n    A.delete(toRemove[i]);\n\n  return;\n};\n\n/**\n * Function returning the size of the intersection of A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {number}\n */\nexports.intersectionSize = function(A, B) {\n  var tmp;\n\n  // We need to know the smallest set\n  if (A.size > B.size) {\n    tmp = A;\n    A = B;\n    B = tmp;\n  }\n\n  if (A.size === 0)\n    return 0;\n\n  if (A === B)\n    return A.size;\n\n  var iterator = A.values(),\n      step;\n\n  var I = 0;\n\n  while ((step = iterator.next(), !step.done)) {\n    if (B.has(step.value))\n      I++;\n  }\n\n  return I;\n};\n\n/**\n * Function returning the size of the union of A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {number}\n */\nexports.unionSize = function(A, B) {\n  var I = exports.intersectionSize(A, B);\n\n  return A.size + B.size - I;\n};\n\n/**\n * Function returning the Jaccard similarity between A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {number}\n */\nexports.jaccard = function(A, B) {\n  var I = exports.intersectionSize(A, B);\n\n  if (I === 0)\n    return 0;\n\n  var U = A.size + B.size - I;\n\n  return I / U;\n};\n\n/**\n * Function returning the overlap coefficient between A & B.\n *\n * @param  {Set} A - First set.\n * @param  {Set} B - Second set.\n * @return {number}\n */\nexports.overlap = function(A, B) {\n  var I = exports.intersectionSize(A, B);\n\n  if (I === 0)\n    return 0;\n\n  return I / Math.min(A.size, B.size);\n};\n","/**\n * Graphology Simmelian Strength\n * ==============================\n *\n * Function computing the Simmelian strength, i.e. the number of triangles in\n * which an edge stands, for each edge in a given graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar intersectionSize = require('mnemonist/set').intersectionSize;\n\nfunction abstractSimmelianStrength(assign, graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/simmelian-strength: given graph is not a valid graphology instance.'\n    );\n\n  // Indexing neighborhoods\n  var neighborhoods = {};\n\n  graph.forEachNode(function (node) {\n    neighborhoods[node] = new Set(graph.neighbors(node));\n  });\n\n  if (!assign) {\n    var strengths = {};\n\n    graph.forEachEdge(function (edge, _, source, target) {\n      strengths[edge] = intersectionSize(\n        neighborhoods[source],\n        neighborhoods[target]\n      );\n    });\n\n    return strengths;\n  }\n\n  graph.updateEachEdgeAttributes(\n    function (_, attr, source, target) {\n      attr.simmelianStrength = intersectionSize(\n        neighborhoods[source],\n        neighborhoods[target]\n      );\n\n      return attr;\n    },\n    {attributes: ['simmelianStrength']}\n  );\n}\n\nvar simmelianStrength = abstractSimmelianStrength.bind(null, false);\nsimmelianStrength.assign = abstractSimmelianStrength.bind(null, true);\n\nmodule.exports = simmelianStrength;\n","exports.simmelianStrength = require('./simmelian-strength.js');\n","/**\n * Graphology Extent\n * ==================\n *\n * Simple function returning the extent of selected attributes of the graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Function returning the extent of the selected node attributes.\n *\n * @param  {Graph}        graph     - Target graph.\n * @param  {string|array} attribute - Single or multiple attributes.\n * @return {array|object}\n */\nfunction nodeExtent(graph, attribute) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/extent: the given graph is not a valid graphology instance.'\n    );\n\n  var attributes = [].concat(attribute);\n\n  var value, key, a;\n\n  var results = {};\n\n  for (a = 0; a < attributes.length; a++) {\n    key = attributes[a];\n\n    results[key] = [Infinity, -Infinity];\n  }\n\n  graph.forEachNode(function (node, data) {\n    for (a = 0; a < attributes.length; a++) {\n      key = attributes[a];\n      value = data[key];\n\n      if (value < results[key][0]) results[key][0] = value;\n\n      if (value > results[key][1]) results[key][1] = value;\n    }\n  });\n\n  return typeof attribute === 'string' ? results[attribute] : results;\n}\n\n/**\n * Function returning the extent of the selected edge attributes.\n *\n * @param  {Graph}        graph     - Target graph.\n * @param  {string|array} attribute - Single or multiple attributes.\n * @return {array|object}\n */\nfunction edgeExtent(graph, attribute) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/extent: the given graph is not a valid graphology instance.'\n    );\n\n  var attributes = [].concat(attribute);\n\n  var value, key, a;\n\n  var results = {};\n\n  for (a = 0; a < attributes.length; a++) {\n    key = attributes[a];\n\n    results[key] = [Infinity, -Infinity];\n  }\n\n  graph.forEachEdge(function (edge, data) {\n    for (a = 0; a < attributes.length; a++) {\n      key = attributes[a];\n      value = data[key];\n\n      if (value < results[key][0]) results[key][0] = value;\n\n      if (value > results[key][1]) results[key][1] = value;\n    }\n  });\n\n  return typeof attribute === 'string' ? results[attribute] : results;\n}\n\n/**\n * Exporting.\n */\nexports.nodeExtent = nodeExtent;\nexports.edgeExtent = edgeExtent;\n","/**\n * Mnemonist Queue\n * ================\n *\n * Queue implementation based on the ideas of Queue.js that seems to beat\n * a LinkedList one in performance.\n */\nvar Iterator = require('obliterator/iterator'),\n    forEach = require('obliterator/foreach');\n\n/**\n * Queue\n *\n * @constructor\n */\nfunction Queue() {\n  this.clear();\n}\n\n/**\n * Method used to clear the queue.\n *\n * @return {undefined}\n */\nQueue.prototype.clear = function() {\n\n  // Properties\n  this.items = [];\n  this.offset = 0;\n  this.size = 0;\n};\n\n/**\n * Method used to add an item to the queue.\n *\n * @param  {any}    item - Item to enqueue.\n * @return {number}\n */\nQueue.prototype.enqueue = function(item) {\n\n  this.items.push(item);\n  return ++this.size;\n};\n\n/**\n * Method used to retrieve & remove the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.dequeue = function() {\n  if (!this.size)\n    return;\n\n  var item = this.items[this.offset];\n\n  if (++this.offset * 2 >= this.items.length) {\n    this.items = this.items.slice(this.offset);\n    this.offset = 0;\n  }\n\n  this.size--;\n\n  return item;\n};\n\n/**\n * Method used to retrieve the first item of the queue.\n *\n * @return {any}\n */\nQueue.prototype.peek = function() {\n  if (!this.size)\n    return;\n\n  return this.items[this.offset];\n};\n\n/**\n * Method used to iterate over the queue.\n *\n * @param  {function}  callback - Function to call for each item.\n * @param  {object}    scope    - Optional scope.\n * @return {undefined}\n */\nQueue.prototype.forEach = function(callback, scope) {\n  scope = arguments.length > 1 ? scope : this;\n\n  for (var i = this.offset, j = 0, l = this.items.length; i < l; i++, j++)\n    callback.call(scope, this.items[i], j, this);\n};\n\n/*\n * Method used to convert the queue to a JavaScript array.\n *\n * @return {array}\n */\nQueue.prototype.toArray = function() {\n  return this.items.slice(this.offset);\n};\n\n/**\n * Method used to create an iterator over a queue's values.\n *\n * @return {Iterator}\n */\nQueue.prototype.values = function() {\n  var items = this.items,\n      i = this.offset;\n\n  return new Iterator(function() {\n    if (i >= items.length)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n    i++;\n\n    return {\n      value: value,\n      done: false\n    };\n  });\n};\n\n/**\n * Method used to create an iterator over a queue's entries.\n *\n * @return {Iterator}\n */\nQueue.prototype.entries = function() {\n  var items = this.items,\n      i = this.offset,\n      j = 0;\n\n  return new Iterator(function() {\n    if (i >= items.length)\n      return {\n        done: true\n      };\n\n    var value = items[i];\n    i++;\n\n    return {\n      value: [j++, value],\n      done: false\n    };\n  });\n};\n\n/**\n * Attaching the #.values method to Symbol.iterator if possible.\n */\nif (typeof Symbol !== 'undefined')\n  Queue.prototype[Symbol.iterator] = Queue.prototype.values;\n\n/**\n * Convenience known methods.\n */\nQueue.prototype.toString = function() {\n  return this.toArray().join(',');\n};\n\nQueue.prototype.toJSON = function() {\n  return this.toArray();\n};\n\nQueue.prototype.inspect = function() {\n  var array = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(array, 'constructor', {\n    value: Queue,\n    enumerable: false\n  });\n\n  return array;\n};\n\nif (typeof Symbol !== 'undefined')\n  Queue.prototype[Symbol.for('nodejs.util.inspect.custom')] = Queue.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a queue.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @return {Queue}\n */\nQueue.from = function(iterable) {\n  var queue = new Queue();\n\n  forEach(iterable, function(value) {\n    queue.enqueue(value);\n  });\n\n  return queue;\n};\n\n/**\n * Static @.of function taking an arbitrary number of arguments & converting it\n * into a queue.\n *\n * @param  {...any} args\n * @return {Queue}\n */\nQueue.of = function() {\n  return Queue.from(arguments);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = Queue;\n","/**\n * Extend function\n * ================\n *\n * Function used to push a bunch of values into an array at once.\n *\n * Its strategy is to mutate target array's length then setting the new indices\n * to be the values to add.\n *\n * A benchmark proved that it is faster than the following strategies:\n *   1) `array.push.apply(array, values)`.\n *   2) A loop of pushes.\n *   3) `array = array.concat(values)`, obviously.\n *\n * Intuitively, this is correct because when adding a lot of elements, the\n * chosen strategies does not need to handle the `arguments` object to\n * execute #.apply's variadicity and because the array know its final length\n * at the beginning, avoiding potential multiple reallocations of the underlying\n * contiguous array. Some engines may be able to optimize the loop of push\n * operations but empirically they don't seem to do so.\n */\n\n/**\n * Extends the target array with the given values.\n *\n * @param  {array} array  - Target array.\n * @param  {array} values - Values to add.\n */\nmodule.exports = function extend(array, values) {\n  var l2 = values.length;\n\n  if (l2 === 0)\n    return;\n\n  var l1 = array.length;\n\n  array.length += l2;\n\n  for (var i = 0; i < l2; i++)\n    array[l1 + i] = values[i];\n};\n","/**\n * Graphology Unweighted Shortest Path\n * ====================================\n *\n * Basic algorithms to find the shortest paths between nodes in a graph\n * whose edges are not weighted.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar Queue = require('mnemonist/queue');\nvar extend = require('@yomguithereal/helpers/extend');\n\n/**\n * Function attempting to find the shortest path in a graph between\n * given source & target or `null` if such a path does not exist.\n *\n * @param  {Graph}      graph  - Target graph.\n * @param  {any}        source - Source node.\n * @param  {any}        target - Target node.\n * @return {array|null}        - Found path or `null`.\n */\nfunction bidirectional(graph, source, target) {\n  if (!isGraph(graph))\n    throw new Error('graphology-shortest-path: invalid graphology instance.');\n\n  if (arguments.length < 3)\n    throw new Error(\n      'graphology-shortest-path: invalid number of arguments. Expecting at least 3.'\n    );\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-shortest-path: the \"' +\n        source +\n        '\" source node does not exist in the given graph.'\n    );\n\n  if (!graph.hasNode(target))\n    throw new Error(\n      'graphology-shortest-path: the \"' +\n        target +\n        '\" target node does not exist in the given graph.'\n    );\n\n  source = '' + source;\n  target = '' + target;\n\n  // TODO: do we need a self loop to go there?\n  if (source === target) {\n    return [source];\n  }\n\n  // Binding functions\n  var getPredecessors = graph.inboundNeighbors.bind(graph),\n    getSuccessors = graph.outboundNeighbors.bind(graph);\n\n  var predecessor = {},\n    successor = {};\n\n  // Predecessor & successor\n  predecessor[source] = null;\n  successor[target] = null;\n\n  // Fringes\n  var forwardFringe = [source],\n    reverseFringe = [target],\n    currentFringe,\n    node,\n    neighbors,\n    neighbor,\n    i,\n    j,\n    l,\n    m;\n\n  var found = false;\n\n  outer: while (forwardFringe.length && reverseFringe.length) {\n    if (forwardFringe.length <= reverseFringe.length) {\n      currentFringe = forwardFringe;\n      forwardFringe = [];\n\n      for (i = 0, l = currentFringe.length; i < l; i++) {\n        node = currentFringe[i];\n        neighbors = getSuccessors(node);\n\n        for (j = 0, m = neighbors.length; j < m; j++) {\n          neighbor = neighbors[j];\n\n          if (!(neighbor in predecessor)) {\n            forwardFringe.push(neighbor);\n            predecessor[neighbor] = node;\n          }\n\n          if (neighbor in successor) {\n            // Path is found!\n            found = true;\n            break outer;\n          }\n        }\n      }\n    } else {\n      currentFringe = reverseFringe;\n      reverseFringe = [];\n\n      for (i = 0, l = currentFringe.length; i < l; i++) {\n        node = currentFringe[i];\n        neighbors = getPredecessors(node);\n\n        for (j = 0, m = neighbors.length; j < m; j++) {\n          neighbor = neighbors[j];\n\n          if (!(neighbor in successor)) {\n            reverseFringe.push(neighbor);\n            successor[neighbor] = node;\n          }\n\n          if (neighbor in predecessor) {\n            // Path is found!\n            found = true;\n            break outer;\n          }\n        }\n      }\n    }\n  }\n\n  if (!found) return null;\n\n  var path = [];\n\n  while (neighbor) {\n    path.unshift(neighbor);\n    neighbor = predecessor[neighbor];\n  }\n\n  neighbor = successor[path[path.length - 1]];\n\n  while (neighbor) {\n    path.push(neighbor);\n    neighbor = successor[neighbor];\n  }\n\n  return path.length ? path : null;\n}\n\n/**\n * Function attempting to find the shortest path in the graph between the\n * given source node & all the other nodes.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @return {object}        - The map of found paths.\n */\n\n// TODO: cutoff option\nfunction singleSource(graph, source) {\n  if (!isGraph(graph))\n    throw new Error('graphology-shortest-path: invalid graphology instance.');\n\n  if (arguments.length < 2)\n    throw new Error(\n      'graphology-shortest-path: invalid number of arguments. Expecting at least 2.'\n    );\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-shortest-path: the \"' +\n        source +\n        '\" source node does not exist in the given graph.'\n    );\n\n  source = '' + source;\n\n  var nextLevel = {},\n    paths = {},\n    currentLevel,\n    neighbors,\n    v,\n    w,\n    i,\n    l;\n\n  nextLevel[source] = true;\n  paths[source] = [source];\n\n  while (Object.keys(nextLevel).length) {\n    currentLevel = nextLevel;\n    nextLevel = {};\n\n    for (v in currentLevel) {\n      neighbors = graph.outboundNeighbors(v);\n\n      for (i = 0, l = neighbors.length; i < l; i++) {\n        w = neighbors[i];\n\n        if (!paths[w]) {\n          paths[w] = paths[v].concat(w);\n          nextLevel[w] = true;\n        }\n      }\n    }\n  }\n\n  return paths;\n}\n\n/**\n * Function attempting to find the shortest path lengths in the graph between\n * the given source node & all the other nodes.\n *\n * @param  {string} method - Neighbor collection method name.\n * @param  {Graph}  graph  - Target graph.\n * @param  {any}    source - Source node.\n * @return {object}        - The map of found path lengths.\n */\n\n// TODO: cutoff option\nfunction asbtractSingleSourceLength(method, graph, source) {\n  if (!isGraph(graph))\n    throw new Error('graphology-shortest-path: invalid graphology instance.');\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-shortest-path: the \"' +\n        source +\n        '\" source node does not exist in the given graph.'\n    );\n\n  source = '' + source;\n\n  // Performing BFS to count shortest paths\n  var seen = new Set();\n\n  var lengths = {},\n    level = 0;\n\n  lengths[source] = 0;\n\n  var currentLevel = [source];\n\n  var i, l, node;\n\n  while (currentLevel.length !== 0) {\n    var nextLevel = [];\n\n    for (i = 0, l = currentLevel.length; i < l; i++) {\n      node = currentLevel[i];\n\n      if (seen.has(node)) continue;\n\n      seen.add(node);\n      extend(nextLevel, graph[method](node));\n\n      lengths[node] = level;\n    }\n\n    level++;\n    currentLevel = nextLevel;\n  }\n\n  return lengths;\n}\n\nvar singleSourceLength = asbtractSingleSourceLength.bind(\n  null,\n  'outboundNeighbors'\n);\nvar undirectedSingleSourceLength = asbtractSingleSourceLength.bind(\n  null,\n  'neighbors'\n);\n\n/**\n * Function using Ulrik Brandes' method to map single source shortest paths\n * from selected node.\n *\n * [Reference]:\n * Ulrik Brandes: A Faster Algorithm for Betweenness Centrality.\n * Journal of Mathematical Sociology 25(2):163-177, 2001.\n *\n * @param  {Graph}  graph      - Target graph.\n * @param  {any}    source     - Source node.\n * @return {array}             - [Stack, Paths, Sigma]\n */\nfunction brandes(graph, source) {\n  source = '' + source;\n\n  var S = [],\n    P = {},\n    sigma = {};\n\n  var nodes = graph.nodes(),\n    Dv,\n    sigmav,\n    neighbors,\n    v,\n    w,\n    i,\n    j,\n    l,\n    m;\n\n  for (i = 0, l = nodes.length; i < l; i++) {\n    v = nodes[i];\n    P[v] = [];\n    sigma[v] = 0;\n  }\n\n  var D = {};\n\n  sigma[source] = 1;\n  D[source] = 0;\n\n  var queue = Queue.of(source);\n\n  while (queue.size) {\n    v = queue.dequeue();\n    S.push(v);\n\n    Dv = D[v];\n    sigmav = sigma[v];\n\n    neighbors = graph.outboundNeighbors(v);\n\n    for (j = 0, m = neighbors.length; j < m; j++) {\n      w = neighbors[j];\n\n      if (!(w in D)) {\n        queue.enqueue(w);\n        D[w] = Dv + 1;\n      }\n\n      if (D[w] === Dv + 1) {\n        sigma[w] += sigmav;\n        P[w].push(v);\n      }\n    }\n  }\n\n  return [S, P, sigma];\n}\n\n/**\n * Exporting.\n */\nexports.bidirectional = bidirectional;\nexports.singleSource = singleSource;\nexports.singleSourceLength = singleSourceLength;\nexports.undirectedSingleSourceLength = undirectedSingleSourceLength;\nexports.brandes = brandes;\n","/**\n * Graphology Eccentricity\n * ========================\n *\n * Functions used to compute the eccentricity of each node of a given graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar singleSourceLength =\n  require('graphology-shortest-path/unweighted').singleSourceLength;\n\nmodule.exports = function eccentricity(graph, node) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/eccentricity: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.size === 0) return Infinity;\n\n  var ecc = -Infinity;\n\n  var lengths = singleSourceLength(graph, node);\n\n  var otherNode;\n\n  var pathLength,\n    l = 0;\n\n  for (otherNode in lengths) {\n    pathLength = lengths[otherNode];\n\n    if (pathLength > ecc) ecc = pathLength;\n\n    l++;\n  }\n\n  if (l < graph.order) return Infinity;\n\n  return ecc;\n};\n","/**\n * Graphology Diameter\n * ========================\n *\n * Functions used to compute the diameter of the given graph.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar eccentricity = require('../node/eccentricity.js');\n\nmodule.exports = function diameter(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/diameter: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.size === 0) return Infinity;\n\n  var max = -Infinity;\n\n  graph.someNode(function (node) {\n    var e = eccentricity(graph, node);\n\n    if (e > max) max = e;\n\n    // If the graph is not connected, its diameter is infinite\n    return max === Infinity;\n  });\n\n  return max;\n};\n","/**\n * Graphology Modularity\n * ======================\n *\n * Implementation of network modularity for graphology.\n *\n * Modularity is a bit of a tricky problem because there are a wide array\n * of different definitions and implementations. The current implementation\n * try to stay true to Newman's original definition and consider both the\n * undirected & directed case as well as the weighted one. The current\n * implementation should also be aligned with Louvain algorithm's definition\n * of the metric.\n *\n * Regarding the directed version, one has to understand that the undirected\n * version's is basically considering the graph as a directed one where all\n * edges would be mutual.\n *\n * There is one exception to this, though: self loops. To conform with density's\n * definition, as used in modularity's one, and to keep true to the matrix\n * formulation of modularity, one has to note that self-loops only count once\n * in both the undirected and directed cases. This means that a k-clique with\n * one node having a self-loop will not have the same modularity in the\n * undirected and mutual case. Indeed, in both cases the modularity of a\n * k-clique with one loop and minus one internal edge should be equal.\n *\n * This also means that, as with the naive density formula regarding loops,\n * one should increment M when considering a loop. Also, to remain coherent\n * in this regard, degree should not be multiplied by two because of the loop\n * else it will have too much importance regarding the considered proportions.\n *\n * Hence, here are the retained formulas:\n *\n * For dense weighted undirected network:\n * --------------------------------------\n *\n * Q = 1/2m * [ ∑ij[Aij - (di.dj / 2m)] * ∂(ci, cj) ]\n *\n * where:\n *  - i & j being a pair of nodes\n *  - m is the sum of edge weights\n *  - Aij being the weight of the ij edge (or 0 if absent)\n *  - di being the weighted degree of node i\n *  - ci being the community to which belongs node i\n *  - ∂ is Kronecker's delta function (1 if x = y else 0)\n *\n * For dense weighted directed network:\n * ------------------------------------\n *\n * Qd = 1/m * [ ∑ij[Aij - (dini.doutj / m)] * ∂(ci, cj) ]\n *\n * where:\n *  - dini is the in degree of node i\n *  - douti is the out degree of node i\n *\n * For sparse weighted undirected network:\n * ---------------------------------------\n *\n * Q = ∑c[ (∑cinternal / 2m) - (∑ctotal / 2m)² ]\n *\n * where:\n *  - c is a community\n *  - ∑cinternal is the total weight of a community internal edges\n *  - ∑ctotal is the total weight of edges connected to a community\n *\n * For sparse weighted directed network:\n * -------------------------------------\n *\n * Qd = ∑c[ (∑cinternal / m) - (∑cintotal * ∑couttotal / m²) ]\n *\n * where:\n *  - ∑cintotal is the total weight of edges pointing towards a community\n *  - ∑couttotal is the total weight of edges going from a community\n *\n * Note that dense version run in O(N²) while sparse version runs in O(V). So\n * the dense version is mostly here to guarantee the validity of the sparse one.\n * As such it is not used as default.\n *\n * For undirected delta computation:\n * ---------------------------------\n *\n * ∆Q = (dic / 2m) - ((∑ctotal * di) / 2m²)\n *\n * where:\n *  - dic is the degree of the node in community c\n *\n * For directed delta computation:\n * -------------------------------\n *\n * ∆Qd = (dic / m) - (((douti * ∑cintotal) + (dini * ∑couttotal)) / m²)\n *\n * Gephi's version of undirected delta computation:\n * ------------------------------------------------\n *\n * ∆Qgephi = dic - (di * Ztot) / 2m\n *\n * Note that the above formula is erroneous and should really be:\n *\n * ∆Qgephi = dic - (di * Ztot) / m\n *\n * because then: ∆Qgephi = ∆Q * 2m\n *\n * It is used because it is faster to compute. Since Gephi's error is only by\n * a constant factor, it does not make the result incorrect.\n *\n * [Latex]\n *\n * Sparse undirected\n * Q = \\sum_{c} \\bigg{[} \\frac{\\sum\\nolimits_{c\\,in}}{2m} - \\left(\\frac{\\sum\\nolimits_{c\\,tot}}{2m}\\right )^2 \\bigg{]}\n *\n * Sparse directed\n * Q_d = \\sum_{c} \\bigg{[} \\frac{\\sum\\nolimits_{c\\,in}}{m} - \\frac{\\sum_{c\\,tot}^{in}\\sum_{c\\,tot}^{out}}{m^2} \\bigg{]}\n *\n * [Articles]\n * M. E. J. Newman, « Modularity and community structure in networks »,\n * Proc. Natl. Acad. Sci. USA, vol. 103, no 23, 2006, p. 8577–8582\n * https://dx.doi.org/10.1073%2Fpnas.0601602103\n *\n * Newman, M. E. J. « Community detection in networks: Modularity optimization\n * and maximum likelihood are equivalent ». Physical Review E, vol. 94, no 5,\n * novembre 2016, p. 052315. arXiv.org, doi:10.1103/PhysRevE.94.052315.\n * https://arxiv.org/pdf/1606.02319.pdf\n *\n * Blondel, Vincent D., et al. « Fast unfolding of communities in large\n * networks ». Journal of Statistical Mechanics: Theory and Experiment,\n * vol. 2008, no 10, octobre 2008, p. P10008. DOI.org (Crossref),\n * doi:10.1088/1742-5468/2008/10/P10008.\n * https://arxiv.org/pdf/0803.0476.pdf\n *\n * Nicolas Dugué, Anthony Perez. Directed Louvain: maximizing modularity in\n * directed networks. [Research Report] Université d’Orléans. 2015. hal-01231784\n * https://hal.archives-ouvertes.fr/hal-01231784\n *\n * R. Lambiotte, J.-C. Delvenne and M. Barahona. Laplacian Dynamics and\n * Multiscale Modular Structure in Networks,\n * doi:10.1109/TNSE.2015.2391998.\n * https://arxiv.org/abs/0812.1770\n *\n * [Links]:\n * https://math.stackexchange.com/questions/2637469/where-does-the-second-formula-of-modularity-comes-from-in-the-louvain-paper-the\n * https://www.quora.com/How-is-the-formula-for-Louvain-modularity-change-derived\n * https://github.com/gephi/gephi/blob/master/modules/StatisticsPlugin/src/main/java/org/gephi/statistics/plugin/Modularity.java\n * https://github.com/igraph/igraph/blob/eca5e809aab1aa5d4eca1e381389bcde9cf10490/src/community.c#L906\n */\nvar resolveDefaults = require('graphology-utils/defaults');\nvar isGraph = require('graphology-utils/is-graph');\nvar inferType = require('graphology-utils/infer-type');\nvar getters = require('graphology-utils/getters');\n\nvar DEFAULTS = {\n  getNodeCommunity: 'community',\n  getEdgeWeight: 'weight',\n  resolution: 1\n};\n\nfunction collectForUndirectedDense(graph, options) {\n  var communities = new Array(graph.order);\n  var weightedDegrees = new Float64Array(graph.order);\n  var weights = {};\n  var M = 0;\n\n  var getEdgeWeight = getters.createEdgeWeightGetter(\n    options.getEdgeWeight\n  ).fromEntry;\n  var getNodeCommunity = getters.createNodeValueGetter(\n    options.getNodeCommunity\n  ).fromEntry;\n\n  // Collecting communities\n  var i = 0;\n  var ids = {};\n  graph.forEachNode(function (node, attr) {\n    ids[node] = i;\n    communities[i++] = getNodeCommunity(node, attr);\n  });\n\n  // Collecting weights\n  graph.forEachUndirectedEdge(function (edge, attr, source, target, sa, ta, u) {\n    var weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    M += weight;\n    weights[edge] = weight;\n\n    weightedDegrees[ids[source]] += weight;\n\n    // NOTE: we double degree only if we don't have a loop\n    if (source !== target) weightedDegrees[ids[target]] += weight;\n  });\n\n  return {\n    weights: weights,\n    communities: communities,\n    weightedDegrees: weightedDegrees,\n    M: M\n  };\n}\n\nfunction collectForDirectedDense(graph, options) {\n  var communities = new Array(graph.order);\n  var weightedInDegrees = new Float64Array(graph.order);\n  var weightedOutDegrees = new Float64Array(graph.order);\n  var weights = {};\n  var M = 0;\n\n  var getEdgeWeight = getters.createEdgeWeightGetter(\n    options.getEdgeWeight\n  ).fromEntry;\n  var getNodeCommunity = getters.createNodeValueGetter(\n    options.getNodeCommunity\n  ).fromEntry;\n\n  // Collecting communities\n  var i = 0;\n  var ids = {};\n  graph.forEachNode(function (node, attr) {\n    ids[node] = i;\n    communities[i++] = getNodeCommunity(node, attr);\n  });\n\n  // Collecting weights\n  graph.forEachDirectedEdge(function (edge, attr, source, target, sa, ta, u) {\n    var weight = getEdgeWeight(edge, attr, source, target, sa, ta, u);\n\n    M += weight;\n    weights[edge] = weight;\n\n    weightedOutDegrees[ids[source]] += weight;\n    weightedInDegrees[ids[target]] += weight;\n  });\n\n  return {\n    weights: weights,\n    communities: communities,\n    weightedInDegrees: weightedInDegrees,\n    weightedOutDegrees: weightedOutDegrees,\n    M: M\n  };\n}\n\nfunction undirectedDenseModularity(graph, options) {\n  var resolution = options.resolution;\n\n  var result = collectForUndirectedDense(graph, options);\n\n  var communities = result.communities;\n  var weightedDegrees = result.weightedDegrees;\n\n  var M = result.M;\n\n  var nodes = graph.nodes();\n\n  var i, j, l, Aij, didj, e;\n\n  var S = 0;\n\n  var M2 = M * 2;\n\n  for (i = 0, l = graph.order; i < l; i++) {\n    // NOTE: it is important to parse the whole matrix here, diagonal and\n    // lower part included. A lot of implementation differ here because\n    // they process only a part of the matrix\n    for (j = 0; j < l; j++) {\n      // NOTE: Kronecker's delta\n      // NOTE: we could go from O(n^2) to O(avg.C^2)\n      if (communities[i] !== communities[j]) continue;\n\n      e = graph.undirectedEdge(nodes[i], nodes[j]);\n\n      Aij = result.weights[e] || 0;\n      didj = weightedDegrees[i] * weightedDegrees[j];\n\n      // We add twice if we have a self loop\n      if (i === j && typeof e !== 'undefined')\n        S += (Aij - (didj / M2) * resolution) * 2;\n      else S += Aij - (didj / M2) * resolution;\n    }\n  }\n\n  return S / M2;\n}\n\nfunction directedDenseModularity(graph, options) {\n  var resolution = options.resolution;\n\n  var result = collectForDirectedDense(graph, options);\n\n  var communities = result.communities;\n  var weightedInDegrees = result.weightedInDegrees;\n  var weightedOutDegrees = result.weightedOutDegrees;\n\n  var M = result.M;\n\n  var nodes = graph.nodes();\n\n  var i, j, l, Aij, didj, e;\n\n  var S = 0;\n\n  for (i = 0, l = graph.order; i < l; i++) {\n    // NOTE: it is important to parse the whole matrix here, diagonal and\n    // lower part included. A lot of implementation differ here because\n    // they process only a part of the matrix\n    for (j = 0; j < l; j++) {\n      // NOTE: Kronecker's delta\n      // NOTE: we could go from O(n^2) to O(avg.C^2)\n      if (communities[i] !== communities[j]) continue;\n\n      e = graph.directedEdge(nodes[i], nodes[j]);\n\n      Aij = result.weights[e] || 0;\n      didj = weightedInDegrees[i] * weightedOutDegrees[j];\n\n      // Here we multiply by two to simulate iteration through lower part\n      S += Aij - (didj / M) * resolution;\n    }\n  }\n\n  return S / M;\n}\n\nfunction collectCommunitesForUndirected(graph, options) {\n  var communities = {};\n  var totalWeights = {};\n  var internalWeights = {};\n\n  var getNodeCommunity = getters.createNodeValueGetter(\n    options.getNodeCommunity\n  ).fromEntry;\n\n  graph.forEachNode(function (node, attr) {\n    var community = getNodeCommunity(node, attr);\n    communities[node] = community;\n\n    if (typeof community === 'undefined')\n      throw new Error(\n        'graphology-metrics/modularity: the \"' +\n          node +\n          '\" node is not in the partition.'\n      );\n\n    totalWeights[community] = 0;\n    internalWeights[community] = 0;\n  });\n\n  return {\n    communities: communities,\n    totalWeights: totalWeights,\n    internalWeights: internalWeights\n  };\n}\n\nfunction collectCommunitesForDirected(graph, options) {\n  var communities = {};\n  var totalInWeights = {};\n  var totalOutWeights = {};\n  var internalWeights = {};\n\n  var getNodeCommunity = getters.createNodeValueGetter(\n    options.getNodeCommunity\n  ).fromEntry;\n\n  graph.forEachNode(function (node, attr) {\n    var community = getNodeCommunity(node, attr);\n    communities[node] = community;\n\n    if (typeof community === 'undefined')\n      throw new Error(\n        'graphology-metrics/modularity: the \"' +\n          node +\n          '\" node is not in the partition.'\n      );\n\n    totalInWeights[community] = 0;\n    totalOutWeights[community] = 0;\n    internalWeights[community] = 0;\n  });\n\n  return {\n    communities: communities,\n    totalInWeights: totalInWeights,\n    totalOutWeights: totalOutWeights,\n    internalWeights: internalWeights\n  };\n}\n\nfunction undirectedSparseModularity(graph, options) {\n  var resolution = options.resolution;\n\n  var result = collectCommunitesForUndirected(graph, options);\n\n  var M = 0;\n\n  var totalWeights = result.totalWeights;\n  var internalWeights = result.internalWeights;\n  var communities = result.communities;\n\n  var getEdgeWeight = getters.createEdgeWeightGetter(\n    options.getEdgeWeight\n  ).fromEntry;\n\n  graph.forEachUndirectedEdge(function (\n    edge,\n    edgeAttr,\n    source,\n    target,\n    sa,\n    ta,\n    u\n  ) {\n    var weight = getEdgeWeight(edge, edgeAttr, source, target, sa, ta, u);\n\n    M += weight;\n\n    var sourceCommunity = communities[source];\n    var targetCommunity = communities[target];\n\n    totalWeights[sourceCommunity] += weight;\n    totalWeights[targetCommunity] += weight;\n\n    if (sourceCommunity !== targetCommunity) return;\n\n    internalWeights[sourceCommunity] += weight * 2;\n  });\n\n  var Q = 0;\n  var M2 = M * 2;\n\n  for (var C in internalWeights)\n    Q +=\n      internalWeights[C] / M2 - Math.pow(totalWeights[C] / M2, 2) * resolution;\n\n  return Q;\n}\n\nfunction directedSparseModularity(graph, options) {\n  var resolution = options.resolution;\n\n  var result = collectCommunitesForDirected(graph, options);\n\n  var M = 0;\n\n  var totalInWeights = result.totalInWeights;\n  var totalOutWeights = result.totalOutWeights;\n  var internalWeights = result.internalWeights;\n  var communities = result.communities;\n\n  var getEdgeWeight = getters.createEdgeWeightGetter(\n    options.getEdgeWeight\n  ).fromEntry;\n\n  graph.forEachDirectedEdge(function (\n    edge,\n    edgeAttr,\n    source,\n    target,\n    sa,\n    ta,\n    u\n  ) {\n    var weight = getEdgeWeight(edge, edgeAttr, source, target, sa, ta, u);\n\n    M += weight;\n\n    var sourceCommunity = communities[source];\n    var targetCommunity = communities[target];\n\n    totalOutWeights[sourceCommunity] += weight;\n    totalInWeights[targetCommunity] += weight;\n\n    if (sourceCommunity !== targetCommunity) return;\n\n    internalWeights[sourceCommunity] += weight;\n  });\n\n  var Q = 0;\n\n  for (var C in internalWeights)\n    Q +=\n      internalWeights[C] / M -\n      ((totalInWeights[C] * totalOutWeights[C]) / Math.pow(M, 2)) * resolution;\n\n  return Q;\n}\n\n// NOTE: the formula is a bit unclear here but nodeCommunityDegree should be\n// given as the edges count * 2\nfunction undirectedModularityDelta(\n  M,\n  communityTotalWeight,\n  nodeDegree,\n  nodeCommunityDegree\n) {\n  return (\n    nodeCommunityDegree / (2 * M) -\n    (communityTotalWeight * nodeDegree) / (2 * (M * M))\n  );\n}\n\nfunction directedModularityDelta(\n  M,\n  communityTotalInWeight,\n  communityTotalOutWeight,\n  nodeInDegree,\n  nodeOutDegree,\n  nodeCommunityDegree\n) {\n  return (\n    nodeCommunityDegree / M -\n    (nodeOutDegree * communityTotalInWeight +\n      nodeInDegree * communityTotalOutWeight) /\n      (M * M)\n  );\n}\n\nfunction denseModularity(graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/modularity: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.size === 0)\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of an empty graph.'\n    );\n\n  if (graph.multi)\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of a multi graph. Cast it to a simple one beforehand.'\n    );\n\n  var trueType = inferType(graph);\n\n  if (trueType === 'mixed')\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of a mixed graph.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  if (trueType === 'directed') return directedDenseModularity(graph, options);\n\n  return undirectedDenseModularity(graph, options);\n}\n\nfunction sparseModularity(graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/modularity: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.size === 0)\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of an empty graph.'\n    );\n\n  if (graph.multi)\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of a multi graph. Cast it to a simple one beforehand.'\n    );\n\n  var trueType = inferType(graph);\n\n  if (trueType === 'mixed')\n    throw new Error(\n      'graphology-metrics/modularity: cannot compute modularity of a mixed graph.'\n    );\n\n  options = resolveDefaults(options, DEFAULTS);\n\n  if (trueType === 'directed') return directedSparseModularity(graph, options);\n\n  return undirectedSparseModularity(graph, options);\n}\n\nvar modularity = sparseModularity;\n\nmodularity.sparse = sparseModularity;\nmodularity.dense = denseModularity;\nmodularity.undirectedDelta = undirectedModularityDelta;\nmodularity.directedDelta = directedModularityDelta;\n\nmodule.exports = modularity;\n","/**\n * Graphology Weighted Size\n * =========================\n *\n * Function returning the sum of the graph's edges' weights.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\n\n/**\n * Defaults.\n */\nvar DEFAULT_WEIGHT_ATTRIBUTE = 'weight';\n\n/**\n * Weighted size function.\n *\n * @param  {Graph}  graph                    - Target graph.\n * @param  {string|function} [getEdgeWeight] - Name of the weight attribute or getter function.\n * @return {number}\n */\nmodule.exports = function weightedSize(graph, getEdgeWeight) {\n  // Handling errors\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/weighted-size: the given graph is not a valid graphology instance.'\n    );\n\n  getEdgeWeight = createEdgeWeightGetter(\n    getEdgeWeight || DEFAULT_WEIGHT_ATTRIBUTE\n  ).fromEntry;\n\n  var size = 0;\n\n  graph.forEachEdge(function (e, a, s, t, sa, ta, u) {\n    size += getEdgeWeight(e, a, s, t, sa, ta, u);\n  });\n\n  return size;\n};\n","var density = require('./density.js');\nvar extent = require('./extent.js');\n\nexports.diameter = require('./diameter.js');\nexports.modularity = require('./modularity.js');\nexports.simpleSize = require('./simple-size.js');\nexports.weightedSize = require('./weighted-size.js');\n\nexports.abstractDensity = density.abstractDensity;\nexports.density = density.density;\nexports.directedDensity = density.directedDensity;\nexports.undirectedDensity = density.undirectedDensity;\nexports.mixedDensity = density.mixedDensity;\nexports.multiDirectedDensity = density.multiDirectedDensity;\nexports.multiUndirectedDensity = density.multiUndirectedDensity;\nexports.multiMixedDensity = density.multiMixedDensity;\n\nexports.nodeExtent = extent.nodeExtent;\nexports.edgeExtent = extent.edgeExtent;\n","/**\n * Graphology Layout Quality - Edge Uniformity\n * ============================================\n *\n * Function computing the layout quality metric named \"edge uniformity\".\n * It is basically the normalized standard deviation of edge length.\n *\n * [Article]:\n * Rahman, Md Khaledur, et al. « BatchLayout: A Batch-Parallel Force-Directed\n * Graph Layout Algorithm in Shared Memory ».\n * http://arxiv.org/abs/2002.08233.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\nfunction euclideanDistance(a, b) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nmodule.exports = function edgeUniformity(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/layout-quality/edge-uniformity: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.size === 0) return 0;\n\n  var sum = 0,\n    i = 0,\n    l;\n\n  var lengths = new Float64Array(graph.size);\n\n  graph.forEachEdge(function (\n    edge,\n    attr,\n    source,\n    target,\n    sourceAttr,\n    targetAttr\n  ) {\n    var edgeLength = euclideanDistance(sourceAttr, targetAttr);\n\n    lengths[i++] = edgeLength;\n    sum += edgeLength;\n  });\n\n  var avg = sum / graph.size;\n\n  var stdev = 0;\n\n  for (i = 0, l = graph.size; i < l; i++)\n    stdev += Math.pow(avg - lengths[i], 2);\n\n  var metric = stdev / (graph.size * Math.pow(avg, 2));\n\n  return Math.sqrt(metric);\n};\n","/**\n * Mnemonist Fixed Reverse Heap\n * =============================\n *\n * Static heap implementation with fixed capacity. It's a \"reverse\" heap\n * because it stores the elements in reverse so we can replace the worst\n * item in logarithmic time. As such, one cannot pop this heap but can only\n * consume it at the end. This structure is very efficient when trying to\n * find the n smallest/largest items from a larger query (k nearest neigbors\n * for instance).\n */\nvar comparators = require('./utils/comparators.js'),\n    Heap = require('./heap.js');\n\nvar DEFAULT_COMPARATOR = comparators.DEFAULT_COMPARATOR,\n    reverseComparator = comparators.reverseComparator;\n\n/**\n * Helper functions.\n */\n\n/**\n * Function used to sift up.\n *\n * @param {function} compare - Comparison function.\n * @param {array}    heap    - Array storing the heap's data.\n * @param {number}   size    - Heap's true size.\n * @param {number}   i       - Index.\n */\nfunction siftUp(compare, heap, size, i) {\n  var endIndex = size,\n      startIndex = i,\n      item = heap[i],\n      childIndex = 2 * i + 1,\n      rightIndex;\n\n  while (childIndex < endIndex) {\n    rightIndex = childIndex + 1;\n\n    if (\n      rightIndex < endIndex &&\n      compare(heap[childIndex], heap[rightIndex]) >= 0\n    ) {\n      childIndex = rightIndex;\n    }\n\n    heap[i] = heap[childIndex];\n    i = childIndex;\n    childIndex = 2 * i + 1;\n  }\n\n  heap[i] = item;\n  Heap.siftDown(compare, heap, startIndex, i);\n}\n\n/**\n * Fully consumes the given heap.\n *\n * @param  {function} ArrayClass - Array class to use.\n * @param  {function} compare    - Comparison function.\n * @param  {array}    heap       - Array storing the heap's data.\n * @param  {number}   size       - True size of the heap.\n * @return {array}\n */\nfunction consume(ArrayClass, compare, heap, size) {\n  var l = size,\n      i = l;\n\n  var array = new ArrayClass(size),\n      lastItem,\n      item;\n\n  while (i > 0) {\n    lastItem = heap[--i];\n\n    if (i !== 0) {\n      item = heap[0];\n      heap[0] = lastItem;\n      siftUp(compare, heap, --size, 0);\n      lastItem = item;\n    }\n\n    array[i] = lastItem;\n  }\n\n  return array;\n}\n\n/**\n * Binary Minimum FixedReverseHeap.\n *\n * @constructor\n * @param {function} ArrayClass - The class of array to use.\n * @param {function} comparator - Comparator function.\n * @param {number}   capacity   - Maximum number of items to keep.\n */\nfunction FixedReverseHeap(ArrayClass, comparator, capacity) {\n\n  // Comparator can be omitted\n  if (arguments.length === 2) {\n    capacity = comparator;\n    comparator = null;\n  }\n\n  this.ArrayClass = ArrayClass;\n  this.capacity = capacity;\n\n  this.items = new ArrayClass(capacity);\n  this.clear();\n  this.comparator = comparator || DEFAULT_COMPARATOR;\n\n  if (typeof capacity !== 'number' && capacity <= 0)\n    throw new Error('mnemonist/FixedReverseHeap.constructor: capacity should be a number > 0.');\n\n  if (typeof this.comparator !== 'function')\n    throw new Error('mnemonist/FixedReverseHeap.constructor: given comparator should be a function.');\n\n  this.comparator = reverseComparator(this.comparator);\n}\n\n/**\n * Method used to clear the heap.\n *\n * @return {undefined}\n */\nFixedReverseHeap.prototype.clear = function() {\n\n  // Properties\n  this.size = 0;\n};\n\n/**\n * Method used to push an item into the heap.\n *\n * @param  {any}    item - Item to push.\n * @return {number}\n */\nFixedReverseHeap.prototype.push = function(item) {\n\n  // Still some place\n  if (this.size < this.capacity) {\n    this.items[this.size] = item;\n    Heap.siftDown(this.comparator, this.items, 0, this.size);\n    this.size++;\n  }\n\n  // Heap is full, we need to replace worst item\n  else {\n\n    if (this.comparator(item, this.items[0]) > 0)\n      Heap.replace(this.comparator, this.items, item);\n  }\n\n  return this.size;\n};\n\n/**\n * Method used to peek the worst item in the heap.\n *\n * @return {any}\n */\nFixedReverseHeap.prototype.peek = function() {\n  return this.items[0];\n};\n\n/**\n * Method used to consume the heap fully and return its items as a sorted array.\n *\n * @return {array}\n */\nFixedReverseHeap.prototype.consume = function() {\n  var items = consume(this.ArrayClass, this.comparator, this.items, this.size);\n  this.size = 0;\n\n  return items;\n};\n\n/**\n * Method used to convert the heap to an array. Note that it basically clone\n * the heap and consumes it completely. This is hardly performant.\n *\n * @return {array}\n */\nFixedReverseHeap.prototype.toArray = function() {\n  return consume(this.ArrayClass, this.comparator, this.items.slice(0, this.size), this.size);\n};\n\n/**\n * Convenience known methods.\n */\nFixedReverseHeap.prototype.inspect = function() {\n  var proxy = this.toArray();\n\n  // Trick so that node displays the name of the constructor\n  Object.defineProperty(proxy, 'constructor', {\n    value: FixedReverseHeap,\n    enumerable: false\n  });\n\n  return proxy;\n};\n\nif (typeof Symbol !== 'undefined')\n  FixedReverseHeap.prototype[Symbol.for('nodejs.util.inspect.custom')] = FixedReverseHeap.prototype.inspect;\n\n/**\n * Exporting.\n */\nmodule.exports = FixedReverseHeap;\n","/**\n * Mnemonist Quick Sort\n * =====================\n *\n * Quick sort related functions.\n * Adapted from: https://alienryderflex.com/quicksort/\n */\nvar LOS = new Float64Array(64),\n    HIS = new Float64Array(64);\n\nfunction inplaceQuickSort(array, lo, hi) {\n  var p, i, l, r, swap;\n\n  LOS[0] = lo;\n  HIS[0] = hi;\n  i = 0;\n\n  while (i >= 0) {\n    l = LOS[i];\n    r = HIS[i] - 1;\n\n    if (l < r) {\n      p = array[l];\n\n      while (l < r) {\n        while (array[r] >= p && l < r)\n          r--;\n\n        if (l < r)\n          array[l++] = array[r];\n\n        while (array[l] <= p && l < r)\n          l++;\n\n        if (l < r)\n          array[r--] = array[l];\n      }\n\n      array[l] = p;\n      LOS[i + 1] = l + 1;\n      HIS[i + 1] = HIS[i];\n      HIS[i++] = l;\n\n      if (HIS[i] - LOS[i] > HIS[i - 1] - LOS[i - 1]) {\n        swap = LOS[i];\n        LOS[i] = LOS[i - 1];\n        LOS[i - 1] = swap;\n\n        swap = HIS[i];\n        HIS[i] = HIS[i - 1];\n        HIS[i - 1] = swap;\n      }\n    }\n    else {\n      i--;\n    }\n  }\n\n  return array;\n}\n\nexports.inplaceQuickSort = inplaceQuickSort;\n\nfunction inplaceQuickSortIndices(array, indices, lo, hi) {\n  var p, i, l, r, t, swap;\n\n  LOS[0] = lo;\n  HIS[0] = hi;\n  i = 0;\n\n  while (i >= 0) {\n    l = LOS[i];\n    r = HIS[i] - 1;\n\n    if (l < r) {\n      t = indices[l];\n      p = array[t];\n\n      while (l < r) {\n        while (array[indices[r]] >= p && l < r)\n          r--;\n\n        if (l < r)\n          indices[l++] = indices[r];\n\n        while (array[indices[l]] <= p && l < r)\n          l++;\n\n        if (l < r)\n          indices[r--] = indices[l];\n      }\n\n      indices[l] = t;\n      LOS[i + 1] = l + 1;\n      HIS[i + 1] = HIS[i];\n      HIS[i++] = l;\n\n      if (HIS[i] - LOS[i] > HIS[i - 1] - LOS[i - 1]) {\n        swap = LOS[i];\n        LOS[i] = LOS[i - 1];\n        LOS[i - 1] = swap;\n\n        swap = HIS[i];\n        HIS[i] = HIS[i - 1];\n        HIS[i - 1] = swap;\n      }\n    }\n    else {\n      i--;\n    }\n  }\n\n  return indices;\n}\n\nexports.inplaceQuickSortIndices = inplaceQuickSortIndices;\n","/**\n * Mnemonist KDTree\n * =================\n *\n * Low-level JavaScript implementation of a k-dimensional tree.\n */\nvar iterables = require('./utils/iterables.js');\nvar typed = require('./utils/typed-arrays.js');\nvar createTupleComparator = require('./utils/comparators.js').createTupleComparator;\nvar FixedReverseHeap = require('./fixed-reverse-heap.js');\nvar inplaceQuickSortIndices = require('./sort/quick.js').inplaceQuickSortIndices;\n\n/**\n * Helper function used to compute the squared distance between a query point\n * and an indexed points whose values are stored in a tree's axes.\n *\n * Note that squared distance is used instead of euclidean to avoid\n * costly sqrt computations.\n *\n * @param  {number} dimensions - Number of dimensions.\n * @param  {array}  axes       - Axes data.\n * @param  {number} pivot      - Pivot.\n * @param  {array}  point      - Query point.\n * @return {number}\n */\nfunction squaredDistanceAxes(dimensions, axes, pivot, b) {\n  var d;\n\n  var dist = 0,\n      step;\n\n  for (d = 0; d < dimensions; d++) {\n    step = axes[d][pivot] - b[d];\n    dist += step * step;\n  }\n\n  return dist;\n}\n\n/**\n * Helper function used to reshape input data into low-level axes data.\n *\n * @param  {number} dimensions - Number of dimensions.\n * @param  {array}  data       - Data in the shape [label, [x, y, z...]]\n * @return {object}\n */\nfunction reshapeIntoAxes(dimensions, data) {\n  var l = data.length;\n\n  var axes = new Array(dimensions),\n      labels = new Array(l),\n      axis;\n\n  var PointerArray = typed.getPointerArray(l);\n\n  var ids = new PointerArray(l);\n\n  var d, i, row;\n\n  var f = true;\n\n  for (d = 0; d < dimensions; d++) {\n    axis = new Float64Array(l);\n\n    for (i = 0; i < l; i++) {\n      row = data[i];\n      axis[i] = row[1][d];\n\n      if (f) {\n        labels[i] = row[0];\n        ids[i] = i;\n      }\n    }\n\n    f = false;\n    axes[d] = axis;\n  }\n\n  return {axes: axes, ids: ids, labels: labels};\n}\n\n/**\n * Helper function used to build a kd-tree from axes data.\n *\n * @param  {number} dimensions - Number of dimensions.\n * @param  {array}  axes       - Axes.\n * @param  {array}  ids        - Indices to sort.\n * @param  {array}  labels     - Point labels.\n * @return {object}\n */\nfunction buildTree(dimensions, axes, ids, labels) {\n  var l = labels.length;\n\n  // NOTE: +1 because we need to keep 0 as null pointer\n  var PointerArray = typed.getPointerArray(l + 1);\n\n  // Building the tree\n  var pivots = new PointerArray(l),\n      lefts = new PointerArray(l),\n      rights = new PointerArray(l);\n\n  var stack = [[0, 0, ids.length, -1, 0]],\n      step,\n      parent,\n      direction,\n      median,\n      pivot,\n      lo,\n      hi;\n\n  var d, i = 0;\n\n  while (stack.length !== 0) {\n    step = stack.pop();\n\n    d = step[0];\n    lo = step[1];\n    hi = step[2];\n    parent = step[3];\n    direction = step[4];\n\n    inplaceQuickSortIndices(axes[d], ids, lo, hi);\n\n    l = hi - lo;\n    median = lo + (l >>> 1); // Fancy floor(l / 2)\n    pivot = ids[median];\n    pivots[i] = pivot;\n\n    if (parent > -1) {\n      if (direction === 0)\n        lefts[parent] = i + 1;\n      else\n        rights[parent] = i + 1;\n    }\n\n    d = (d + 1) % dimensions;\n\n    // Right\n    if (median !== lo && median !== hi - 1) {\n      stack.push([d, median + 1, hi, i, 1]);\n    }\n\n    // Left\n    if (median !== lo) {\n      stack.push([d, lo, median, i, 0]);\n    }\n\n    i++;\n  }\n\n  return {\n    axes: axes,\n    labels: labels,\n    pivots: pivots,\n    lefts: lefts,\n    rights: rights\n  };\n}\n\n/**\n * KDTree.\n *\n * @constructor\n */\nfunction KDTree(dimensions, build) {\n  this.dimensions = dimensions;\n  this.visited = 0;\n\n  this.axes = build.axes;\n  this.labels = build.labels;\n\n  this.pivots = build.pivots;\n  this.lefts = build.lefts;\n  this.rights = build.rights;\n\n  this.size = this.labels.length;\n}\n\n/**\n * Method returning the query's nearest neighbor.\n *\n * @param  {array}  query - Query point.\n * @return {any}\n */\nKDTree.prototype.nearestNeighbor = function(query) {\n  var bestDistance = Infinity,\n      best = null;\n\n  var dimensions = this.dimensions,\n      axes = this.axes,\n      pivots = this.pivots,\n      lefts = this.lefts,\n      rights = this.rights;\n\n  var visited = 0;\n\n  function recurse(d, node) {\n    visited++;\n\n    var left = lefts[node],\n        right = rights[node],\n        pivot = pivots[node];\n\n    var dist = squaredDistanceAxes(\n      dimensions,\n      axes,\n      pivot,\n      query\n    );\n\n    if (dist < bestDistance) {\n      best = pivot;\n      bestDistance = dist;\n\n      if (dist === 0)\n        return;\n    }\n\n    var dx = axes[d][pivot] - query[d];\n\n    d = (d + 1) % dimensions;\n\n    // Going the correct way?\n    if (dx > 0) {\n      if (left !== 0)\n        recurse(d, left - 1);\n    }\n    else {\n      if (right !== 0)\n        recurse(d, right - 1);\n    }\n\n    // Going the other way?\n    if (dx * dx < bestDistance) {\n      if (dx > 0) {\n        if (right !== 0)\n          recurse(d, right - 1);\n      }\n      else {\n        if (left !== 0)\n          recurse(d, left - 1);\n      }\n    }\n  }\n\n  recurse(0, 0);\n\n  this.visited = visited;\n  return this.labels[best];\n};\n\nvar KNN_HEAP_COMPARATOR_3 = createTupleComparator(3);\nvar KNN_HEAP_COMPARATOR_2 = createTupleComparator(2);\n\n/**\n * Method returning the query's k nearest neighbors.\n *\n * @param  {number} k     - Number of nearest neighbor to retrieve.\n * @param  {array}  query - Query point.\n * @return {array}\n */\n\n// TODO: can do better by improving upon static-kdtree here\nKDTree.prototype.kNearestNeighbors = function(k, query) {\n  if (k <= 0)\n    throw new Error('mnemonist/kd-tree.kNearestNeighbors: k should be a positive number.');\n\n  k = Math.min(k, this.size);\n\n  if (k === 1)\n    return [this.nearestNeighbor(query)];\n\n  var heap = new FixedReverseHeap(Array, KNN_HEAP_COMPARATOR_3, k);\n\n  var dimensions = this.dimensions,\n      axes = this.axes,\n      pivots = this.pivots,\n      lefts = this.lefts,\n      rights = this.rights;\n\n  var visited = 0;\n\n  function recurse(d, node) {\n    var left = lefts[node],\n        right = rights[node],\n        pivot = pivots[node];\n\n    var dist = squaredDistanceAxes(\n      dimensions,\n      axes,\n      pivot,\n      query\n    );\n\n    heap.push([dist, visited++, pivot]);\n\n    var point = query[d],\n        split = axes[d][pivot],\n        dx = point - split;\n\n    d = (d + 1) % dimensions;\n\n    // Going the correct way?\n    if (point < split) {\n      if (left !== 0) {\n        recurse(d, left - 1);\n      }\n    }\n    else {\n      if (right !== 0) {\n        recurse(d, right - 1);\n      }\n    }\n\n    // Going the other way?\n    if (dx * dx < heap.peek()[0] || heap.size < k) {\n      if (point < split) {\n        if (right !== 0) {\n          recurse(d, right - 1);\n        }\n      }\n      else {\n        if (left !== 0) {\n          recurse(d, left - 1);\n        }\n      }\n    }\n  }\n\n  recurse(0, 0);\n\n  this.visited = visited;\n\n  var best = heap.consume();\n\n  for (var i = 0; i < best.length; i++)\n    best[i] = this.labels[best[i][2]];\n\n  return best;\n};\n\n/**\n * Method returning the query's k nearest neighbors by linear search.\n *\n * @param  {number} k     - Number of nearest neighbor to retrieve.\n * @param  {array}  query - Query point.\n * @return {array}\n */\nKDTree.prototype.linearKNearestNeighbors = function(k, query) {\n  if (k <= 0)\n    throw new Error('mnemonist/kd-tree.kNearestNeighbors: k should be a positive number.');\n\n  k = Math.min(k, this.size);\n\n  var heap = new FixedReverseHeap(Array, KNN_HEAP_COMPARATOR_2, k);\n\n  var i, l, dist;\n\n  for (i = 0, l = this.size; i < l; i++) {\n    dist = squaredDistanceAxes(\n      this.dimensions,\n      this.axes,\n      this.pivots[i],\n      query\n    );\n\n    heap.push([dist, i]);\n  }\n\n  var best = heap.consume();\n\n  for (i = 0; i < best.length; i++)\n    best[i] = this.labels[this.pivots[best[i][1]]];\n\n  return best;\n};\n\n/**\n * Convenience known methods.\n */\nKDTree.prototype.inspect = function() {\n  var dummy = new Map();\n\n  dummy.dimensions = this.dimensions;\n\n  Object.defineProperty(dummy, 'constructor', {\n    value: KDTree,\n    enumerable: false\n  });\n\n  var i, j, point;\n\n  for (i = 0; i < this.size; i++) {\n    point = new Array(this.dimensions);\n\n    for (j = 0; j < this.dimensions; j++)\n      point[j] = this.axes[j][i];\n\n    dummy.set(this.labels[i], point);\n  }\n\n  return dummy;\n};\n\nif (typeof Symbol !== 'undefined')\n  KDTree.prototype[Symbol.for('nodejs.util.inspect.custom')] = KDTree.prototype.inspect;\n\n/**\n * Static @.from function taking an arbitrary iterable & converting it into\n * a structure.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {number}   dimensions - Space dimensions.\n * @return {KDTree}\n */\nKDTree.from = function(iterable, dimensions) {\n  var data = iterables.toArray(iterable);\n\n  var reshaped = reshapeIntoAxes(dimensions, data);\n\n  var result = buildTree(dimensions, reshaped.axes, reshaped.ids, reshaped.labels);\n\n  return new KDTree(dimensions, result);\n};\n\n/**\n * Static @.from function building a KDTree from given axes.\n *\n * @param  {Iterable} iterable   - Target iterable.\n * @param  {number}   dimensions - Space dimensions.\n * @return {KDTree}\n */\nKDTree.fromAxes = function(axes, labels) {\n  if (!labels)\n    labels = typed.indices(axes[0].length);\n\n  var dimensions = axes.length;\n\n  var result = buildTree(axes.length, axes, typed.indices(labels.length), labels);\n\n  return new KDTree(dimensions, result);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = KDTree;\n","/**\n * Graphology Layout Quality - Neighborhood Preservation\n * ======================================================\n *\n * Function computing the layout quality metric named \"neighborhood preservation\".\n * It is basically the average of overlap coefficient between node neighbors in\n * the graph and equivalent k-nn in the 2d layout space.\n *\n * [Article]:\n * Rahman, Md Khaledur, et al. « BatchLayout: A Batch-Parallel Force-Directed\n * Graph Layout Algorithm in Shared Memory ».\n * http://arxiv.org/abs/2002.08233.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n  KDTree = require('mnemonist/kd-tree'),\n  intersectionSize = require('mnemonist/set').intersectionSize;\n\nmodule.exports = function neighborhoodPreservation(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/layout-quality/neighborhood-preservation: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.order === 0)\n    throw new Error(\n      'graphology-metrics/layout-quality/neighborhood-preservation: cannot compute stress for a null graph.'\n    );\n\n  if (graph.size === 0) return 0;\n\n  var axes = [new Float64Array(graph.order), new Float64Array(graph.order)],\n    i = 0;\n\n  graph.forEachNode(function (node, attr) {\n    axes[0][i] = attr.x;\n    axes[1][i++] = attr.y;\n  });\n\n  var tree = KDTree.fromAxes(axes, graph.nodes());\n\n  var sum = 0;\n\n  graph.forEachNode(function (node, attr) {\n    var neighbors = new Set(graph.neighbors(node));\n\n    // If node has no neighbors or is connected to every other node\n    if (neighbors.size === 0 || neighbors.size === graph.order - 1) {\n      sum += 1;\n      return;\n    }\n\n    var knn = tree.kNearestNeighbors(neighbors.size + 1, [attr.x, attr.y]);\n    knn = new Set(knn.slice(1));\n\n    var I = intersectionSize(neighbors, knn);\n\n    // Computing overlap coefficient\n    sum += I / knn.size;\n  });\n\n  return sum / graph.order;\n};\n","/**\n * Graphology Layout Quality - Stress\n * ===================================\n *\n * Function computing the layout quality metric named \"stress\".\n * It is basically the sum of normalized deltas between graph topology distances\n * and 2d space distances of the layout.\n *\n * [Article]:\n * Rahman, Md Khaledur, et al. « BatchLayout: A Batch-Parallel Force-Directed\n * Graph Layout Algorithm in Shared Memory ».\n * http://arxiv.org/abs/2002.08233.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n  undirectedSingleSourceLength =\n    require('graphology-shortest-path/unweighted').undirectedSingleSourceLength;\n\nfunction euclideanDistance(a, b) {\n  return Math.sqrt(Math.pow(a.x - b.x, 2) + Math.pow(a.y - b.y, 2));\n}\n\nmodule.exports = function stress(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/layout-quality/stress: given graph is not a valid graphology instance.'\n    );\n\n  if (graph.order === 0)\n    throw new Error(\n      'graphology-metrics/layout-quality/stress: cannot compute stress for a null graph.'\n    );\n\n  var nodes = new Array(graph.order),\n    entries = new Array(graph.order),\n    i = 0;\n\n  // We choose an arbitrary large distance for when two nodes cannot be\n  // connected because they belong to different connected components\n  // and because we cannot deal with Infinity in our computations\n  // This is what most papers recommend anyway\n  var maxDistance = graph.order * 4;\n\n  graph.forEachNode(function (node, attr) {\n    nodes[i] = node;\n    entries[i++] = attr;\n  });\n\n  var j, l, p1, p2, shortestPaths, dij, wij, cicj;\n\n  var sum = 0;\n\n  for (i = 0, l = graph.order; i < l; i++) {\n    shortestPaths = undirectedSingleSourceLength(graph, nodes[i]);\n\n    p1 = entries[i];\n\n    for (j = i + 1; j < l; j++) {\n      p2 = entries[j];\n\n      // NOTE: dij should be 0 since we don't consider self-loops\n      dij = shortestPaths[nodes[j]];\n\n      // Target is in another castle\n      if (typeof dij === 'undefined') dij = maxDistance;\n\n      cicj = euclideanDistance(p1, p2);\n      wij = 1 / (dij * dij);\n\n      sum += wij * Math.pow(cicj - dij, 2);\n    }\n  }\n\n  return sum;\n};\n","exports.edgeUniformity = require('./edge-uniformity.js');\nexports.neighborhoodPreservation = require('./neighborhood-preservation.js');\nexports.stress = require('./stress.js');\n","/**\n * Graphology Weighted Degree\n * ===========================\n *\n * Function computing the weighted degree of nodes. The weighted degree is the\n * sum of a node's edges' weights.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Defaults.\n */\nvar DEFAULT_WEIGHT_ATTRIBUTE = 'weight';\n\n/**\n * Asbtract function to perform any kind of weighted degree.\n *\n * @param  {string}          name          - Name of the implemented function.\n * @param  {string}          method        - Method of the graph to get the edges.\n * @param  {Graph}           graph         - A graphology instance.\n * @param  {string}          node          - Target node.\n * @param  {string|function} getEdgeWeight - Name of edge weight attribute or getter function.\n *\n * @return {number}\n */\nfunction abstractWeightedDegree(name, method, graph, node, getEdgeWeight) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-metrics/' +\n        name +\n        ': the given graph is not a valid graphology instance.'\n    );\n\n  getEdgeWeight = getEdgeWeight || DEFAULT_WEIGHT_ATTRIBUTE;\n\n  var d = 0;\n\n  graph[method](node, function (e, a, s, t, sa, ta, u) {\n    var w =\n      typeof getEdgeWeight === 'function'\n        ? getEdgeWeight(e, a, s, t, sa, ta, u)\n        : a[getEdgeWeight];\n\n    if (typeof w !== 'number' || isNaN(w)) w = 1;\n\n    d += w;\n  });\n\n  return d;\n}\n\n/**\n * Exports.\n */\nexports.weightedDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedDegree',\n  'forEachEdge'\n);\nexports.weightedInDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedInDegree',\n  'forEachInEdge'\n);\nexports.weightedOutDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedOutDegree',\n  'forEachOutEdge'\n);\nexports.weightedInboundDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedInboundDegree',\n  'forEachInboundEdge'\n);\nexports.weightedOutboundDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedOutboundDegree',\n  'forEachOutboundEdge'\n);\nexports.weightedUndirectedDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedUndirectedDegree',\n  'forEachUndirectedEdge'\n);\nexports.weightedDirectedDegree = abstractWeightedDegree.bind(\n  null,\n  'weightedDirectedDegree',\n  'forEachDirectedEdge'\n);\n","var wd = require('./weighted-degree.js');\n\nexports.eccentricity = require('./eccentricity.js');\n\nexports.weightedDegree = wd.weightedDegree;\nexports.weightedInDegree = wd.weightedInDegree;\nexports.weightedOutDegree = wd.weightedOutDegree;\nexports.weightedInboundDegree = wd.weightedInboundDegree;\nexports.weightedOutboundDegree = wd.weightedOutboundDegree;\nexports.weightedUndirectedDegree = wd.weightedUndirectedDegree;\nexports.weightedDirectedDegree = wd.weightedDirectedDegree;\n","/**\n * Graphology Metrics\n * ===================\n *\n * Library endpoint.\n */\nexports.centrality = require('./centrality');\nexports.edge = require('./edge');\nexports.graph = require('./graph');\nexports.layoutQuality = require('./layout-quality');\nexports.node = require('./node');\n","module.exports = require('graphology-metrics');\n","/**\n * Graphology Disjoint Union Operator\n * ===================================\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyNode = require('graphology-utils/add-node').copyNode;\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\n/**\n * Function returning the disjoint union of two given graphs by giving new keys\n * to nodes & edges.\n *\n * @param  {Graph} G - The first graph.\n * @param  {Graph} H - The second graph.\n * @return {Graph}\n */\nmodule.exports = function disjointUnion(G, H) {\n  if (!isGraph(G) || !isGraph(H))\n    throw new Error('graphology-operators/disjoint-union: invalid graph.');\n\n  if (G.multi !== H.multi)\n    throw new Error(\n      'graphology-operators/disjoint-union: both graph should be simple or multi.'\n    );\n\n  var R = G.nullCopy();\n\n  // TODO: in the spirit of this operator we should probably prefix something\n  R.mergeAttributes(G.getAttributes());\n\n  var labelsG = {};\n  var labelsH = {};\n\n  var i = 0;\n\n  // Adding nodes\n  G.forEachNode(function (key, attr) {\n    labelsG[key] = i;\n\n    copyNode(R, i, attr);\n\n    i++;\n  });\n\n  H.forEachNode(function (key, attr) {\n    labelsH[key] = i;\n\n    copyNode(R, i, attr);\n\n    i++;\n  });\n\n  // Adding edges\n  i = 0;\n\n  G.forEachEdge(function (key, attr, source, target, _s, _t, undirected) {\n    copyEdge(\n      R,\n      undirected,\n      i++,\n      labelsG[source],\n      labelsG[target],\n      target,\n      attr\n    );\n  });\n\n  H.forEachEdge(function (key, attr, source, target, _s, _t, undirected) {\n    copyEdge(\n      R,\n      undirected,\n      i++,\n      labelsH[source],\n      labelsH[target],\n      target,\n      attr\n    );\n  });\n\n  return R;\n};\n","/**\n * Graphology Revers Operator\n * ===========================\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\n/**\n * Function reversing the given graph.\n *\n * @param  {Graph} graph - Target graph.\n * @return {Graph}\n */\nmodule.exports = function reverse(graph) {\n  if (!isGraph(graph))\n    throw new Error('graphology-operators/reverse: invalid graph.');\n\n  var reversed = graph.emptyCopy();\n\n  // Importing undirected edges\n  graph.forEachUndirectedEdge(function (key, attr, source, target) {\n    copyEdge(reversed, true, key, source, target, attr);\n  });\n\n  // Reversing directed edges\n  graph.forEachDirectedEdge(function (key, attr, source, target) {\n    copyEdge(reversed, false, key, target, source, attr);\n  });\n\n  return reversed;\n};\n","/**\n * Graphology Sub Graph\n * =====================\n *\n * Function returning the subgraph composed of the nodes passed as parameters.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyNode = require('graphology-utils/add-node').copyNode;\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function subgraph(graph, nodes) {\n  if (!isGraph(graph))\n    throw new Error('graphology-operators/subgraph: invalid graph instance.');\n\n  var S = graph.nullCopy();\n\n  var filterNode = nodes;\n\n  if (Array.isArray(nodes)) {\n    if (nodes.length === 0) return S;\n\n    nodes = new Set(nodes);\n  }\n\n  if (nodes instanceof Set) {\n    if (nodes.size === 0) return S;\n\n    filterNode = function (key) {\n      return nodes.has(key);\n    };\n\n    // Ensuring given keys are casted to string\n    var old = nodes;\n    nodes = new Set();\n\n    old.forEach(function (node) {\n      nodes.add('' + node);\n    });\n  }\n\n  if (typeof filterNode !== 'function')\n    throw new Error(\n      'graphology-operators/subgraph: invalid nodes. Expecting an array or a set or a filtering function.'\n    );\n\n  if (typeof nodes === 'function') {\n    graph.forEachNode(function (key, attr) {\n      if (!filterNode(key, attr)) return;\n\n      copyNode(S, key, attr);\n    });\n\n    // Early termination\n    if (S.order === 0) return S;\n  } else {\n    nodes.forEach(function (key) {\n      if (!graph.hasNode(key))\n        throw new Error(\n          'graphology-operators/subgraph: the \"' +\n            key +\n            '\" node was not found in the graph.'\n        );\n\n      copyNode(S, key, graph.getNodeAttributes(key));\n    });\n  }\n\n  graph.forEachEdge(function (\n    key,\n    attr,\n    source,\n    target,\n    sourceAttr,\n    targetAttr,\n    undirected\n  ) {\n    if (!filterNode(source, sourceAttr)) return;\n\n    if (target !== source && !filterNode(target, targetAttr)) return;\n\n    copyEdge(S, undirected, key, source, target, attr);\n  });\n\n  return S;\n};\n","/**\n * Graphology Operators To Directed Caster\n * ========================================\n *\n * Function used to cast any graph to a directed one.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function toDirected(graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-directed: expecting a valid graphology instance.'\n    );\n\n  if (typeof options === 'function') options = {mergeEdge: options};\n\n  options = options || {};\n\n  var mergeEdge =\n    typeof options.mergeEdge === 'function' ? options.mergeEdge : null;\n\n  if (graph.type === 'directed') return graph.copy();\n\n  var directedGraph = graph.emptyCopy({type: 'directed'});\n\n  // Adding directed edges\n  graph.forEachDirectedEdge(function (edge, attr, source, target) {\n    copyEdge(directedGraph, false, edge, source, target, attr);\n  });\n\n  // Merging undirected edges\n  graph.forEachUndirectedEdge(function (_, attr, source, target) {\n    var existingOutEdge =\n      !graph.multi &&\n      graph.type === 'mixed' &&\n      directedGraph.edge(source, target);\n\n    var existingInEdge =\n      !graph.multi &&\n      graph.type === 'mixed' &&\n      directedGraph.edge(target, source);\n\n    if (existingOutEdge) {\n      directedGraph.replaceEdgeAttributes(\n        existingOutEdge,\n        mergeEdge(directedGraph.getEdgeAttributes(existingOutEdge), attr)\n      );\n    } else {\n      copyEdge(directedGraph, false, null, source, target, attr);\n    }\n\n    // Don't add self-loops twice\n    if (source === target) return;\n\n    if (existingInEdge) {\n      directedGraph.replaceEdgeAttributes(\n        existingInEdge,\n        mergeEdge(directedGraph.getEdgeAttributes(existingInEdge), attr)\n      );\n    } else {\n      copyEdge(directedGraph, false, null, target, source, attr);\n    }\n  });\n\n  return directedGraph;\n};\n","/**\n * Graphology Operators To Mixed Caster\n * =====================================\n *\n * Function used to cast any graph to a mixed one.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function toMixed(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-mixed: expecting a valid graphology instance.'\n    );\n\n  if (graph.type === 'mixed') return graph.copy();\n\n  var mixedGraph = graph.emptyCopy({type: 'mixed'});\n\n  // TODO: do this faster when #.copy get options arg\n  graph.forEachEdge(function (e, a, s, t, sa, ta, u) {\n    copyEdge(mixedGraph, u, e, s, t, a);\n  });\n\n  return mixedGraph;\n};\n","/**\n * Graphology Operators To Multi Caster\n * =====================================\n *\n * Function used to cast any graph to a multi one.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function toMulti(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-multi: expecting a valid graphology instance.'\n    );\n\n  if (graph.multi) return graph.copy();\n\n  var multiGraph = graph.emptyCopy({multi: true});\n\n  // TODO: do this faster when #.copy get options arg\n  graph.forEachEdge(function (e, a, s, t, sa, ta, u) {\n    copyEdge(multiGraph, u, e, s, t, a);\n  });\n\n  return multiGraph;\n};\n","/**\n * Graphology Operators To Simple Caster\n * ======================================\n *\n * Function used to cast a multi graph to a simple one.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function toSimple(multiGraph) {\n  if (!isGraph(multiGraph))\n    throw new Error(\n      'graphology-operators/to-simple: expecting a valid graphology instance.'\n    );\n\n  // The graph is not multi. We just return a plain copy\n  if (!multiGraph.multi) return multiGraph.copy();\n\n  // Creating a tweaked empty copy\n  var graph = multiGraph.emptyCopy({multi: false});\n\n  // Then we need to process edges\n  multiGraph.forEachDirectedEdge(function (edge, attr, source, target) {\n    if (graph.hasDirectedEdge(source, target)) return;\n\n    copyEdge(graph, false, edge, source, target, attr);\n  });\n\n  multiGraph.forEachUndirectedEdge(function (edge, attr, source, target) {\n    if (graph.hasUndirectedEdge(source, target)) return;\n\n    copyEdge(graph, true, edge, source, target, attr);\n  });\n\n  return graph;\n};\n","/**\n * Graphology Operators To Undirected Caster\n * ==========================================\n *\n * Function used to cast any graph to an undirected one.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar copyEdge = require('graphology-utils/add-edge').copyEdge;\n\nmodule.exports = function toUndirected(graph, options) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-operators/to-undirected: expecting a valid graphology instance.'\n    );\n\n  if (typeof options === 'function') options = {mergeEdge: options};\n\n  options = options || {};\n\n  var mergeEdge =\n    typeof options.mergeEdge === 'function' ? options.mergeEdge : null;\n\n  if (graph.type === 'undirected') return graph.copy();\n\n  var undirectedGraph = graph.emptyCopy({type: 'undirected'});\n\n  // Adding undirected edges\n  graph.forEachUndirectedEdge(function (edge, attr, source, target) {\n    copyEdge(undirectedGraph, true, edge, source, target, attr);\n  });\n\n  // Merging directed edges\n  graph.forEachDirectedEdge(function (edge, attr, source, target) {\n    if (!graph.multi) {\n      var existingEdge = undirectedGraph.edge(source, target);\n\n      if (existingEdge) {\n        // We need to merge\n        if (mergeEdge)\n          undirectedGraph.replaceEdgeAttributes(\n            existingEdge,\n            mergeEdge(undirectedGraph.getEdgeAttributes(existingEdge), attr)\n          );\n\n        return;\n      }\n    }\n\n    copyEdge(undirectedGraph, true, null, source, target, attr);\n  });\n\n  return undirectedGraph;\n};\n","/**\n * Graphology Union Operator\n * ==========================\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * Function returning the union of two given graphs.\n *\n * @param  {Graph} G - The first graph.\n * @param  {Graph} H - The second graph.\n * @return {Graph}\n */\nmodule.exports = function union(G, H) {\n  if (!isGraph(G) || !isGraph(H))\n    throw new Error('graphology-operators/union: invalid graph.');\n\n  if (G.multi !== H.multi)\n    throw new Error(\n      'graphology-operators/union: both graph should be simple or multi.'\n    );\n\n  var R = G.copy();\n  R.import(H, true);\n\n  return R;\n};\n","/**\n * Graphology Operators\n * =====================\n *\n * Library endpoint.\n */\nexports.disjointUnion = require('./disjoint-union.js');\nexports.reverse = require('./reverse.js');\nexports.subgraph = require('./subgraph.js');\nexports.toDirected = require('./to-directed.js');\nexports.toMixed = require('./to-mixed.js');\nexports.toMulti = require('./to-multi.js');\nexports.toSimple = require('./to-simple.js');\nexports.toUndirected = require('./to-undirected.js');\nexports.union = require('./union.js');\n","module.exports = require('graphology-operators');\n","/**\n * Graphology Shortest Path Utils\n * ===============================\n *\n * Miscellaneous shortest-path helper functions.\n */\nvar returnTrue = function () {\n  return true;\n};\n\nexports.edgePathFromNodePath = function (graph, nodePath) {\n  var l = nodePath.length;\n\n  var i, source, target, edge;\n\n  // Self loops\n  if (l < 2) {\n    source = nodePath[0];\n\n    edge = graph.multi\n      ? graph.findEdge(source, source, returnTrue)\n      : graph.edge(source, source);\n\n    if (edge) return [edge];\n\n    return [];\n  }\n\n  l--;\n\n  var edgePath = new Array(l);\n\n  for (i = 0; i < l; i++) {\n    source = nodePath[i];\n    target = nodePath[i + 1];\n\n    edge = graph.multi\n      ? graph.findOutboundEdge(source, target, returnTrue)\n      : graph.edge(source, target);\n\n    if (edge === undefined)\n      throw new Error(\n        'graphology-shortest-path: given path is impossible in given graph.'\n      );\n\n    edgePath[i] = edge;\n  }\n\n  return edgePath;\n};\n","/**\n * Graphology Dijkstra Shortest Path\n * ==================================\n *\n * Graphology implementation of Dijkstra shortest path for weighted graphs.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar createEdgeWeightGetter =\n  require('graphology-utils/getters').createEdgeWeightGetter;\nvar Heap = require('mnemonist/heap');\n\n/**\n * Defaults & helpers.\n */\nvar DEFAULT_WEIGHT_ATTRIBUTE = 'weight';\n\nfunction DIJKSTRA_HEAP_COMPARATOR(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (a[0] < b[0]) return -1;\n\n  if (a[1] > b[1]) return 1;\n  if (a[1] < b[1]) return -1;\n\n  if (a[2] > b[2]) return 1;\n  if (a[2] < b[2]) return -1;\n\n  return 0;\n}\n\nfunction BRANDES_DIJKSTRA_HEAP_COMPARATOR(a, b) {\n  if (a[0] > b[0]) return 1;\n  if (a[0] < b[0]) return -1;\n\n  if (a[1] > b[1]) return 1;\n  if (a[1] < b[1]) return -1;\n\n  if (a[2] > b[2]) return 1;\n  if (a[2] < b[2]) return -1;\n\n  if (a[3] > b[3]) return 1;\n  if (a[3] < b[3]) return -1;\n\n  return 0;\n}\n\n/**\n * Bidirectional Dijkstra shortest path between source & target node abstract.\n *\n * Note that this implementation was basically copied from networkx.\n *\n * @param  {Graph}  graph         - The graphology instance.\n * @param  {string} source        - Source node.\n * @param  {string} target        - Target node.\n * @param  {string} getEdgeWeight - Name of the weight attribute or getter function.\n * @param  {array}                - The found path if any and its cost.\n */\nfunction abstractBidirectionalDijkstra(graph, source, target, getEdgeWeight) {\n  source = '' + source;\n  target = '' + target;\n\n  // Sanity checks\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-shortest-path/dijkstra: invalid graphology instance.'\n    );\n\n  if (source && !graph.hasNode(source))\n    throw new Error(\n      'graphology-shortest-path/dijkstra: the \"' +\n        source +\n        '\" source node does not exist in the given graph.'\n    );\n\n  if (target && !graph.hasNode(target))\n    throw new Error(\n      'graphology-shortest-path/dijkstra: the \"' +\n        target +\n        '\" target node does not exist in the given graph.'\n    );\n\n  getEdgeWeight = createEdgeWeightGetter(\n    getEdgeWeight || DEFAULT_WEIGHT_ATTRIBUTE\n  ).fromMinimalEntry;\n\n  if (source === target) return [0, [source]];\n\n  var distances = [{}, {}],\n    paths = [{}, {}],\n    fringe = [\n      new Heap(DIJKSTRA_HEAP_COMPARATOR),\n      new Heap(DIJKSTRA_HEAP_COMPARATOR)\n    ],\n    seen = [{}, {}];\n\n  paths[0][source] = [source];\n  paths[1][target] = [target];\n\n  seen[0][source] = 0;\n  seen[1][target] = 0;\n\n  var finalPath = [],\n    finalDistance = Infinity;\n\n  var count = 0,\n    dir = 1,\n    item,\n    edges,\n    cost,\n    d,\n    v,\n    u,\n    e,\n    i,\n    l;\n\n  fringe[0].push([0, count++, source]);\n  fringe[1].push([0, count++, target]);\n\n  while (fringe[0].size && fringe[1].size) {\n    // Swapping direction\n    dir = 1 - dir;\n\n    item = fringe[dir].pop();\n    d = item[0];\n    v = item[2];\n\n    if (v in distances[dir]) continue;\n\n    distances[dir][v] = d;\n\n    // Shortest path is found?\n    if (v in distances[1 - dir]) return [finalDistance, finalPath];\n\n    edges = dir === 1 ? graph.inboundEdges(v) : graph.outboundEdges(v);\n\n    for (i = 0, l = edges.length; i < l; i++) {\n      e = edges[i];\n      u = graph.opposite(v, e);\n      cost = distances[dir][v] + getEdgeWeight(e, graph.getEdgeAttributes(e));\n\n      if (u in distances[dir] && cost < distances[dir][u]) {\n        throw Error(\n          'graphology-shortest-path/dijkstra: contradictory paths found. Do some of your edges have a negative weight?'\n        );\n      } else if (!(u in seen[dir]) || cost < seen[dir][u]) {\n        seen[dir][u] = cost;\n        fringe[dir].push([cost, count++, u]);\n        paths[dir][u] = paths[dir][v].concat(u);\n\n        if (u in seen[0] && u in seen[1]) {\n          d = seen[0][u] + seen[1][u];\n\n          if (finalPath.length === 0 || finalDistance > d) {\n            finalDistance = d;\n            finalPath = paths[0][u].concat(paths[1][u].slice(0, -1).reverse());\n          }\n        }\n      }\n    }\n  }\n\n  // No path was found\n  return [Infinity, null];\n}\n\n/**\n * Multisource Dijkstra shortest path abstract function. This function is the\n * basis of the algorithm that every other will use.\n *\n * Note that this implementation was basically copied from networkx.\n * TODO: it might be more performant to use a dedicated objet for the heap's\n * items.\n *\n * @param  {Graph}  graph         - The graphology instance.\n * @param  {array}  sources       - A list of sources.\n * @param  {string} getEdgeWeight - Name of the weight attribute or getter function.\n * @param  {number} cutoff        - Maximum depth of the search.\n * @param  {string} target        - Optional target to reach.\n * @param  {object} paths         - Optional paths object to maintain.\n * @return {object}               - Returns the paths.\n */\nfunction abstractDijkstraMultisource(\n  graph,\n  sources,\n  getEdgeWeight,\n  cutoff,\n  target,\n  paths\n) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-shortest-path/dijkstra: invalid graphology instance.'\n    );\n\n  if (target && !graph.hasNode(target))\n    throw new Error(\n      'graphology-shortest-path/dijkstra: the \"' +\n        target +\n        '\" target node does not exist in the given graph.'\n    );\n\n  getEdgeWeight = createEdgeWeightGetter(\n    getEdgeWeight || DEFAULT_WEIGHT_ATTRIBUTE\n  ).fromMinimalEntry;\n\n  var distances = {},\n    seen = {},\n    fringe = new Heap(DIJKSTRA_HEAP_COMPARATOR);\n\n  var count = 0,\n    edges,\n    item,\n    cost,\n    v,\n    u,\n    e,\n    d,\n    i,\n    j,\n    l,\n    m;\n\n  for (i = 0, l = sources.length; i < l; i++) {\n    v = sources[i];\n    seen[v] = 0;\n    fringe.push([0, count++, v]);\n\n    if (paths) paths[v] = [v];\n  }\n\n  while (fringe.size) {\n    item = fringe.pop();\n    d = item[0];\n    v = item[2];\n\n    if (v in distances) continue;\n\n    distances[v] = d;\n\n    if (v === target) break;\n\n    edges = graph.outboundEdges(v);\n\n    for (j = 0, m = edges.length; j < m; j++) {\n      e = edges[j];\n      u = graph.opposite(v, e);\n      cost = getEdgeWeight(e, graph.getEdgeAttributes(e)) + distances[v];\n\n      if (cutoff && cost > cutoff) continue;\n\n      if (u in distances && cost < distances[u]) {\n        throw Error(\n          'graphology-shortest-path/dijkstra: contradictory paths found. Do some of your edges have a negative weight?'\n        );\n      } else if (!(u in seen) || cost < seen[u]) {\n        seen[u] = cost;\n        fringe.push([cost, count++, u]);\n\n        if (paths) paths[u] = paths[v].concat(u);\n      }\n    }\n  }\n\n  return distances;\n}\n\n/**\n * Single source Dijkstra shortest path between given node & other nodes in\n * the graph.\n *\n * @param  {Graph}  graph         - The graphology instance.\n * @param  {string} source        - Source node.\n * @param  {string} getEdgeWeight - Name of the weight attribute or getter function.\n * @return {object}               - An object of found paths.\n */\nfunction singleSourceDijkstra(graph, source, getEdgeWeight) {\n  var paths = {};\n\n  abstractDijkstraMultisource(graph, [source], getEdgeWeight, 0, null, paths);\n\n  return paths;\n}\n\nfunction bidirectionalDijkstra(graph, source, target, getEdgeWeight) {\n  return abstractBidirectionalDijkstra(graph, source, target, getEdgeWeight)[1];\n}\n\n/**\n * Function using Ulrik Brandes' method to map single source shortest paths\n * from selected node.\n *\n * [Reference]:\n * Ulrik Brandes: A Faster Algorithm for Betweenness Centrality.\n * Journal of Mathematical Sociology 25(2):163-177, 2001.\n *\n * @param  {Graph}  graph         - Target graph.\n * @param  {any}    source        - Source node.\n * @param  {string} getEdgeWeight - Name of the weight attribute or getter function.\n * @return {array}                - [Stack, Paths, Sigma]\n */\nfunction brandes(graph, source, getEdgeWeight) {\n  source = '' + source;\n\n  getEdgeWeight = createEdgeWeightGetter(\n    getEdgeWeight || DEFAULT_WEIGHT_ATTRIBUTE\n  ).fromMinimalEntry;\n\n  var S = [],\n    P = {},\n    sigma = {};\n\n  var nodes = graph.nodes(),\n    edges,\n    item,\n    pred,\n    dist,\n    cost,\n    v,\n    w,\n    e,\n    i,\n    l;\n\n  for (i = 0, l = nodes.length; i < l; i++) {\n    v = nodes[i];\n    P[v] = [];\n    sigma[v] = 0;\n  }\n\n  var D = {};\n\n  sigma[source] = 1;\n\n  var seen = {};\n  seen[source] = 0;\n\n  var count = 0;\n\n  var Q = new Heap(BRANDES_DIJKSTRA_HEAP_COMPARATOR);\n  Q.push([0, count++, source, source]);\n\n  while (Q.size) {\n    item = Q.pop();\n    dist = item[0];\n    pred = item[2];\n    v = item[3];\n\n    if (v in D) continue;\n\n    sigma[v] += sigma[pred];\n    S.push(v);\n    D[v] = dist;\n\n    edges = graph.outboundEdges(v);\n\n    for (i = 0, l = edges.length; i < l; i++) {\n      e = edges[i];\n      w = graph.opposite(v, e);\n      cost = dist + getEdgeWeight(e, graph.getEdgeAttributes(e));\n\n      if (!(w in D) && (!(w in seen) || cost < seen[w])) {\n        seen[w] = cost;\n        Q.push([cost, count++, v, w]);\n        sigma[w] = 0;\n        P[w] = [v];\n      } else if (cost === seen[w]) {\n        sigma[w] += sigma[v];\n        P[w].push(v);\n      }\n    }\n  }\n\n  return [S, P, sigma];\n}\n\n/**\n * Exporting.\n */\nexports.bidirectional = bidirectionalDijkstra;\nexports.singleSource = singleSourceDijkstra;\nexports.brandes = brandes;\n","/**\n * Graphology Shortest Path\n * =========================\n *\n * Library endpoint.\n */\nvar unweighted = require('./unweighted.js');\nvar utils = require('./utils.js');\n\nexports.unweighted = unweighted;\nexports.dijkstra = require('./dijkstra.js');\n\nexports.bidirectional = unweighted.bidirectional;\nexports.singleSource = unweighted.singleSource;\nexports.singleSourceLength = unweighted.singleSourceLength;\nexports.undirectedSingleSourceLength = unweighted.undirectedSingleSourceLength;\nexports.brandes = unweighted.brandes;\n\nexports.edgePathFromNodePath = utils.edgePathFromNodePath;\n","module.exports = require('graphology-shortest-path');\n","/**\n * Graphology isGraph\n * ===================\n *\n * Very simple function aiming at ensuring the given variable is a\n * graphology instance.\n */\n\n/**\n * Checking the value is a graphology instance.\n *\n * @param  {any}     value - Target value.\n * @return {boolean}\n */\nmodule.exports = function isGraph(value) {\n  return (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.addUndirectedEdgeWithKey === 'function' &&\n    typeof value.dropNode === 'function' &&\n    typeof value.multi === 'boolean'\n  );\n};\n","/**\n * Graphology Simple Path\n * =======================\n *\n * Functions related to simple paths to be used with graphology.\n */\nvar isGraph = require('graphology-utils/is-graph');\n\n/**\n * A StackSet helper class.\n */\nfunction StackSet() {\n  this.set = new Set();\n  this.stack = [];\n  this.size = 0;\n}\n\nStackSet.prototype.has = function (value) {\n  return this.set.has(value);\n};\n\n// NOTE: we don't check earlier existence because we don't need to\nStackSet.prototype.push = function (value) {\n  this.stack.push(value);\n  this.set.add(value);\n  this.size++;\n};\n\nStackSet.prototype.pop = function () {\n  this.set.delete(this.stack.pop());\n  this.size--;\n};\n\nStackSet.prototype.path = function (value) {\n  return this.stack.concat(value);\n};\n\nStackSet.of = function (value) {\n  var set = new StackSet();\n  set.push(value);\n\n  return set;\n};\n\n/**\n * A RecordStackSet helper class.\n */\nfunction RecordStackSet() {\n  this.set = new Set();\n  this.stack = [];\n  this.size = 0;\n}\n\nRecordStackSet.prototype.has = function (value) {\n  return this.set.has(value);\n};\n\n// NOTE: we don't check earlier existence because we don't need to\nRecordStackSet.prototype.push = function (record) {\n  this.stack.push(record);\n  this.set.add(record[1]);\n  this.size++;\n};\n\nRecordStackSet.prototype.pop = function () {\n  this.set.delete(this.stack.pop()[1]);\n  this.size--;\n};\n\nRecordStackSet.prototype.path = function (record) {\n  return this.stack\n    .slice(1)\n    .map(function (r) {\n      return r[0];\n    })\n    .concat([record[0]]);\n};\n\nRecordStackSet.of = function (value) {\n  var set = new RecordStackSet();\n  set.push([null, value]);\n\n  return set;\n};\n\n/**\n * Function returning all the paths between source & target in the graph.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {string} source - Source node.\n * @param  {string} target - Target node.\n * @return {array}         - The found paths.\n */\nfunction allSimplePaths(graph, source, target) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-simple-path.allSimplePaths: expecting a graphology instance.'\n    );\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-simple-path.allSimplePaths: expecting: could not find source node \"' +\n        source +\n        '\" in the graph.'\n    );\n\n  if (!graph.hasNode(target))\n    throw new Error(\n      'graphology-simple-path.allSimplePaths: expecting: could not find target node \"' +\n        target +\n        '\" in the graph.'\n    );\n\n  source = '' + source;\n  target = '' + target;\n\n  var cycle = source === target;\n\n  var stack = [graph.outboundNeighbors(source)];\n  var visited = StackSet.of(cycle ? '§SOURCE§' : source);\n\n  var paths = [],\n    p;\n\n  var children, child;\n\n  while (stack.length !== 0) {\n    children = stack[stack.length - 1];\n    child = children.pop();\n\n    if (!child) {\n      stack.pop();\n      visited.pop();\n    } else {\n      if (visited.has(child)) continue;\n\n      if (child === target) {\n        p = visited.path(child);\n\n        if (cycle) p[0] = source;\n\n        paths.push(p);\n      }\n\n      visited.push(child);\n\n      if (!visited.has(target)) stack.push(graph.outboundNeighbors(child));\n      else visited.pop();\n    }\n  }\n\n  return paths;\n}\n\n/**\n * Helpers used to collect edges with their targets.\n */\nfunction collectEdges(graph, source) {\n  var records = [];\n\n  graph.forEachOutboundEdge(source, function (edge, attr, ext1, ext2) {\n    records.push([edge, source === ext1 ? ext2 : ext1]);\n  });\n\n  return records;\n}\n\nfunction collectMultiEdges(graph, source) {\n  var index = {};\n\n  var target;\n\n  graph.forEachOutboundEdge(source, function (edge, attr, ext1, ext2) {\n    target = source === ext1 ? ext2 : ext1;\n\n    if (!(target in index)) index[target] = [];\n\n    index[target].push(edge);\n  });\n\n  var records = [];\n\n  for (target in index) records.push([index[target], target]);\n\n  return records;\n}\n\n/**\n * Function returning all the edge paths between source & target in the graph.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {string} source - Source node.\n * @param  {string} target - Target node.\n * @return {array}         - The found paths.\n */\nfunction allSimpleEdgePaths(graph, source, target) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgePaths: expecting a graphology instance.'\n    );\n\n  if (graph.multi)\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgePaths: not implemented for multi graphs.'\n    );\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgePaths: expecting: could not find source node \"' +\n        source +\n        '\" in the graph.'\n    );\n\n  if (!graph.hasNode(target))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgePaths: expecting: could not find target node \"' +\n        target +\n        '\" in the graph.'\n    );\n\n  source = '' + source;\n  target = '' + target;\n\n  var cycle = source === target;\n\n  var stack = [collectEdges(graph, source)];\n  var visited = RecordStackSet.of(cycle ? '§SOURCE§' : source);\n\n  var paths = [],\n    p;\n\n  var record, children, child;\n\n  while (stack.length !== 0) {\n    children = stack[stack.length - 1];\n    record = children.pop();\n\n    if (!record) {\n      stack.pop();\n      visited.pop();\n    } else {\n      child = record[1];\n\n      if (visited.has(child)) continue;\n\n      if (child === target) {\n        p = visited.path(record);\n        paths.push(p);\n      }\n\n      visited.push(record);\n\n      if (!visited.has(target)) stack.push(collectEdges(graph, child));\n      else visited.pop();\n    }\n  }\n\n  return paths;\n}\n\n/**\n * Function returning all the compressed edge paths between source & target\n * in the graph.\n *\n * @param  {Graph}  graph  - Target graph.\n * @param  {string} source - Source node.\n * @param  {string} target - Target node.\n * @return {array}         - The found paths.\n */\nfunction allSimpleEdgeGroupPaths(graph, source, target) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgeGroupPaths: expecting a graphology instance.'\n    );\n\n  if (!graph.hasNode(source))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgeGroupPaths: expecting: could not find source node \"' +\n        source +\n        '\" in the graph.'\n    );\n\n  if (!graph.hasNode(target))\n    throw new Error(\n      'graphology-simple-path.allSimpleEdgeGroupPaths: expecting: could not find target node \"' +\n        target +\n        '\" in the graph.'\n    );\n\n  source = '' + source;\n  target = '' + target;\n\n  var cycle = source === target;\n\n  var stack = [collectMultiEdges(graph, source)];\n  var visited = RecordStackSet.of(cycle ? '§SOURCE§' : source);\n\n  var paths = [],\n    p;\n\n  var record, children, child;\n\n  while (stack.length !== 0) {\n    children = stack[stack.length - 1];\n    record = children.pop();\n\n    if (!record) {\n      stack.pop();\n      visited.pop();\n    } else {\n      child = record[1];\n\n      if (visited.has(child)) continue;\n\n      if (child === target) {\n        p = visited.path(record);\n        paths.push(p);\n      }\n\n      visited.push(record);\n\n      if (!visited.has(target)) stack.push(collectMultiEdges(graph, child));\n      else visited.pop();\n    }\n  }\n\n  return paths;\n}\n\nexports.allSimplePaths = allSimplePaths;\nexports.allSimpleEdgePaths = allSimpleEdgePaths;\nexports.allSimpleEdgeGroupPaths = allSimpleEdgeGroupPaths;\n","module.exports = require('graphology-simple-path');\n","/**\n * Graphology BFS Queue\n * =====================\n *\n * An experiment to speed up BFS in graphs and connected component detection.\n *\n * It should mostly save memory and not improve theoretical runtime.\n */\nvar FixedDeque = require('mnemonist/fixed-deque');\n\nfunction BFSQueue(order) {\n  this.queue = new FixedDeque(Array, order);\n  this.seen = new Set();\n  this.size = 0;\n}\n\nBFSQueue.prototype.has = function (node) {\n  return this.seen.has(node);\n};\n\nBFSQueue.prototype.push = function (node) {\n  var seenSizeBefore = this.seen.size;\n\n  this.seen.add(node);\n\n  // If node was already seen\n  if (seenSizeBefore === this.seen.size) return false;\n\n  this.queue.push(node);\n  this.size++;\n\n  return true;\n};\n\nBFSQueue.prototype.pushWith = function (node, item) {\n  var seenSizeBefore = this.seen.size;\n\n  this.seen.add(node);\n\n  // If node was already seen\n  if (seenSizeBefore === this.seen.size) return false;\n\n  this.queue.push(item);\n  this.size++;\n\n  return true;\n};\n\nBFSQueue.prototype.shift = function () {\n  var item = this.queue.shift();\n  this.size = this.queue.size;\n\n  return item;\n};\n\nmodule.exports = BFSQueue;\n","/**\n * Graphology Traversal Utils\n * ===========================\n *\n * Miscellaneous utils used throughout the library.\n */\n\nfunction TraversalRecord(node, attr, depth) {\n  this.node = node;\n  this.attributes = attr;\n  this.depth = depth;\n}\n\nfunction capitalize(string) {\n  return string[0].toUpperCase() + string.slice(1);\n}\n\nexports.TraversalRecord = TraversalRecord;\nexports.capitalize = capitalize;\n","/**\n * Graphology Traversal BFS\n * =========================\n *\n * Breadth-First Search traversal function.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar BFSQueue = require('graphology-indices/bfs-queue');\nvar utils = require('./utils');\n\nvar TraversalRecord = utils.TraversalRecord;\nvar capitalize = utils.capitalize;\n\n/**\n * BFS traversal in the given graph using a callback function\n *\n * @param {Graph}    graph        - Target graph.\n * @param {string}   startingNode - Optional Starting node.\n * @param {function} callback     - Iteration callback.\n * @param {object}   options      - Options:\n * @param {string}     mode         - Traversal mode.\n */\nfunction abstractBfs(graph, startingNode, callback, options) {\n  options = options || {};\n\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-traversal/bfs: expecting a graphology instance.'\n    );\n\n  if (typeof callback !== 'function')\n    throw new Error(\n      'graphology-traversal/bfs: given callback is not a function.'\n    );\n\n  // Early termination\n  if (graph.order === 0) return;\n\n  var forEachNeighbor =\n    graph['forEach' + capitalize(options.mode || 'outbound') + 'Neighbor'].bind(\n      graph\n    );\n\n  var forEachNode;\n\n  if (startingNode === null) {\n    forEachNode = graph.forEachNode.bind(graph);\n  } else {\n    forEachNode = function (fn) {\n      startingNode = '' + startingNode;\n      fn(startingNode, graph.getNodeAttributes(startingNode));\n    };\n  }\n\n  var queue = new BFSQueue(graph.order);\n  var record, stop;\n\n  function visit(neighbor, attr) {\n    queue.pushWith(\n      neighbor,\n      new TraversalRecord(neighbor, attr, record.depth + 1)\n    );\n  }\n\n  forEachNode(function (node, attr) {\n    if (queue.has(node)) return;\n\n    queue.pushWith(node, new TraversalRecord(node, attr, 0));\n\n    while (queue.size !== 0) {\n      record = queue.shift();\n\n      stop = callback(record.node, record.attributes, record.depth);\n\n      if (stop === true) continue;\n\n      forEachNeighbor(record.node, visit);\n    }\n  });\n}\n\nexports.bfs = function (graph, callback, options) {\n  return abstractBfs(graph, null, callback, options);\n};\nexports.bfsFromNode = abstractBfs;\n","/**\n * Graphology Traversal DFS\n * =========================\n *\n * Depth-First Search traversal function.\n */\nvar isGraph = require('graphology-utils/is-graph');\nvar DFSStack = require('graphology-indices/dfs-stack');\nvar utils = require('./utils');\n\nvar TraversalRecord = utils.TraversalRecord;\nvar capitalize = utils.capitalize;\n\n/**\n * DFS traversal in the given graph using a callback function\n *\n * @param {Graph}    graph        - Target graph.\n * @param {string}   startingNode - Optional Starting node.\n * @param {function} callback     - Iteration callback.\n * @param {object}   options      - Options:\n * @param {string}     mode         - Traversal mode.\n */\nfunction abstractDfs(graph, startingNode, callback, options) {\n  options = options || {};\n\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-traversal/dfs: expecting a graphology instance.'\n    );\n\n  if (typeof callback !== 'function')\n    throw new Error(\n      'graphology-traversal/dfs: given callback is not a function.'\n    );\n\n  // Early termination\n  if (graph.order === 0) return;\n\n  var forEachNeighbor =\n    graph['forEach' + capitalize(options.mode || 'outbound') + 'Neighbor'].bind(\n      graph\n    );\n\n  var forEachNode;\n\n  if (startingNode === null) {\n    forEachNode = graph.forEachNode.bind(graph);\n  } else {\n    forEachNode = function (fn) {\n      startingNode = '' + startingNode;\n      fn(startingNode, graph.getNodeAttributes(startingNode));\n    };\n  }\n\n  var stack = new DFSStack(graph.order);\n  var record, stop;\n\n  function visit(neighbor, attr) {\n    stack.pushWith(\n      neighbor,\n      new TraversalRecord(neighbor, attr, record.depth + 1)\n    );\n  }\n\n  forEachNode(function (node, attr) {\n    if (stack.has(node)) return;\n\n    stack.pushWith(node, new TraversalRecord(node, attr, 0));\n\n    while (stack.size !== 0) {\n      record = stack.pop();\n\n      stop = callback(record.node, record.attributes, record.depth);\n\n      if (stop === true) continue;\n\n      forEachNeighbor(record.node, visit);\n    }\n  });\n}\n\nexports.dfs = function (graph, callback, options) {\n  return abstractDfs(graph, null, callback, options);\n};\nexports.dfsFromNode = abstractDfs;\n","var bfsModule = require('./bfs.js');\nvar dfsModule = require('./dfs.js');\n\nexports.bfs = bfsModule.bfs;\nexports.bfsFromNode = bfsModule.bfsFromNode;\nexports.dfs = dfsModule.dfs;\nexports.dfsFromNode = dfsModule.dfsFromNode;\n","module.exports = require('graphology-traversal');\n","/**\n * Graphology inferMulti\n * ======================\n *\n * Useful function used to \"guess\" if the given graph is truly multi.\n */\nvar isGraph = require('./is-graph.js');\n\n/**\n * Returning whether the given graph is inferred as multi.\n *\n * @param  {Graph}   graph - Target graph.\n * @return {boolean}\n */\nmodule.exports = function inferMulti(graph) {\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-utils/infer-multi: expecting a valid graphology instance.'\n    );\n\n  if (!graph.multi || graph.order === 0 || graph.size < 2) return false;\n\n  var multi = false;\n\n  // TODO: improve this with suitable methods\n  var previousSource, previousTarget, wasUndirected, tmp;\n\n  graph.forEachAssymetricAdjacencyEntry(function (s, t, sa, ta, e, ea, u) {\n    if (multi) return; // TODO: we need #.someAdjacencyEntry\n\n    if (u && s > t) {\n      tmp = t;\n      t = s;\n      s = tmp;\n    }\n\n    if (s === previousSource && t === previousTarget && u === wasUndirected) {\n      multi = true;\n      return;\n    }\n\n    previousSource = s;\n    previousTarget = t;\n    wasUndirected = u;\n  });\n\n  return multi;\n};\n","/**\n * Graphology mergeClique\n * =======================\n *\n * Function merging the given clique to the graph.\n */\n\n/**\n * Merging the given clique to the graph.\n *\n * @param  {Graph} graph - Target graph.\n * @param  {array} nodes - Nodes representing the clique to merge.\n */\nmodule.exports = function mergeClique(graph, nodes) {\n  if (nodes.length === 0) return;\n\n  var source, target, i, j, l;\n\n  for (i = 0, l = nodes.length; i < l; i++) {\n    source = nodes[i];\n\n    for (j = i + 1; j < l; j++) {\n      target = nodes[j];\n\n      graph.mergeEdge(source, target);\n    }\n  }\n};\n","/**\n * Graphology mergeCycle\n * =====================\n *\n * Function merging the given cycle to the graph.\n */\n\n/**\n * Merging the given cycle to the graph.\n *\n * @param  {Graph} graph - Target graph.\n * @param  {array} nodes - Nodes representing the cycle to merge.\n */\nmodule.exports = function mergeCycle(graph, nodes) {\n  if (nodes.length === 0) return;\n\n  var previousNode, node, i, l;\n\n  graph.mergeNode(nodes[0]);\n\n  if (nodes.length === 1) return;\n\n  for (i = 1, l = nodes.length; i < l; i++) {\n    previousNode = nodes[i - 1];\n    node = nodes[i];\n\n    graph.mergeEdge(previousNode, node);\n  }\n\n  graph.mergeEdge(node, nodes[0]);\n};\n","/**\n * Graphology mergePath\n * =====================\n *\n * Function merging the given path to the graph.\n */\n\n/**\n * Merging the given path to the graph.\n *\n * @param  {Graph} graph - Target graph.\n * @param  {array} nodes - Nodes representing the path to merge.\n */\nmodule.exports = function mergePath(graph, nodes) {\n  if (nodes.length === 0) return;\n\n  var previousNode, node, i, l;\n\n  graph.mergeNode(nodes[0]);\n\n  for (i = 1, l = nodes.length; i < l; i++) {\n    previousNode = nodes[i - 1];\n    node = nodes[i];\n\n    graph.mergeEdge(previousNode, node);\n  }\n};\n","/**\n * Graphology Rename Graph Keys\n * =============================\n *\n * Helpers allowing you to rename (ie. change the key) of nodes & edges .\n */\nvar copyEdge = require('./add-edge.js').copyEdge;\n\nmodule.exports = function renameGraphKeys(\n  graph,\n  nodeKeyMapping,\n  edgeKeyMapping\n) {\n  if (typeof nodeKeyMapping === 'undefined') nodeKeyMapping = {};\n  if (typeof edgeKeyMapping === 'undefined') edgeKeyMapping = {};\n\n  var renamed = graph.nullCopy();\n\n  // Renaming nodes\n  graph.forEachNode(function (key, attr) {\n    var renamedKey = nodeKeyMapping[key];\n\n    if (typeof renamedKey === 'undefined') renamedKey = key;\n\n    renamed.addNode(renamedKey, attr);\n  });\n\n  // Renaming edges\n  var currentSource, currentSourceRenamed;\n\n  graph.forEachAssymetricAdjacencyEntry(function (\n    source,\n    target,\n    _sa,\n    _ta,\n    key,\n    attr,\n    undirected\n  ) {\n    // Leveraging the ordered adjacency to save lookups\n    if (source !== currentSource) {\n      currentSource = source;\n      currentSourceRenamed = nodeKeyMapping[source];\n\n      if (typeof currentSourceRenamed === 'undefined')\n        currentSourceRenamed = source;\n    }\n\n    var targetRenamed = nodeKeyMapping[target];\n\n    if (typeof targetRenamed === 'undefined') targetRenamed = target;\n\n    var renamedKey = edgeKeyMapping[key];\n\n    if (typeof renamedKey === 'undefined') renamedKey = key;\n\n    copyEdge(\n      renamed,\n      undirected,\n      renamedKey,\n      currentSourceRenamed,\n      targetRenamed,\n      attr\n    );\n  });\n\n  return renamed;\n};\n","/**\n * Graphology Update Graph Keys\n * =============================\n *\n * Helpers allowing you to update keys of nodes & edges .\n */\nvar copyEdge = require('./add-edge.js').copyEdge;\n\nmodule.exports = function updateGraphKeys(\n  graph,\n  nodeKeyUpdater,\n  edgeKeyUpdater\n) {\n  var renamed = graph.nullCopy();\n\n  // Renaming nodes\n  graph.forEachNode(function (key, attr) {\n    var renamedKey = nodeKeyUpdater ? nodeKeyUpdater(key, attr) : key;\n    renamed.addNode(renamedKey, attr);\n  });\n\n  // Renaming edges\n  var currentSource, currentSourceRenamed;\n\n  graph.forEachAssymetricAdjacencyEntry(function (\n    source,\n    target,\n    sourceAttr,\n    targetAttr,\n    key,\n    attr,\n    undirected\n  ) {\n    // Leveraging the ordered adjacency to save calls\n    if (source !== currentSource) {\n      currentSource = source;\n      currentSourceRenamed = nodeKeyUpdater\n        ? nodeKeyUpdater(source, sourceAttr)\n        : source;\n    }\n\n    var targetRenamed = nodeKeyUpdater\n      ? nodeKeyUpdater(target, targetAttr)\n      : target;\n\n    var renamedKey = edgeKeyUpdater\n      ? edgeKeyUpdater(\n          key,\n          attr,\n          source,\n          target,\n          sourceAttr,\n          targetAttr,\n          undirected\n        )\n      : key;\n\n    copyEdge(\n      renamed,\n      undirected,\n      renamedKey,\n      currentSourceRenamed,\n      targetRenamed,\n      attr\n    );\n  });\n\n  return renamed;\n};\n","/**\n * Graphology Utils\n * =================\n *\n * Library endpoint.\n */\nexports.inferMulti = require('./infer-multi.js');\nexports.inferType = require('./infer-type.js');\nexports.isGraph = require('./is-graph.js');\nexports.isGraphConstructor = require('./is-graph-constructor.js');\nexports.mergeClique = require('./merge-clique.js');\nexports.mergeCycle = require('./merge-cycle.js');\nexports.mergePath = require('./merge-path.js');\nexports.mergeStar = require('./merge-star.js');\nexports.renameGraphKeys = require('./rename-graph-keys.js');\nexports.updateGraphKeys = require('./update-graph-keys.js');\n","module.exports = require('graphology-utils');\n","/**\n * Graphology Force Layout Iteration\n * ==================================\n *\n * Function describing a single iteration of the force layout.\n */\nconst {\n  createNodeValueGetter,\n  createEdgeValueGetter\n} = require('graphology-utils/getters');\n\n// const EPSILON = -Infinity;\n\n// function isVeryCloseToZero(x) {\n//   return Math.abs(x) < EPSILON;\n// }\n\nmodule.exports = function iterate(graph, nodeStates, params) {\n  const {nodeXAttribute: xKey, nodeYAttribute: yKey} = params;\n  const {attraction, repulsion, gravity, inertia, maxMove} = params.settings;\n\n  let {shouldSkipNode, shouldSkipEdge, isNodeFixed} = params;\n\n  isNodeFixed = createNodeValueGetter(isNodeFixed);\n  shouldSkipNode = createNodeValueGetter(shouldSkipEdge, false);\n  shouldSkipEdge = createEdgeValueGetter(shouldSkipEdge, false);\n\n  const nodes = graph.filterNodes((n, attr) => {\n    return !shouldSkipNode.fromEntry(n, attr);\n  });\n\n  const adjustedOrder = nodes.length;\n\n  // Check nodeStatess and inertia\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const attr = graph.getNodeAttributes(n);\n    const nodeState = nodeStates[n];\n\n    if (!nodeState)\n      nodeStates[n] = {\n        dx: 0,\n        dy: 0,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n    else\n      nodeStates[n] = {\n        dx: nodeState.dx * inertia,\n        dy: nodeState.dy * inertia,\n        x: attr[xKey] || 0,\n        y: attr[yKey] || 0\n      };\n  }\n\n  // Repulsion\n  if (repulsion)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n1 = nodes[i];\n      const n1State = nodeStates[n1];\n\n      for (let j = i + 1; j < adjustedOrder; j++) {\n        const n2 = nodes[j];\n        const n2State = nodeStates[n2];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Repulse nodes relatively to 1 / distance:\n        const repulsionX = (repulsion / distance) * dx;\n        const repulsionY = (repulsion / distance) * dy;\n        n1State.dx -= repulsionX;\n        n1State.dy -= repulsionY;\n        n2State.dx += repulsionX;\n        n2State.dy += repulsionY;\n      }\n    }\n\n  // Attraction\n  if (attraction)\n    graph.forEachEdge(\n      (edge, attr, source, target, sourceAttr, targetAttr, undirected) => {\n        if (source === target) return;\n\n        if (\n          shouldSkipNode.fromEntry(source, sourceAttr) ||\n          shouldSkipNode.fromEntry(target, targetAttr)\n        )\n          return;\n\n        if (\n          shouldSkipEdge.fromEntry(\n            edge,\n            attr,\n            source,\n            target,\n            sourceAttr,\n            targetAttr,\n            undirected\n          )\n        )\n          return;\n\n        const n1State = nodeStates[source];\n        const n2State = nodeStates[target];\n\n        // Compute distance:\n        const dx = n2State.x - n1State.x;\n        const dy = n2State.y - n1State.y;\n\n        const distance = Math.sqrt(dx * dx + dy * dy) || 1;\n\n        // Attract nodes relatively to their distance:\n        const attractionX = attraction * distance * dx;\n        const attractionY = attraction * distance * dy;\n        n1State.dx += attractionX;\n        n1State.dy += attractionY;\n        n2State.dx -= attractionX;\n        n2State.dy -= attractionY;\n      }\n    );\n\n  // Gravity\n  if (gravity)\n    for (let i = 0; i < adjustedOrder; i++) {\n      const n = nodes[i];\n      const nodeState = nodeStates[n];\n\n      // Attract nodes to [0, 0] relatively to the distance:\n      const {x, y} = nodeState;\n      const distance = Math.sqrt(x * x + y * y) || 1;\n      nodeStates[n].dx -= x * gravity * distance;\n      nodeStates[n].dy -= y * gravity * distance;\n    }\n\n  // Apply forces\n  const converged = false;\n\n  for (let i = 0; i < adjustedOrder; i++) {\n    const n = nodes[i];\n    const nodeState = nodeStates[n];\n\n    const distance = Math.sqrt(\n      nodeState.dx * nodeState.dx + nodeState.dy * nodeState.dy\n    );\n\n    if (distance > maxMove) {\n      nodeState.dx *= maxMove / distance;\n      nodeState.dy *= maxMove / distance;\n    }\n\n    // if (!isVeryCloseToZero(nodeState.dx) || !isVeryCloseToZero(nodeState.dy)) {\n    //   converged = false;\n    // }\n\n    if (!isNodeFixed.fromGraph(graph, n)) {\n      nodeState.x += nodeState.dx;\n      nodeState.y += nodeState.dy;\n      nodeState.fixed = false;\n    } else {\n      nodeState.fixed = true;\n    }\n\n    // NOTE: possibility to assign here to save one loop in the future\n  }\n\n  return {converged};\n};\n","/**\n * Graphology Force Layout Helpers\n * ================================\n *\n * Miscellaneous helper functions related to the force layout.\n */\nexports.assignLayoutChanges = function (graph, nodeStates, params) {\n  const {nodeXAttribute: x, nodeYAttribute: y} = params;\n\n  graph.updateEachNodeAttributes(\n    (n, attr) => {\n      const state = nodeStates[n];\n\n      if (!state || state.fixed) return attr;\n\n      attr[x] = state.x;\n      attr[y] = state.y;\n\n      return attr;\n    },\n    {attributes: ['x', 'y']}\n  );\n};\n\nexports.collectLayoutChanges = function (nodeStates) {\n  const mapping = {};\n\n  for (const n in nodeStates) {\n    const state = nodeStates[n];\n\n    mapping[n] = {x: state.x, y: state.y};\n  }\n\n  return mapping;\n};\n","/**\n * Graphology Force Layout Defaults\n * =================================\n *\n * Default options & settings used by the library.\n */\nmodule.exports = {\n  nodeXAttribute: 'x',\n  nodeYAttribute: 'y',\n  isNodeFixed: 'fixed',\n  shouldSkipNode: null,\n  shouldSkipEdge: null,\n  settings: {\n    attraction: 0.0005,\n    repulsion: 0.1,\n    gravity: 0.0001,\n    inertia: 0.6,\n    maxMove: 200\n  }\n};\n","/**\n * Graphology Force Layout Worker\n * ===============================\n *\n * A worker made for running a force layout live.\n *\n * Note that it does not run in a webworker yet but respect animation frames.\n */\nconst isGraph = require('graphology-utils/is-graph');\nconst resolveDefaults = require('graphology-utils/defaults');\n\nconst iterate = require('./iterate.js');\nconst helpers = require('./helpers.js');\nconst DEFAULTS = require('./defaults.js');\n\nfunction ForceSupervisor(graph, params) {\n  // Validation\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-force/worker: the given graph is not a valid graphology instance.'\n    );\n\n  params = resolveDefaults(params, DEFAULTS);\n\n  this.callbacks = {};\n\n  if (params.onConverged) this.callbacks.onConverged = params.onConverged;\n\n  this.graph = graph;\n  this.params = params;\n  this.nodeStates = {};\n  this.frameID = null;\n  this.running = false;\n  this.killed = false;\n\n  // TODO: hook listeners on graph to listen to dropNode, dropEdge, clear, clearEdges\n}\n\nForceSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\n\nForceSupervisor.prototype.runFrame = function () {\n  let {converged} = iterate(this.graph, this.nodeStates, this.params);\n\n  helpers.assignLayoutChanges(this.graph, this.nodeStates, this.params);\n\n  // TODO: figure out convergence\n  converged = false;\n\n  if (converged) {\n    if (this.callbacks.onConverged) this.callbacks.onConverged();\n    this.stop();\n  } else {\n    this.frameID = window.requestAnimationFrame(() => this.runFrame());\n  }\n};\n\nForceSupervisor.prototype.stop = function () {\n  this.running = false;\n\n  if (this.frameID !== null) {\n    window.cancelAnimationFrame(this.frameID);\n    this.frameID = null;\n  }\n\n  return this;\n};\n\nForceSupervisor.prototype.start = function () {\n  if (this.killed)\n    throw new Error('graphology-layout-force/worker.start: layout was killed.');\n\n  if (this.running) return;\n\n  this.running = true;\n  this.runFrame();\n};\n\nForceSupervisor.prototype.kill = function () {\n  this.stop();\n  delete this.nodeStates;\n  this.killed = true;\n\n  // TODO: cleanup events\n};\n\nmodule.exports = ForceSupervisor;\n","/**\n * Graphology ForceAtlas2 Layout Webworker\n * ========================================\n *\n * Web worker able to run the layout in a separate thread.\n */\nmodule.exports = function worker() {\n  var NODES, EDGES;\n\n  var moduleShim = {};\n\n  (function () {\n    /* eslint no-constant-condition: 0 */\n/**\n * Graphology ForceAtlas2 Iteration\n * =================================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0;\nvar NODE_Y = 1;\nvar NODE_DX = 2;\nvar NODE_DY = 3;\nvar NODE_OLD_DX = 4;\nvar NODE_OLD_DY = 5;\nvar NODE_MASS = 6;\nvar NODE_CONVERGENCE = 7;\nvar NODE_SIZE = 8;\nvar NODE_FIXED = 9;\n\nvar EDGE_SOURCE = 0;\nvar EDGE_TARGET = 1;\nvar EDGE_WEIGHT = 2;\n\nvar REGION_NODE = 0;\nvar REGION_CENTER_X = 1;\nvar REGION_CENTER_Y = 2;\nvar REGION_SIZE = 3;\nvar REGION_NEXT_SIBLING = 4;\nvar REGION_FIRST_CHILD = 5;\nvar REGION_MASS = 6;\nvar REGION_MASS_CENTER_X = 7;\nvar REGION_MASS_CENTER_Y = 8;\n\nvar SUBDIVISION_ATTEMPTS = 3;\n\n/**\n * Constants.\n */\nvar PPN = 10;\nvar PPE = 3;\nvar PPR = 9;\n\nvar MAX_FORCE = 10;\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @param  {Float32Array} EdgeMatrix - Edge data.\n * @return {object}                  - Some metadata.\n */\nmoduleShim.exports = function iterate(options, NodeMatrix, EdgeMatrix) {\n  // Initializing variables\n  var l, r, n, n1, n2, rn, e, w, g, s;\n\n  var order = NodeMatrix.length,\n    size = EdgeMatrix.length;\n\n  var adjustSizes = options.adjustSizes;\n\n  var thetaSquared = options.barnesHutTheta * options.barnesHutTheta;\n\n  var outboundAttCompensation, coefficient, xDist, yDist, ewc, distance, factor;\n\n  var RegionMatrix = [];\n\n  // 1) Initializing layout data\n  //-----------------------------\n\n  // Resetting positions & computing max values\n  for (n = 0; n < order; n += PPN) {\n    NodeMatrix[n + NODE_OLD_DX] = NodeMatrix[n + NODE_DX];\n    NodeMatrix[n + NODE_OLD_DY] = NodeMatrix[n + NODE_DY];\n    NodeMatrix[n + NODE_DX] = 0;\n    NodeMatrix[n + NODE_DY] = 0;\n  }\n\n  // If outbound attraction distribution, compensate\n  if (options.outboundAttractionDistribution) {\n    outboundAttCompensation = 0;\n    for (n = 0; n < order; n += PPN) {\n      outboundAttCompensation += NodeMatrix[n + NODE_MASS];\n    }\n\n    outboundAttCompensation /= order / PPN;\n  }\n\n  // 1.bis) Barnes-Hut computation\n  //------------------------------\n\n  if (options.barnesHutOptimize) {\n    // Setting up\n    var minX = Infinity,\n      maxX = -Infinity,\n      minY = Infinity,\n      maxY = -Infinity,\n      q,\n      q2,\n      subdivisionAttempts;\n\n    // Computing min and max values\n    for (n = 0; n < order; n += PPN) {\n      minX = Math.min(minX, NodeMatrix[n + NODE_X]);\n      maxX = Math.max(maxX, NodeMatrix[n + NODE_X]);\n      minY = Math.min(minY, NodeMatrix[n + NODE_Y]);\n      maxY = Math.max(maxY, NodeMatrix[n + NODE_Y]);\n    }\n\n    // squarify bounds, it's a quadtree\n    var dx = maxX - minX,\n      dy = maxY - minY;\n    if (dx > dy) {\n      minY -= (dx - dy) / 2;\n      maxY = minY + dx;\n    } else {\n      minX -= (dy - dx) / 2;\n      maxX = minX + dy;\n    }\n\n    // Build the Barnes Hut root region\n    RegionMatrix[0 + REGION_NODE] = -1;\n    RegionMatrix[0 + REGION_CENTER_X] = (minX + maxX) / 2;\n    RegionMatrix[0 + REGION_CENTER_Y] = (minY + maxY) / 2;\n    RegionMatrix[0 + REGION_SIZE] = Math.max(maxX - minX, maxY - minY);\n    RegionMatrix[0 + REGION_NEXT_SIBLING] = -1;\n    RegionMatrix[0 + REGION_FIRST_CHILD] = -1;\n    RegionMatrix[0 + REGION_MASS] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_X] = 0;\n    RegionMatrix[0 + REGION_MASS_CENTER_Y] = 0;\n\n    // Add each node in the tree\n    l = 1;\n    for (n = 0; n < order; n += PPN) {\n      // Current region, starting with root\n      r = 0;\n      subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n\n      while (true) {\n        // Are there sub-regions?\n\n        // We look at first child index\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // There are sub-regions\n\n          // We just iterate to find a \"leaf\" of the tree\n          // that is an empty region or a region with a single node\n          // (see next case)\n\n          // Find the quadrant of n\n          if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD];\n            } else {\n              // Bottom Left quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n            }\n          } else {\n            if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n              // Top Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n            } else {\n              // Bottom Right quarter\n              q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n            }\n          }\n\n          // Update center of mass and mass (we only do it for non-leave regions)\n          RegionMatrix[r + REGION_MASS_CENTER_X] =\n            (RegionMatrix[r + REGION_MASS_CENTER_X] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_X] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS_CENTER_Y] =\n            (RegionMatrix[r + REGION_MASS_CENTER_Y] *\n              RegionMatrix[r + REGION_MASS] +\n              NodeMatrix[n + NODE_Y] * NodeMatrix[n + NODE_MASS]) /\n            (RegionMatrix[r + REGION_MASS] + NodeMatrix[n + NODE_MASS]);\n\n          RegionMatrix[r + REGION_MASS] += NodeMatrix[n + NODE_MASS];\n\n          // Iterate on the right quadrant\n          r = q;\n          continue;\n        } else {\n          // There are no sub-regions: we are in a \"leaf\"\n\n          // Is there a node in this leave?\n          if (RegionMatrix[r + REGION_NODE] < 0) {\n            // There is no node in region:\n            // we record node n and go on\n            RegionMatrix[r + REGION_NODE] = n;\n            break;\n          } else {\n            // There is a node in this region\n\n            // We will need to create sub-regions, stick the two\n            // nodes (the old one r[0] and the new one n) in two\n            // subregions. If they fall in the same quadrant,\n            // we will iterate.\n\n            // Create sub-regions\n            RegionMatrix[r + REGION_FIRST_CHILD] = l * PPR;\n            w = RegionMatrix[r + REGION_SIZE] / 2; // new size (half)\n\n            // NOTE: we use screen coordinates\n            // from Top Left to Bottom Right\n\n            // Top Left sub-region\n            g = RegionMatrix[r + REGION_FIRST_CHILD];\n\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Left sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] - w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Top Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] - w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] = g + PPR;\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            // Bottom Right sub-region\n            g += PPR;\n            RegionMatrix[g + REGION_NODE] = -1;\n            RegionMatrix[g + REGION_CENTER_X] =\n              RegionMatrix[r + REGION_CENTER_X] + w;\n            RegionMatrix[g + REGION_CENTER_Y] =\n              RegionMatrix[r + REGION_CENTER_Y] + w;\n            RegionMatrix[g + REGION_SIZE] = w;\n            RegionMatrix[g + REGION_NEXT_SIBLING] =\n              RegionMatrix[r + REGION_NEXT_SIBLING];\n            RegionMatrix[g + REGION_FIRST_CHILD] = -1;\n            RegionMatrix[g + REGION_MASS] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_X] = 0;\n            RegionMatrix[g + REGION_MASS_CENTER_Y] = 0;\n\n            l += 4;\n\n            // Now the goal is to find two different sub-regions\n            // for the two nodes: the one previously recorded (r[0])\n            // and the one we want to add (n)\n\n            // Find the quadrant of the old node\n            if (\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X] <\n              RegionMatrix[r + REGION_CENTER_X]\n            ) {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (\n                NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y] <\n                RegionMatrix[r + REGION_CENTER_Y]\n              ) {\n                // Top Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            // We remove r[0] from the region r, add its mass to r and record it in q\n            RegionMatrix[r + REGION_MASS] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_MASS];\n            RegionMatrix[r + REGION_MASS_CENTER_X] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_X];\n            RegionMatrix[r + REGION_MASS_CENTER_Y] =\n              NodeMatrix[RegionMatrix[r + REGION_NODE] + NODE_Y];\n\n            RegionMatrix[q + REGION_NODE] = RegionMatrix[r + REGION_NODE];\n            RegionMatrix[r + REGION_NODE] = -1;\n\n            // Find the quadrant of n\n            if (NodeMatrix[n + NODE_X] < RegionMatrix[r + REGION_CENTER_X]) {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD];\n              } else {\n                // Bottom Left quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR;\n              }\n            } else {\n              if (NodeMatrix[n + NODE_Y] < RegionMatrix[r + REGION_CENTER_Y]) {\n                // Top Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 2;\n              } else {\n                // Bottom Right quarter\n                q2 = RegionMatrix[r + REGION_FIRST_CHILD] + PPR * 3;\n              }\n            }\n\n            if (q === q2) {\n              // If both nodes are in the same quadrant,\n              // we have to try it again on this quadrant\n              if (subdivisionAttempts--) {\n                r = q;\n                continue; // while\n              } else {\n                // we are out of precision here, and we cannot subdivide anymore\n                // but we have to break the loop anyway\n                subdivisionAttempts = SUBDIVISION_ATTEMPTS;\n                break; // while\n              }\n            }\n\n            // If both quadrants are different, we record n\n            // in its quadrant\n            RegionMatrix[q2 + REGION_NODE] = n;\n            break;\n          }\n        }\n      }\n    }\n  }\n\n  // 2) Repulsion\n  //--------------\n  // NOTES: adjustSizes = antiCollision & scalingRatio = coefficient\n\n  if (options.barnesHutOptimize) {\n    coefficient = options.scalingRatio;\n\n    // Applying repulsion through regions\n    for (n = 0; n < order; n += PPN) {\n      // Computing leaf quad nodes iteration\n\n      r = 0; // Starting with root region\n      while (true) {\n        if (RegionMatrix[r + REGION_FIRST_CHILD] >= 0) {\n          // The region has sub-regions\n\n          // We run the Barnes Hut test to see if we are at the right distance\n          distance =\n            Math.pow(\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X],\n              2\n            ) +\n            Math.pow(\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y],\n              2\n            );\n\n          s = RegionMatrix[r + REGION_SIZE];\n\n          if ((4 * s * s) / distance < thetaSquared) {\n            // We treat the region as a single body, and we repulse\n\n            xDist =\n              NodeMatrix[n + NODE_X] - RegionMatrix[r + REGION_MASS_CENTER_X];\n            yDist =\n              NodeMatrix[n + NODE_Y] - RegionMatrix[r + REGION_MASS_CENTER_Y];\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    RegionMatrix[r + REGION_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n\n            // When this is done, we iterate. We have to look at the next sibling.\n            r = RegionMatrix[r + REGION_NEXT_SIBLING];\n            if (r < 0) break; // No next sibling: we have finished the tree\n\n            continue;\n          } else {\n            // The region is too close and we have to look at sub-regions\n            r = RegionMatrix[r + REGION_FIRST_CHILD];\n            continue;\n          }\n        } else {\n          // The region has no sub-region\n          // If there is a node r[0] and it is not n, then repulse\n          rn = RegionMatrix[r + REGION_NODE];\n\n          if (rn >= 0 && rn !== n) {\n            xDist = NodeMatrix[n + NODE_X] - NodeMatrix[rn + NODE_X];\n            yDist = NodeMatrix[n + NODE_Y] - NodeMatrix[rn + NODE_Y];\n\n            distance = xDist * xDist + yDist * yDist;\n\n            if (adjustSizes === true) {\n              //-- Linear Anti-collision Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              } else if (distance < 0) {\n                factor =\n                  (-coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  Math.sqrt(distance);\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            } else {\n              //-- Linear Repulsion\n              if (distance > 0) {\n                factor =\n                  (coefficient *\n                    NodeMatrix[n + NODE_MASS] *\n                    NodeMatrix[rn + NODE_MASS]) /\n                  distance;\n\n                NodeMatrix[n + NODE_DX] += xDist * factor;\n                NodeMatrix[n + NODE_DY] += yDist * factor;\n              }\n            }\n          }\n\n          // When this is done, we iterate. We have to look at the next sibling.\n          r = RegionMatrix[r + REGION_NEXT_SIBLING];\n\n          if (r < 0) break; // No next sibling: we have finished the tree\n\n          continue;\n        }\n      }\n    }\n  } else {\n    coefficient = options.scalingRatio;\n\n    // Square iteration\n    for (n1 = 0; n1 < order; n1 += PPN) {\n      for (n2 = 0; n2 < n1; n2 += PPN) {\n        // Common to both methods\n        xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n        yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n        if (adjustSizes === true) {\n          //-- Anticollision Linear Repulsion\n          distance =\n            Math.sqrt(xDist * xDist + yDist * yDist) -\n            NodeMatrix[n1 + NODE_SIZE] -\n            NodeMatrix[n2 + NODE_SIZE];\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] += xDist * factor;\n            NodeMatrix[n2 + NODE_DY] += yDist * factor;\n          } else if (distance < 0) {\n            factor =\n              100 *\n              coefficient *\n              NodeMatrix[n1 + NODE_MASS] *\n              NodeMatrix[n2 + NODE_MASS];\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        } else {\n          //-- Linear Repulsion\n          distance = Math.sqrt(xDist * xDist + yDist * yDist);\n\n          if (distance > 0) {\n            factor =\n              (coefficient *\n                NodeMatrix[n1 + NODE_MASS] *\n                NodeMatrix[n2 + NODE_MASS]) /\n              distance /\n              distance;\n\n            // Updating nodes' dx and dy\n            NodeMatrix[n1 + NODE_DX] += xDist * factor;\n            NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n            NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n            NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n          }\n        }\n      }\n    }\n  }\n\n  // 3) Gravity\n  //------------\n  g = options.gravity / options.scalingRatio;\n  coefficient = options.scalingRatio;\n  for (n = 0; n < order; n += PPN) {\n    factor = 0;\n\n    // Common to both methods\n    xDist = NodeMatrix[n + NODE_X];\n    yDist = NodeMatrix[n + NODE_Y];\n    distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n    if (options.strongGravityMode) {\n      //-- Strong gravity\n      if (distance > 0) factor = coefficient * NodeMatrix[n + NODE_MASS] * g;\n    } else {\n      //-- Linear Anti-collision Repulsion n\n      if (distance > 0)\n        factor = (coefficient * NodeMatrix[n + NODE_MASS] * g) / distance;\n    }\n\n    // Updating node's dx and dy\n    NodeMatrix[n + NODE_DX] -= xDist * factor;\n    NodeMatrix[n + NODE_DY] -= yDist * factor;\n  }\n\n  // 4) Attraction\n  //---------------\n  coefficient =\n    1 * (options.outboundAttractionDistribution ? outboundAttCompensation : 1);\n\n  // TODO: simplify distance\n  // TODO: coefficient is always used as -c --> optimize?\n  for (e = 0; e < size; e += PPE) {\n    n1 = EdgeMatrix[e + EDGE_SOURCE];\n    n2 = EdgeMatrix[e + EDGE_TARGET];\n    w = EdgeMatrix[e + EDGE_WEIGHT];\n\n    // Edge weight influence\n    ewc = Math.pow(w, options.edgeWeightInfluence);\n\n    // Common measures\n    xDist = NodeMatrix[n1 + NODE_X] - NodeMatrix[n2 + NODE_X];\n    yDist = NodeMatrix[n1 + NODE_Y] - NodeMatrix[n2 + NODE_Y];\n\n    // Applying attraction to nodes\n    if (adjustSizes === true) {\n      distance = Math.sqrt(\n        Math.pow(xDist, 2) +\n          Math.pow(yDist, 2) -\n          NodeMatrix[n1 + NODE_SIZE] -\n          NodeMatrix[n2 + NODE_SIZE]\n      );\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n          }\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Degree Distributed Anti-collision Attraction\n          if (distance > 0) {\n            factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- Linear Anti-collision Attraction\n          if (distance > 0) {\n            factor = -coefficient * ewc;\n          }\n        }\n      }\n    } else {\n      distance = Math.sqrt(Math.pow(xDist, 2) + Math.pow(yDist, 2));\n\n      if (options.linLogMode) {\n        if (options.outboundAttractionDistribution) {\n          //-- LinLog Degree Distributed Attraction\n          if (distance > 0) {\n            factor =\n              (-coefficient * ewc * Math.log(1 + distance)) /\n              distance /\n              NodeMatrix[n1 + NODE_MASS];\n          }\n        } else {\n          //-- LinLog Attraction\n          if (distance > 0)\n            factor = (-coefficient * ewc * Math.log(1 + distance)) / distance;\n        }\n      } else {\n        if (options.outboundAttractionDistribution) {\n          //-- Linear Attraction Mass Distributed\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = (-coefficient * ewc) / NodeMatrix[n1 + NODE_MASS];\n        } else {\n          //-- Linear Attraction\n          // NOTE: Distance is set to 1 to override next condition\n          distance = 1;\n          factor = -coefficient * ewc;\n        }\n      }\n    }\n\n    // Updating nodes' dx and dy\n    // TODO: if condition or factor = 1?\n    if (distance > 0) {\n      // Updating nodes' dx and dy\n      NodeMatrix[n1 + NODE_DX] += xDist * factor;\n      NodeMatrix[n1 + NODE_DY] += yDist * factor;\n\n      NodeMatrix[n2 + NODE_DX] -= xDist * factor;\n      NodeMatrix[n2 + NODE_DY] -= yDist * factor;\n    }\n  }\n\n  // 5) Apply Forces\n  //-----------------\n  var force, swinging, traction, nodespeed, newX, newY;\n\n  // MATH: sqrt and square distances\n  if (adjustSizes === true) {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        force = Math.sqrt(\n          Math.pow(NodeMatrix[n + NODE_DX], 2) +\n            Math.pow(NodeMatrix[n + NODE_DY], 2)\n        );\n\n        if (force > MAX_FORCE) {\n          NodeMatrix[n + NODE_DX] =\n            (NodeMatrix[n + NODE_DX] * MAX_FORCE) / force;\n          NodeMatrix[n + NODE_DY] =\n            (NodeMatrix[n + NODE_DY] * MAX_FORCE) / force;\n        }\n\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed = (0.1 * Math.log(1 + traction)) / (1 + Math.sqrt(swinging));\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  } else {\n    for (n = 0; n < order; n += PPN) {\n      if (NodeMatrix[n + NODE_FIXED] !== 1) {\n        swinging =\n          NodeMatrix[n + NODE_MASS] *\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] - NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] - NodeMatrix[n + NODE_DY])\n          );\n\n        traction =\n          Math.sqrt(\n            (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) *\n              (NodeMatrix[n + NODE_OLD_DX] + NodeMatrix[n + NODE_DX]) +\n              (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY]) *\n                (NodeMatrix[n + NODE_OLD_DY] + NodeMatrix[n + NODE_DY])\n          ) / 2;\n\n        nodespeed =\n          (NodeMatrix[n + NODE_CONVERGENCE] * Math.log(1 + traction)) /\n          (1 + Math.sqrt(swinging));\n\n        // Updating node convergence\n        NodeMatrix[n + NODE_CONVERGENCE] = Math.min(\n          1,\n          Math.sqrt(\n            (nodespeed *\n              (Math.pow(NodeMatrix[n + NODE_DX], 2) +\n                Math.pow(NodeMatrix[n + NODE_DY], 2))) /\n              (1 + Math.sqrt(swinging))\n          )\n        );\n\n        // Updating node's positon\n        newX =\n          NodeMatrix[n + NODE_X] +\n          NodeMatrix[n + NODE_DX] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_X] = newX;\n\n        newY =\n          NodeMatrix[n + NODE_Y] +\n          NodeMatrix[n + NODE_DY] * (nodespeed / options.slowDown);\n        NodeMatrix[n + NODE_Y] = newY;\n      }\n    }\n  }\n\n  // We return the information about the layout (no need to return the matrices)\n  return {};\n};\n\n  })();\n\n  var iterate = moduleShim.exports;\n\n  self.addEventListener('message', function (event) {\n    var data = event.data;\n\n    NODES = new Float32Array(data.nodes);\n\n    if (data.edges) EDGES = new Float32Array(data.edges);\n\n    // Running the iteration\n    iterate(data.settings, NODES, EDGES);\n\n    // Sending result to supervisor\n    self.postMessage(\n      {\n        nodes: NODES.buffer\n      },\n      [NODES.buffer]\n    );\n  });\n};\n\n","/**\n * Graphology ForceAtlas2 Layout Supervisor\n * =========================================\n *\n * Supervisor class able to spawn a web worker to run the FA2 layout in a\n * separate thread not to block UI with heavy synchronous computations.\n */\nvar workerFunction = require('./webworker.js'),\n  isGraph = require('graphology-utils/is-graph'),\n  helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Class representing a FA2 layout run by a webworker.\n *\n * @constructor\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - Parameters:\n * @param  {object}          [settings] - Settings.\n */\nfunction FA2LayoutSupervisor(graph, params) {\n  params = params || {};\n\n  // Validation\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-forceatlas2/worker: the given graph is not a valid graphology instance.'\n    );\n\n  var attributes = params.attributes || {};\n  var weightAttribute = params.weighted ? attributes.weight || 'weight' : null;\n\n  // Validating settings\n  var settings = helpers.assign({}, DEFAULT_SETTINGS, params.settings);\n  var validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error(\n      'graphology-layout-forceatlas2/worker: ' + validationError.message\n    );\n\n  // Properties\n  this.worker = null;\n  this.graph = graph;\n  this.settings = settings;\n  this.weightAttribute = weightAttribute;\n  this.matrices = null;\n  this.running = false;\n  this.killed = false;\n\n  // Binding listeners\n  this.handleMessage = this.handleMessage.bind(this);\n\n  var respawnFrame = undefined;\n  var self = this;\n\n  this.handleGraphUpdate = function () {\n    if (self.worker) self.worker.terminate();\n\n    if (respawnFrame) clearTimeout(respawnFrame);\n\n    respawnFrame = setTimeout(function () {\n      respawnFrame = undefined;\n      self.spawnWorker();\n    }, 0);\n  };\n\n  graph.on('nodeAdded', this.handleGraphUpdate);\n  graph.on('edgeAdded', this.handleGraphUpdate);\n  graph.on('nodeDropped', this.handleGraphUpdate);\n  graph.on('edgeDropped', this.handleGraphUpdate);\n\n  // Spawning worker\n  this.spawnWorker();\n}\n\nFA2LayoutSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\n\n/**\n * Internal method used to spawn the web worker.\n */\nFA2LayoutSupervisor.prototype.spawnWorker = function () {\n  if (this.worker) this.worker.terminate();\n\n  this.worker = helpers.createWorker(workerFunction);\n  this.worker.addEventListener('message', this.handleMessage);\n\n  if (this.running) {\n    this.running = false;\n    this.start();\n  }\n};\n\n/**\n * Internal method used to handle the worker's messages.\n *\n * @param {object} event - Event to handle.\n */\nFA2LayoutSupervisor.prototype.handleMessage = function (event) {\n  if (!this.running) return;\n\n  var matrix = new Float32Array(event.data.nodes);\n\n  helpers.assignLayoutChanges(this.graph, matrix);\n  this.matrices.nodes = matrix;\n\n  // Looping\n  this.askForIterations();\n};\n\n/**\n * Internal method used to ask for iterations from the worker.\n *\n * @param  {boolean} withEdges - Should we send edges along?\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.askForIterations = function (withEdges) {\n  var matrices = this.matrices;\n\n  var payload = {\n    settings: this.settings,\n    nodes: matrices.nodes.buffer\n  };\n\n  var buffers = [matrices.nodes.buffer];\n\n  if (withEdges) {\n    payload.edges = matrices.edges.buffer;\n    buffers.push(matrices.edges.buffer);\n  }\n\n  this.worker.postMessage(payload, buffers);\n\n  return this;\n};\n\n/**\n * Method used to start the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.start = function () {\n  if (this.killed)\n    throw new Error(\n      'graphology-layout-forceatlas2/worker.start: layout was killed.'\n    );\n\n  if (this.running) return this;\n\n  // Building matrices\n  this.matrices = helpers.graphToByteArrays(this.graph, this.weightAttribute);\n\n  this.running = true;\n  this.askForIterations(true);\n\n  return this;\n};\n\n/**\n * Method used to stop the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.stop = function () {\n  this.running = false;\n\n  return this;\n};\n\n/**\n * Method used to kill the layout.\n *\n * @return {FA2LayoutSupervisor}\n */\nFA2LayoutSupervisor.prototype.kill = function () {\n  if (this.killed) return this;\n\n  this.running = false;\n  this.killed = true;\n\n  // Clearing memory\n  this.matrices = null;\n\n  // Terminating worker\n  this.worker.terminate();\n\n  // Unbinding listeners\n  this.graph.removeListener('nodeAdded', this.handleGraphUpdate);\n  this.graph.removeListener('edgeAdded', this.handleGraphUpdate);\n  this.graph.removeListener('nodeDropped', this.handleGraphUpdate);\n  this.graph.removeListener('edgeDropped', this.handleGraphUpdate);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = FA2LayoutSupervisor;\n","/**\n * Graphology Noverlap Layout Webworker\n * =====================================\n *\n * Web worker able to run the layout in a separate thread.\n */\nmodule.exports = function worker() {\n  var NODES;\n\n  var moduleShim = {};\n\n  (function () {\n    /**\n * Graphology Noverlap Iteration\n * ==============================\n *\n * Function used to perform a single iteration of the algorithm.\n */\n\n/**\n * Matrices properties accessors.\n */\nvar NODE_X = 0,\n  NODE_Y = 1,\n  NODE_SIZE = 2;\n\n/**\n * Constants.\n */\nvar PPN = 3;\n\n/**\n * Helpers.\n */\nfunction hashPair(a, b) {\n  return a + '§' + b;\n}\n\nfunction jitter() {\n  return 0.01 * (0.5 - Math.random());\n}\n\n/**\n * Function used to perform a single interation of the algorithm.\n *\n * @param  {object}       options    - Layout options.\n * @param  {Float32Array} NodeMatrix - Node data.\n * @return {object}                  - Some metadata.\n */\nmoduleShim.exports = function iterate(options, NodeMatrix) {\n  // Caching options\n  var margin = options.margin;\n  var ratio = options.ratio;\n  var expansion = options.expansion;\n  var gridSize = options.gridSize; // TODO: decrease grid size when few nodes?\n  var speed = options.speed;\n\n  // Generic iteration variables\n  var i, j, x, y, l, size;\n  var converged = true;\n\n  var length = NodeMatrix.length;\n  var order = (length / PPN) | 0;\n\n  var deltaX = new Float32Array(order);\n  var deltaY = new Float32Array(order);\n\n  // Finding the extents of our space\n  var xMin = Infinity;\n  var yMin = Infinity;\n  var xMax = -Infinity;\n  var yMax = -Infinity;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    xMin = Math.min(xMin, x - size);\n    xMax = Math.max(xMax, x + size);\n    yMin = Math.min(yMin, y - size);\n    yMax = Math.max(yMax, y + size);\n  }\n\n  var width = xMax - xMin;\n  var height = yMax - yMin;\n  var xCenter = (xMin + xMax) / 2;\n  var yCenter = (yMin + yMax) / 2;\n\n  xMin = xCenter - (expansion * width) / 2;\n  xMax = xCenter + (expansion * width) / 2;\n  yMin = yCenter - (expansion * height) / 2;\n  yMax = yCenter + (expansion * height) / 2;\n\n  // Building grid\n  var grid = new Array(gridSize * gridSize),\n    gridLength = grid.length,\n    c;\n\n  for (c = 0; c < gridLength; c++) grid[c] = [];\n\n  var nxMin, nxMax, nyMin, nyMax;\n  var xMinBox, xMaxBox, yMinBox, yMaxBox;\n\n  var col, row;\n\n  for (i = 0; i < length; i += PPN) {\n    x = NodeMatrix[i + NODE_X];\n    y = NodeMatrix[i + NODE_Y];\n    size = NodeMatrix[i + NODE_SIZE] * ratio + margin;\n\n    nxMin = x - size;\n    nxMax = x + size;\n    nyMin = y - size;\n    nyMax = y + size;\n\n    xMinBox = Math.floor((gridSize * (nxMin - xMin)) / (xMax - xMin));\n    xMaxBox = Math.floor((gridSize * (nxMax - xMin)) / (xMax - xMin));\n    yMinBox = Math.floor((gridSize * (nyMin - yMin)) / (yMax - yMin));\n    yMaxBox = Math.floor((gridSize * (nyMax - yMin)) / (yMax - yMin));\n\n    for (col = xMinBox; col <= xMaxBox; col++) {\n      for (row = yMinBox; row <= yMaxBox; row++) {\n        grid[col * gridSize + row].push(i);\n      }\n    }\n  }\n\n  // Computing collisions\n  var cell;\n\n  var collisions = new Set();\n\n  var n1, n2, x1, x2, y1, y2, s1, s2, h;\n\n  var xDist, yDist, dist, collision;\n\n  for (c = 0; c < gridLength; c++) {\n    cell = grid[c];\n\n    for (i = 0, l = cell.length; i < l; i++) {\n      n1 = cell[i];\n\n      x1 = NodeMatrix[n1 + NODE_X];\n      y1 = NodeMatrix[n1 + NODE_Y];\n      s1 = NodeMatrix[n1 + NODE_SIZE];\n\n      for (j = i + 1; j < l; j++) {\n        n2 = cell[j];\n        h = hashPair(n1, n2);\n\n        if (gridLength > 1 && collisions.has(h)) continue;\n\n        if (gridLength > 1) collisions.add(h);\n\n        x2 = NodeMatrix[n2 + NODE_X];\n        y2 = NodeMatrix[n2 + NODE_Y];\n        s2 = NodeMatrix[n2 + NODE_SIZE];\n\n        xDist = x2 - x1;\n        yDist = y2 - y1;\n        dist = Math.sqrt(xDist * xDist + yDist * yDist);\n        collision = dist < s1 * ratio + margin + (s2 * ratio + margin);\n\n        if (collision) {\n          converged = false;\n\n          n2 = (n2 / PPN) | 0;\n\n          if (dist > 0) {\n            deltaX[n2] += (xDist / dist) * (1 + s1);\n            deltaY[n2] += (yDist / dist) * (1 + s1);\n          } else {\n            // Nodes are on the exact same spot, we need to jitter a bit\n            deltaX[n2] += width * jitter();\n            deltaY[n2] += height * jitter();\n          }\n        }\n      }\n    }\n  }\n\n  for (i = 0, j = 0; i < length; i += PPN, j++) {\n    NodeMatrix[i + NODE_X] += deltaX[j] * 0.1 * speed;\n    NodeMatrix[i + NODE_Y] += deltaY[j] * 0.1 * speed;\n  }\n\n  return {converged: converged};\n};\n\n  })();\n\n  var iterate = moduleShim.exports;\n\n  self.addEventListener('message', function (event) {\n    var data = event.data;\n\n    NODES = new Float32Array(data.nodes);\n\n    // Running the iteration\n    var result = iterate(data.settings, NODES);\n\n    // Sending result to supervisor\n    self.postMessage(\n      {\n        result: result,\n        nodes: NODES.buffer\n      },\n      [NODES.buffer]\n    );\n  });\n};\n\n","/**\n * Graphology Noverlap Layout Supervisor\n * ======================================\n *\n * Supervisor class able to spawn a web worker to run the Noverlap layout in a\n * separate thread not to block UI with heavy synchronous computations.\n */\nvar workerFunction = require('./webworker.js'),\n  isGraph = require('graphology-utils/is-graph'),\n  helpers = require('./helpers.js');\n\nvar DEFAULT_SETTINGS = require('./defaults.js');\n\n/**\n * Class representing a Noverlap layout run by a webworker.\n *\n * @constructor\n * @param  {Graph}         graph        - Target graph.\n * @param  {object|number} params       - Parameters:\n * @param  {object}          [settings] - Settings.\n */\nfunction NoverlapLayoutSupervisor(graph, params) {\n  params = params || {};\n\n  // Validation\n  if (!isGraph(graph))\n    throw new Error(\n      'graphology-layout-noverlap/worker: the given graph is not a valid graphology instance.'\n    );\n\n  // Validating settings\n  var settings = Object.assign({}, DEFAULT_SETTINGS, params.settings),\n    validationError = helpers.validateSettings(settings);\n\n  if (validationError)\n    throw new Error(\n      'graphology-layout-noverlap/worker: ' + validationError.message\n    );\n\n  // Properties\n  this.worker = null;\n  this.graph = graph;\n  this.settings = settings;\n  this.matrices = null;\n  this.running = false;\n  this.killed = false;\n\n  this.inputReducer = params.inputReducer;\n  this.outputReducer = params.outputReducer;\n\n  this.callbacks = {\n    onConverged:\n      typeof params.onConverged === 'function' ? params.onConverged : null\n  };\n\n  // Binding listeners\n  this.handleMessage = this.handleMessage.bind(this);\n\n  var alreadyRespawning = false;\n  var self = this;\n\n  this.handleAddition = function () {\n    if (alreadyRespawning) return;\n\n    alreadyRespawning = true;\n\n    self.spawnWorker();\n    setImmediate(function () {\n      alreadyRespawning = false;\n    });\n  };\n\n  graph.on('nodeAdded', this.handleAddition);\n  graph.on('edgeAdded', this.handleAddition);\n\n  // Spawning worker\n  this.spawnWorker();\n}\n\nNoverlapLayoutSupervisor.prototype.isRunning = function () {\n  return this.running;\n};\n\n/**\n * Internal method used to spawn the web worker.\n */\nNoverlapLayoutSupervisor.prototype.spawnWorker = function () {\n  if (this.worker) this.worker.terminate();\n\n  this.worker = helpers.createWorker(workerFunction);\n  this.worker.addEventListener('message', this.handleMessage);\n\n  if (this.running) {\n    this.running = false;\n    this.start();\n  }\n};\n\n/**\n * Internal method used to handle the worker's messages.\n *\n * @param {object} event - Event to handle.\n */\nNoverlapLayoutSupervisor.prototype.handleMessage = function (event) {\n  if (!this.running) return;\n\n  var matrix = new Float32Array(event.data.nodes);\n\n  helpers.assignLayoutChanges(this.graph, matrix, this.outputReducer);\n  this.matrices.nodes = matrix;\n\n  if (event.data.result.converged) {\n    if (this.callbacks.onConverged) this.callbacks.onConverged();\n\n    this.stop();\n    return;\n  }\n\n  // Looping\n  this.askForIterations();\n};\n\n/**\n * Internal method used to ask for iterations from the worker.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.askForIterations = function () {\n  var matrices = this.matrices;\n\n  var payload = {\n    settings: this.settings,\n    nodes: matrices.nodes.buffer\n  };\n\n  var buffers = [matrices.nodes.buffer];\n\n  this.worker.postMessage(payload, buffers);\n\n  return this;\n};\n\n/**\n * Method used to start the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.start = function () {\n  if (this.killed)\n    throw new Error(\n      'graphology-layout-noverlap/worker.start: layout was killed.'\n    );\n\n  if (this.running) return this;\n\n  // Building matrices\n  this.matrices = {\n    nodes: helpers.graphToByteArray(this.graph, this.inputReducer)\n  };\n\n  this.running = true;\n  this.askForIterations();\n\n  return this;\n};\n\n/**\n * Method used to stop the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.stop = function () {\n  this.running = false;\n\n  return this;\n};\n\n/**\n * Method used to kill the layout.\n *\n * @return {NoverlapLayoutSupervisor}\n */\nNoverlapLayoutSupervisor.prototype.kill = function () {\n  if (this.killed) return this;\n\n  this.running = false;\n  this.killed = true;\n\n  // Clearing memory\n  this.matrices = null;\n\n  // Terminating worker\n  this.worker.terminate();\n\n  // Unbinding listeners\n  this.graph.removeListener('nodeAdded', this.handleAddition);\n  this.graph.removeListener('edgeAdded', this.handleAddition);\n};\n\n/**\n * Exporting.\n */\nmodule.exports = NoverlapLayoutSupervisor;\n","/**\n * Graphology Common GEXF Helpers\n * ===============================\n *\n * Miscellaneous helpers used by both instance of the code.\n */\n\n/**\n * Function used to cast a string value to the desired type.\n *\n * @param  {string} type - Value type.\n * @param  {string} type - String value.\n * @return {any}         - Parsed type.\n */\nexports.cast = function (type, value) {\n  switch (type) {\n    case 'boolean':\n      value = value === 'true';\n      break;\n\n    case 'integer':\n    case 'long':\n    case 'float':\n    case 'double':\n      value = +value;\n      break;\n\n    case 'liststring':\n      value = value ? value.split('|') : [];\n      break;\n\n    default:\n  }\n\n  return value;\n};\n\n/**\n * Function deleting illegal characters from a potential tag name to avoid\n * generating invalid XML.\n *\n * @param  {string} type - Tag name.\n * @return {string}\n */\nvar SANITIZE_PATTERN = /[\"'<>&\\s]/g;\n\nexports.sanitizeTagName = function sanitizeTagName(tagName) {\n  return tagName.replace(SANITIZE_PATTERN, '').trim();\n};\n","/* eslint no-self-compare: 0 */\n/**\n * Graphology Browser GEXF Parser\n * ===============================\n *\n * Browser version of the graphology GEXF parser using DOMParser to function.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\nvar mergeEdge = require('graphology-utils/add-edge').mergeEdge;\nvar toMixed = require('graphology-operators/to-mixed');\nvar toMulti = require('graphology-operators/to-multi');\nvar helpers = require('../common/helpers.js');\n\nvar cast = helpers.cast;\n\n/**\n * Function checking whether the given value is a NaN.\n *\n * @param  {any} value - Value to test.\n * @return {boolean}\n */\nfunction isReallyNaN(value) {\n  return value !== value;\n}\n\n/**\n * Function used to convert a viz:color attribute into a CSS rgba? string.\n *\n * @param  {Node}   element - DOM element.\n * @return {string}\n */\nfunction toRGBString(element) {\n  var a = element.getAttribute('a'),\n    r = element.getAttribute('r'),\n    g = element.getAttribute('g'),\n    b = element.getAttribute('b');\n\n  return a\n    ? 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n    : 'rgb(' + r + ',' + g + ',' + b + ')';\n}\n\n/**\n * Function returning the first matching tag of the `viz` namespace matching\n * the desired tag name.\n *\n * @param  {Node}   element - Target DOM element.\n * @param  {string} name    - Tag name.\n * @return {Node}\n */\nfunction getFirstMatchingVizTag(element, name) {\n  var vizElement = element.getElementsByTagName('viz:' + name)[0];\n\n  if (!vizElement) vizElement = element.getElementsByTagNameNS('viz', name)[0];\n\n  if (!vizElement) vizElement = element.getElementsByTagName(name)[0];\n\n  return vizElement;\n}\n\n/**\n * Function used to collect meta information.\n *\n * @param  {Array<Node>} elements - Target DOM element.\n * @return {object}\n */\nfunction collectMeta(elements) {\n  var meta = {},\n    element,\n    value;\n\n  for (var i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n\n    if (element.nodeName === '#text') continue;\n\n    value = element.textContent.trim();\n\n    if (value) meta[element.tagName.toLowerCase()] = element.textContent;\n  }\n\n  return meta;\n}\n\n/**\n * Function used to extract the model from the right elements.\n *\n * @param  {Array<Node>} elements - Target DOM elements.\n * @return {array}                - The model & default attributes.\n */\nfunction extractModel(elements) {\n  var model = {},\n    defaults = {},\n    element,\n    defaultElement,\n    id;\n\n  for (var i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n    id = element.getAttribute('id') || element.getAttribute('for');\n\n    model[id] = {\n      id: id,\n      type: element.getAttribute('type') || 'string',\n      title: !isReallyNaN(+id) ? element.getAttribute('title') || id : id\n    };\n\n    // Default?\n    defaultElement = element.getElementsByTagName('default')[0];\n\n    if (defaultElement)\n      defaults[model[id].title] = cast(\n        model[id].type,\n        defaultElement.textContent\n      );\n  }\n\n  return [model, defaults];\n}\n\n/**\n * Function used to collect an element's attributes.\n *\n * @param  {object} model    - Data model to use.\n * @param  {object} defaults - Default values.\n * @param  {Node}   element  - Target DOM element.\n * @return {object}          - The collected attributes.\n */\nfunction collectAttributes(model, defaults, element) {\n  var data = {},\n    label = element.getAttribute('label'),\n    weight = element.getAttribute('weight');\n\n  if (label) data.label = label;\n\n  if (weight) data.weight = +weight;\n\n  var valueElements = element.getElementsByTagName('attvalue'),\n    valueElement,\n    id;\n\n  for (var i = 0, l = valueElements.length; i < l; i++) {\n    valueElement = valueElements[i];\n    id = valueElement.getAttribute('id') || valueElement.getAttribute('for');\n\n    data[model[id].title] = cast(\n      model[id].type,\n      valueElement.getAttribute('value')\n    );\n  }\n\n  // Applying default values\n  var k;\n\n  for (k in defaults) {\n    if (!(k in data)) data[k] = defaults[k];\n  }\n\n  // TODO: shortcut here to avoid viz when namespace is not set\n\n  // Attempting to find viz namespace tags\n\n  //-- 1) Color\n  var vizElement = getFirstMatchingVizTag(element, 'color');\n\n  if (vizElement) data.color = toRGBString(vizElement);\n\n  //-- 2) Size\n  vizElement = getFirstMatchingVizTag(element, 'size');\n\n  if (vizElement) data.size = +vizElement.getAttribute('value');\n\n  //-- 3) Position\n  var x, y, z;\n\n  vizElement = getFirstMatchingVizTag(element, 'position');\n\n  if (vizElement) {\n    x = vizElement.getAttribute('x');\n    y = vizElement.getAttribute('y');\n    z = vizElement.getAttribute('z');\n\n    if (x) data.x = +x;\n    if (y) data.y = +y;\n    if (z) data.z = +z;\n  }\n\n  //-- 4) Shape\n  vizElement = getFirstMatchingVizTag(element, 'shape');\n\n  if (vizElement) data.shape = vizElement.getAttribute('value');\n\n  //-- 5) Thickness\n  vizElement = getFirstMatchingVizTag(element, 'thickness');\n\n  if (vizElement) data.thickness = +vizElement.getAttribute('value');\n\n  return data;\n}\n\n/**\n * Factory taking implementations of `DOMParser` & `Document` returning\n * the parser function.\n */\nmodule.exports = function createParserFunction(DOMParser, Document) {\n  /**\n   * Function taking either a string or a document and returning a\n   * graphology instance.\n   *\n   * @param {function}        Graph  - A graphology constructor.\n   * @param {string|Document} source - The source to parse.\n   * @param {object}          options - Parsing options.\n   */\n\n  // TODO: option to map the data to the attributes for customization, nodeModel, edgeModel, nodeReducer, edgeReducer\n  // TODO: option to disable the model mapping heuristic\n  return function parse(Graph, source, options) {\n    options = options || {};\n\n    var addMissingNodes = options.addMissingNodes === true;\n    var mergeResult;\n\n    var xmlDoc = source;\n\n    var element, result, type, attributes, id, s, t, i, l;\n\n    if (!isGraphConstructor(Graph))\n      throw new Error('graphology-gexf/parser: invalid Graph constructor.');\n\n    // If source is a string, we are going to parse it\n    if (typeof source === 'string')\n      xmlDoc = new DOMParser().parseFromString(source, 'application/xml');\n\n    if (!(xmlDoc instanceof Document))\n      throw new Error(\n        'graphology-gexf/parser: source should either be a XML document or a string.'\n      );\n\n    // Finding useful elements\n    var GRAPH_ELEMENT = xmlDoc.getElementsByTagName('graph')[0],\n      META_ELEMENT = xmlDoc.getElementsByTagName('meta')[0],\n      META_ELEMENTS = (META_ELEMENT && META_ELEMENT.childNodes) || [],\n      NODE_ELEMENTS = xmlDoc.getElementsByTagName('node'),\n      EDGE_ELEMENTS = xmlDoc.getElementsByTagName('edge'),\n      MODEL_ELEMENTS = xmlDoc.getElementsByTagName('attributes'),\n      NODE_MODEL_ELEMENTS = [],\n      EDGE_MODEL_ELEMENTS = [];\n\n    for (i = 0, l = MODEL_ELEMENTS.length; i < l; i++) {\n      element = MODEL_ELEMENTS[i];\n\n      if (element.getAttribute('class') === 'node')\n        NODE_MODEL_ELEMENTS = element.getElementsByTagName('attribute');\n      else if (element.getAttribute('class') === 'edge')\n        EDGE_MODEL_ELEMENTS = element.getElementsByTagName('attribute');\n    }\n\n    // Information\n    var DEFAULT_EDGE_TYPE =\n      GRAPH_ELEMENT.getAttribute('defaultedgetype') || 'undirected';\n\n    if (DEFAULT_EDGE_TYPE === 'mutual') DEFAULT_EDGE_TYPE = 'undirected';\n\n    // Computing models\n    result = extractModel(NODE_MODEL_ELEMENTS);\n\n    var NODE_MODEL = result[0],\n      NODE_DEFAULT_ATTRIBUTES = result[1];\n\n    result = extractModel(EDGE_MODEL_ELEMENTS);\n\n    var EDGE_MODEL = result[0],\n      EDGE_DEFAULT_ATTRIBUTES = result[1];\n\n    // Polling the first edge to guess the type of the edges\n    var graphType = EDGE_ELEMENTS[0]\n      ? EDGE_ELEMENTS[0].getAttribute('type') || DEFAULT_EDGE_TYPE\n      : 'mixed';\n\n    // Instantiating our graph\n    var graph = new Graph({\n      type: graphType\n    });\n\n    // Collecting meta\n    var meta = collectMeta(META_ELEMENTS),\n      lastModifiedDate =\n        META_ELEMENT && META_ELEMENT.getAttribute('lastmodifieddate');\n\n    graph.replaceAttributes(meta);\n\n    if (lastModifiedDate)\n      graph.setAttribute('lastModifiedDate', lastModifiedDate);\n\n    // Adding nodes\n    for (i = 0, l = NODE_ELEMENTS.length; i < l; i++) {\n      element = NODE_ELEMENTS[i];\n\n      graph.addNode(\n        element.getAttribute('id'),\n        collectAttributes(NODE_MODEL, NODE_DEFAULT_ATTRIBUTES, element)\n      );\n    }\n\n    // Adding edges\n    for (i = 0, l = EDGE_ELEMENTS.length; i < l; i++) {\n      element = EDGE_ELEMENTS[i];\n\n      id = element.getAttribute('id');\n      type = element.getAttribute('type') || DEFAULT_EDGE_TYPE;\n      s = element.getAttribute('source');\n      t = element.getAttribute('target');\n      attributes = collectAttributes(\n        EDGE_MODEL,\n        EDGE_DEFAULT_ATTRIBUTES,\n        element\n      );\n\n      // If we encountered an edge with a different type, we upgrade the graph\n      if (type !== graph.type && graph.type !== 'mixed') {\n        graph = toMixed(graph);\n      }\n\n      // If we encountered twice the same edge, we upgrade the graph\n      if (\n        !graph.multi &&\n        ((type === 'directed' && graph.hasDirectedEdge(s, t)) ||\n          graph.hasUndirectedEdge(s, t))\n      ) {\n        graph = toMulti(graph);\n      }\n\n      mergeResult = mergeEdge(\n        graph,\n        type !== 'directed',\n        id || null,\n        s,\n        t,\n        attributes\n      );\n\n      if (!addMissingNodes && (mergeResult[2] || mergeResult[3])) {\n        throw new Error(\n          'graphology-gexf/parser: one of your gexf file edges points to an inexisting node. Set the parser `addMissingNodes` option to `true` if you do not care.'\n        );\n      }\n    }\n\n    return graph;\n  };\n};\n","/**\n * Graphology Browser GEXF Parser\n * ===============================\n *\n * Browser version of the graphology GEXF parser.\n */\nvar createParserFunction = require('../common/parser.js');\n\nmodule.exports = createParserFunction(DOMParser, Document);\n","\nfunction isFalse(s) {\n  return typeof s !== 'number' && !s;\n}\n\nfunction strval(s) {\n  if (typeof s == 'string') {\n    return s;\n  }\n  else if (typeof s == 'number') {\n    return s+'';\n  }\n  else if (typeof s == 'function') {\n    return s();\n  }\n  else if (s instanceof XMLWriter) {\n    return s.toString();\n  }\n  else throw Error('Bad Parameter');\n}\n\nfunction XMLWriter(indent, callback) {\n\n    if (!(this instanceof XMLWriter)) {\n        return new XMLWriter();\n    }\n\n    this.name_regex = /[_:A-Za-z][-._:A-Za-z0-9]*/;\n    this.indent = indent ? true : false;\n    this.indentString = this.indent && typeof indent === 'string' ? indent : '    ';\n    this.output = '';\n    this.stack = [];\n    this.tags = 0;\n    this.attributes = 0;\n    this.attribute = 0;\n    this.texts = 0;\n    this.comment = 0;\n    this.dtd = 0;\n    this.root = '';\n    this.pi = 0;\n    this.cdata = 0;\n    this.started_write = false;\n    this.writer;\n    this.writer_encoding = 'UTF-8';\n\n    if (typeof callback == 'function') {\n        this.writer = callback;\n    } else {\n        this.writer = function (s, e) {\n            this.output += s;\n        }\n    }\n}\n\nXMLWriter.prototype = {\n    toString : function () {\n        this.flush();\n        return this.output;\n    },\n\n    indenter : function () {\n      if (this.indent) {\n        this.write('\\n');\n        for (var i = 1; i < this.tags; i++) {\n          this.write(this.indentString);\n        }\n      }\n    },\n\n    write : function () {\n        for (var i = 0; i < arguments.length; i++) {\n            this.writer(arguments[i], this.writer_encoding);\n        }\n    },\n\n\n    flush : function () {\n        for (var i = this.tags; i > 0; i--) {\n            this.endElement();\n        }\n        this.tags = 0;\n    },\n\n    startDocument : function (version, encoding, standalone) {\n        if (this.tags || this.attributes) return this;\n\n        this.startPI('xml');\n        this.startAttribute('version');\n        this.text(typeof version == \"string\" ? version : \"1.0\");\n        this.endAttribute();\n        if (typeof encoding == \"string\") {\n            this.startAttribute('encoding');\n            this.text(encoding);\n            this.endAttribute();\n            this.writer_encoding = encoding;\n        }\n        if (standalone) {\n            this.startAttribute('standalone');\n            this.text(\"yes\");\n            this.endAttribute();\n        }\n        this.endPI();\n        if (!this.indent) {\n          this.write('\\n');\n        }\n        return this;\n    },\n\n    endDocument : function () {\n        if (this.attributes) this.endAttributes();\n        return this;\n    },\n\n    writeElement : function (name, content) {\n        return this.startElement(name).text(content).endElement();\n    },\n\n    writeElementNS : function (prefix, name, uri, content) {\n        if (!content) {\n            content = uri;\n        }\n        return this.startElementNS(prefix, name, uri).text(content).endElement();\n    },\n\n    startElement : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.tags === 0 && this.root && this.root !== name) throw Error('Invalid Parameter');\n        if (this.attributes) this.endAttributes();\n        ++this.tags;\n        this.texts = 0;\n        if (this.stack.length > 0)\n          this.stack[this.stack.length-1].containsTag = true;\n\n        this.stack.push({\n            name: name,\n            tags: this.tags\n        });\n        if (this.started_write) this.indenter();\n        this.write('<', name);\n        this.startAttributes();\n        this.started_write = true;\n        return this;\n    },\n    startElementNS : function (prefix, name, uri) {\n        prefix = strval(prefix);\n        name = strval(name);\n\n        if (!prefix.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.attributes) this.endAttributes();\n        ++this.tags;\n        this.texts = 0;\n        if (this.stack.length > 0)\n          this.stack[this.stack.length-1].containsTag = true;\n\n        this.stack.push({\n            name: prefix + ':' + name,\n            tags: this.tags\n        });\n        if (this.started_write) this.indenter();\n        this.write('<', prefix + ':' + name);\n        this.startAttributes();\n        this.started_write = true;\n        return this;\n    },\n\n    endElement : function () {\n        if (!this.tags) return this;\n        var t = this.stack.pop();\n        if (this.attributes > 0) {\n            if (this.attribute) {\n                if (this.texts) this.endAttribute();\n                this.endAttribute();\n            }\n            this.write('/');\n            this.endAttributes();\n        } else {\n            if (t.containsTag) this.indenter();\n            this.write('</', t.name, '>');\n        }\n        --this.tags;\n        this.texts = 0;\n        return this;\n    },\n\n    writeAttribute : function (name, content) {\n        if (typeof content == 'function') {\n          content = content();\n        }\n        if (isFalse(content)) {\n           return this;\n        }\n        return this.startAttribute(name).text(content).endAttribute();\n    },\n    writeAttributeNS : function (prefix, name, uri, content) {\n        if (!content) {\n            content = uri;\n        }\n        if (typeof content == 'function') {\n          content = content();\n        }\n        if (isFalse(content)) {\n          return this;\n        }\n        return this.startAttributeNS(prefix, name, uri).text(content).endAttribute();\n    },\n\n    startAttributes : function () {\n        this.attributes = 1;\n        return this;\n    },\n\n    endAttributes : function () {\n        if (!this.attributes) return this;\n        if (this.attribute) this.endAttribute();\n        this.attributes = 0;\n        this.attribute = 0;\n        this.texts = 0;\n        this.write('>');\n        return this;\n    },\n\n    startAttribute : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!this.attributes && !this.pi) return this;\n        if (this.attribute) return this;\n        this.attribute = 1;\n        this.write(' ', name, '=\"');\n        return this;\n    },\n    startAttributeNS : function (prefix, name, uri) {\n        prefix = strval(prefix);\n        name = strval(name);\n\n        if (!prefix.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (!this.attributes && !this.pi) return this;\n        if (this.attribute) return this;\n        this.attribute = 1;\n        this.write(' ', prefix + ':' + name, '=\"');\n        return this;\n    },\n    endAttribute : function () {\n        if (!this.attribute) return this;\n        this.attribute = 0;\n        this.texts = 0;\n        this.write('\"');\n        return this;\n    },\n\n    text : function (content) {\n        content = strval(content);\n        if (!this.tags && !this.comment && !this.pi && !this.cdata) return this;\n        if (this.attributes && this.attribute) {\n            ++this.texts;\n            this.write(content\n                       .replace(/&/g, '&amp;')\n                       .replace(/</g, '&lt;')\n                       .replace(/\"/g, '&quot;')\n                       .replace(/\\t/g, '&#x9;')\n                       .replace(/\\n/g, '&#xA;')\n                       .replace(/\\r/g, '&#xD;')\n                      );\n            return this;\n        } else if (this.attributes && !this.attribute) {\n            this.endAttributes();\n        }\n        if (this.comment || this.cdata) {\n            this.write(content);\n        }\n        else {\n          this.write(content.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;'));\n        }\n        ++this.texts;\n        this.started_write = true;\n        return this;\n    },\n\n    writeComment : function (content) {\n        return this.startComment().text(content).endComment();\n    },\n\n    startComment : function () {\n        if (this.comment) return this;\n        if (this.attributes) this.endAttributes();\n        this.indenter();\n        this.write('<!--');\n        this.comment = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endComment : function () {\n        if (!this.comment) return this;\n        this.write('-->');\n        this.comment = 0;\n        return this;\n    },\n\n    writeDocType : function (name, pubid, sysid, subset) {\n        return this.startDocType(name, pubid, sysid, subset).endDocType()\n    },\n\n    startDocType : function (name, pubid, sysid, subset) {\n        if (this.dtd || this.tags) return this;\n\n        name = strval(name);\n        pubid = pubid ? strval(pubid) : pubid;\n        sysid = sysid ? strval(sysid) : sysid;\n        subset = subset ? strval(subset) : subset;\n\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (pubid && !pubid.match(/^[\\w\\-][\\w\\s\\-\\/\\+\\:\\.]*/)) throw Error('Invalid Parameter');\n        if (sysid && !sysid.match(/^[\\w\\.][\\w\\-\\/\\\\\\:\\.]*/)) throw Error('Invalid Parameter');\n        if (subset && !subset.match(/[\\w\\s\\<\\>\\+\\.\\!\\#\\-\\?\\*\\,\\(\\)\\|]*/)) throw Error('Invalid Parameter');\n\n        pubid = pubid ? ' PUBLIC \"' + pubid + '\"' : (sysid) ? ' SYSTEM' : '';\n        sysid = sysid ? ' \"' + sysid + '\"' : '';\n        subset = subset ? ' [' + subset + ']': '';\n\n        if (this.started_write) this.indenter();\n        this.write('<!DOCTYPE ', name, pubid, sysid, subset);\n        this.root = name;\n        this.dtd = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endDocType : function () {\n        if (!this.dtd) return this;\n        this.write('>');\n        return this;\n    },\n\n    writePI : function (name, content) {\n        return this.startPI(name).text(content).endPI()\n    },\n\n    startPI : function (name) {\n        name = strval(name);\n        if (!name.match(this.name_regex)) throw Error('Invalid Parameter');\n        if (this.pi) return this;\n        if (this.attributes) this.endAttributes();\n        if (this.started_write) this.indenter();\n        this.write('<?', name);\n        this.pi = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endPI : function () {\n        if (!this.pi) return this;\n        this.write('?>');\n        this.pi = 0;\n        return this;\n    },\n\n    writeCData : function (content) {\n        return this.startCData().text(content).endCData();\n    },\n\n    startCData : function () {\n        if (this.cdata) return this;\n        if (this.attributes) this.endAttributes();\n        this.indenter();\n        this.write('<![CDATA[');\n        this.cdata = 1;\n        this.started_write = true;\n        return this;\n    },\n\n    endCData : function () {\n        if (!this.cdata) return this;\n        this.write(']]>');\n        this.cdata = 0;\n        return this;\n    },\n\n    writeRaw : function(content) {\n        content = strval(content);\n        if (!this.tags && !this.comment && !this.pi && !this.cdata) return this;\n        if (this.attributes && this.attribute) {\n            ++this.texts;\n            this.write(content.replace('&', '&amp;').replace('\"', '&quot;'));\n            return this;\n        } else if (this.attributes && !this.attribute) {\n            this.endAttributes();\n        }\n        ++this.texts;\n        this.write(content);\n        this.started_write = true;\n        return this;\n    }\n\n}\n\nmodule.exports = XMLWriter;\n","module.exports = require('./lib/xml-writer.js');\n","/* eslint no-self-compare: 0 */\n/**\n * Graphology Common GEXF Writer\n * ==============================\n *\n * GEXF writer working for both node.js & the browser.\n */\nvar isGraph = require('graphology-utils/is-graph'),\n  inferType = require('graphology-utils/infer-type'),\n  XMLWriter = require('xml-writer'),\n  sanitizeTagName = require('./helpers.js').sanitizeTagName;\n\n// TODO: handle object in color, position with object for viz\n\n/**\n * Constants.\n */\nvar GEXF_NAMESPACE = 'http://www.gexf.net/1.2draft',\n  GEXF_VIZ_NAMESPACE = 'http:///www.gexf.net/1.1draft/viz';\n\nvar VIZ_RESERVED_NAMES = new Set([\n  'color',\n  'size',\n  'x',\n  'y',\n  'z',\n  'shape',\n  'thickness'\n]);\n\nvar RGBA_TEST = /^\\s*rgba?\\s*\\(/i,\n  RGBA_MATCH =\n    /^\\s*rgba?\\s*\\(\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*,\\s*([0-9]*)\\s*(?:,\\s*([.0-9]*))?\\)\\s*$/;\n\n/**\n * Function used to transform a CSS color into a RGBA object.\n *\n * @param  {string} value - Target value.\n * @return {object}\n */\nfunction CSSColorToRGBA(value) {\n  if (!value || typeof value !== 'string') return {};\n\n  if (value[0] === '#') {\n    value = value.slice(1);\n\n    return value.length === 3\n      ? {\n          r: parseInt(value[0] + value[0], 16),\n          g: parseInt(value[1] + value[1], 16),\n          b: parseInt(value[2] + value[2], 16)\n        }\n      : {\n          r: parseInt(value[0] + value[1], 16),\n          g: parseInt(value[2] + value[3], 16),\n          b: parseInt(value[4] + value[5], 16)\n        };\n  } else if (RGBA_TEST.test(value)) {\n    var result = {};\n\n    value = value.match(RGBA_MATCH);\n    result.r = +value[1];\n    result.g = +value[2];\n    result.b = +value[3];\n\n    if (value[4]) result.a = +value[4];\n\n    return result;\n  }\n\n  return {};\n}\n\n/**\n * Function used to map an element's attributes to a standardized map of\n * GEXF expected properties (label, viz, attributes).\n *\n * @param  {string} type       - The element's type.\n * @param  {string} key        - The element's key.\n * @param  {object} attributes - The element's attributes.\n * @return {object}\n */\nfunction DEFAULT_ELEMENT_FORMATTER(type, key, attributes) {\n  var output = {},\n    name;\n\n  for (name in attributes) {\n    if (name === 'label') {\n      output.label = attributes.label;\n    } else if (type === 'edge' && name === 'weight') {\n      output.weight = attributes.weight;\n    } else if (VIZ_RESERVED_NAMES.has(name)) {\n      output.viz = output.viz || {};\n      output.viz[name] = attributes[name];\n    } else {\n      output.attributes = output.attributes || {};\n      output.attributes[name] = attributes[name];\n    }\n  }\n\n  return output;\n}\n\nvar DEFAULT_NODE_FORMATTER = DEFAULT_ELEMENT_FORMATTER.bind(null, 'node'),\n  DEFAULT_EDGE_FORMATTER = DEFAULT_ELEMENT_FORMATTER.bind(null, 'edge');\n\n/**\n * Function used to check whether the given integer is 32 bits or not.\n *\n * @param  {number} number - Target number.\n * @return {boolean}\n */\nfunction is32BitInteger(number) {\n  return number <= 0x7fffffff && number >= -0x7fffffff;\n}\n\n/**\n * Function used to check whether the given value is \"empty\".\n *\n * @param  {any} value - Target value.\n * @return {boolean}\n */\nfunction isEmptyValue(value) {\n  return (\n    typeof value === 'undefined' ||\n    value === null ||\n    value === '' ||\n    value !== value\n  );\n}\n\n/**\n * Function used to detect a JavaScript's value type in the GEXF model.\n *\n * @param  {any}    value - Target value.\n * @return {string}\n */\nfunction detectValueType(value) {\n  if (isEmptyValue(value)) return 'empty';\n\n  if (Array.isArray(value)) return 'liststring';\n\n  if (typeof value === 'boolean') return 'boolean';\n\n  if (typeof value === 'object') return 'string';\n\n  // Numbers\n  if (typeof value === 'number') {\n    // Integer\n    if (value === (value | 0)) {\n      // Long (JavaScript integer can go up to 53 bit)?\n      return is32BitInteger(value) ? 'integer' : 'long';\n    }\n\n    // JavaScript numbers are 64 bit float, hence the double\n    return 'double';\n  }\n\n  return 'string';\n}\n\n/**\n * Function used to cast the given value into the given type.\n *\n * @param  {string} type  - Target type.\n * @param  {any}    value - Value to cast.\n * @return {string}\n */\nfunction cast(type, value) {\n  if (type === 'liststring' && Array.isArray(value)) return value.join('|');\n  return '' + value;\n}\n\n/**\n * Function used to collect data from a graph's nodes.\n *\n * @param  {Graph}    graph   - Target graph.\n * @param  {function} format  - Function formatting the nodes attributes.\n * @return {array}\n */\nfunction collectNodeData(graph, format) {\n  var nodes = new Array(graph.order);\n  var i = 0;\n\n  graph.forEachNode(function (node, attr) {\n    var data = format(node, attr);\n    data.key = node;\n    nodes[i++] = data;\n  });\n\n  return nodes;\n}\n\n/**\n * Function used to collect data from a graph's edges.\n *\n * @param  {Graph}    graph   - Target graph.\n * @param  {function} reducer - Function reducing the edges attributes.\n * @return {array}\n */\nfunction collectEdgeData(graph, reducer) {\n  var edges = new Array(graph.size);\n  var i = 0;\n\n  graph.forEachEdge(function (\n    edge,\n    attr,\n    source,\n    target,\n    _sa,\n    _ta,\n    undirected\n  ) {\n    var data = reducer(edge, attr);\n    data.key = edge;\n    data.source = source;\n    data.target = target;\n    data.undirected = undirected;\n    edges[i++] = data;\n  });\n\n  return edges;\n}\n\n/**\n * Function used to infer the model of the graph's nodes or edges.\n *\n * @param  {array} elements - The graph's relevant elements.\n * @return {array}\n */\n\n// TODO: on large graph, we could also sample or let the user indicate the types\nfunction inferModel(elements) {\n  var model = {},\n    attributes,\n    type,\n    k;\n\n  // Testing every attributes\n  for (var i = 0, l = elements.length; i < l; i++) {\n    attributes = elements[i].attributes;\n\n    if (!attributes) continue;\n\n    for (k in attributes) {\n      type = detectValueType(attributes[k]);\n\n      if (type === 'empty') continue;\n\n      if (!model[k]) model[k] = type;\n      else {\n        if (model[k] === 'integer' && type === 'long') model[k] = type;\n        else if (model[k] !== type) model[k] = 'string';\n      }\n    }\n  }\n\n  // TODO: check default values\n  return model;\n}\n\n/**\n * Function used to write a model.\n *\n * @param {XMLWriter} writer     - The writer to use.\n * @param {object}    model      - Model to write.\n * @param {string}    modelClass - Class of the model.\n */\nfunction writeModel(writer, model, modelClass) {\n  var name;\n\n  if (!Object.keys(model).length) return;\n\n  writer.startElement('attributes');\n  writer.writeAttribute('class', modelClass);\n\n  for (name in model) {\n    writer.startElement('attribute');\n    writer.writeAttribute('id', name);\n    writer.writeAttribute('title', name);\n    writer.writeAttribute('type', model[name]);\n    writer.endElement();\n  }\n\n  writer.endElement();\n}\n\nfunction writeElements(writer, type, model, elements) {\n  var emptyModel = !Object.keys(model).length,\n    element,\n    name,\n    color,\n    value,\n    edgeType,\n    attributes,\n    weight,\n    viz,\n    k,\n    i,\n    l;\n\n  writer.startElement(type + 's');\n\n  for (i = 0, l = elements.length; i < l; i++) {\n    element = elements[i];\n    attributes = element.attributes;\n    viz = element.viz;\n\n    writer.startElement(type);\n    writer.writeAttribute('id', element.key);\n\n    if (type === 'edge') {\n      edgeType = element.undirected ? 'undirected' : 'directed';\n\n      if (edgeType !== writer.defaultEdgeType)\n        writer.writeAttribute('type', edgeType);\n\n      writer.writeAttribute('source', element.source);\n      writer.writeAttribute('target', element.target);\n\n      weight = element.weight;\n\n      if (\n        (typeof weight === 'number' && !isNaN(weight)) ||\n        typeof weight === 'string'\n      )\n        writer.writeAttribute('weight', element.weight);\n    }\n\n    if (element.label) writer.writeAttribute('label', element.label);\n\n    if (!emptyModel && attributes) {\n      writer.startElement('attvalues');\n\n      for (name in model) {\n        if (name in attributes) {\n          value = attributes[name];\n\n          if (isEmptyValue(value)) continue;\n\n          writer.startElement('attvalue');\n          writer.writeAttribute('for', name);\n          writer.writeAttribute('value', cast(model[name], value));\n          writer.endElement();\n        }\n      }\n\n      writer.endElement();\n    }\n\n    if (viz) {\n      //-- 1) Color\n      if (viz.color) {\n        color = CSSColorToRGBA(viz.color);\n\n        writer.startElementNS('viz', 'color');\n\n        for (k in color) writer.writeAttribute(k, color[k]);\n\n        writer.endElement();\n      }\n\n      //-- 2) Size\n      if ('size' in viz) {\n        writer.startElementNS('viz', 'size');\n        writer.writeAttribute('value', viz.size);\n        writer.endElement();\n      }\n\n      //-- 3) Position\n      if ('x' in viz || 'y' in viz || 'z' in viz) {\n        writer.startElementNS('viz', 'position');\n\n        if ('x' in viz) writer.writeAttribute('x', viz.x);\n\n        if ('y' in viz) writer.writeAttribute('y', viz.y);\n\n        if ('z' in viz) writer.writeAttribute('z', viz.z);\n\n        writer.endElement();\n      }\n\n      //-- 4) Shape\n      if (viz.shape) {\n        writer.startElementNS('viz', 'shape');\n        writer.writeAttribute('value', viz.shape);\n        writer.endElement();\n      }\n\n      //-- 5) Thickness\n      if ('thickness' in viz) {\n        writer.startElementNS('viz', 'thickness');\n        writer.writeAttribute('value', viz.thickness);\n        writer.endElement();\n      }\n    }\n\n    writer.endElement();\n  }\n\n  writer.endElement();\n}\n\n/**\n * Defaults.\n */\nvar DEFAULTS = {\n  encoding: 'UTF-8',\n  pretty: true,\n  formatNode: DEFAULT_NODE_FORMATTER,\n  formatEdge: DEFAULT_EDGE_FORMATTER\n};\n\n/**\n * Function taking a graphology instance & outputting a gexf string.\n *\n * @param  {Graph}  graph        - Target graphology instance.\n * @param  {object} options      - Options:\n * @param  {string}   [encoding]   - Character encoding.\n * @param  {boolean}  [pretty]     - Whether to pretty print output.\n * @param  {function} [formatNode] - Function formatting nodes' output.\n * @param  {function} [formatEdge] - Function formatting edges' output.\n * @return {string}              - GEXF string.\n */\nmodule.exports = function write(graph, options) {\n  if (!isGraph(graph))\n    throw new Error('graphology-gexf/writer: invalid graphology instance.');\n\n  options = options || {};\n\n  var indent = options.pretty === false ? false : '  ';\n\n  var formatNode = options.formatNode || DEFAULTS.formatNode,\n    formatEdge = options.formatEdge || DEFAULTS.formatEdge;\n\n  var writer = new XMLWriter(indent);\n\n  writer.startDocument('1.0', options.encoding || DEFAULTS.encoding);\n\n  // Starting gexf\n  writer.startElement('gexf');\n  writer.writeAttribute('version', '1.2');\n  writer.writeAttribute('xmlns', GEXF_NAMESPACE);\n  writer.writeAttribute('xmlns:viz', GEXF_VIZ_NAMESPACE);\n\n  // Processing meta\n  writer.startElement('meta');\n  var graphAttributes = graph.getAttributes();\n\n  if (graphAttributes.lastModifiedDate)\n    writer.writeAttribute('lastmodifieddate', graphAttributes.lastModifiedDate);\n\n  var metaTagName;\n\n  for (var k in graphAttributes) {\n    if (k === 'lastModifiedDate') continue;\n\n    metaTagName = sanitizeTagName(k);\n\n    if (!metaTagName) continue;\n\n    writer.writeElement(metaTagName, graphAttributes[k]);\n  }\n\n  writer.endElement();\n  writer.startElement('graph');\n\n  var type = inferType(graph);\n\n  writer.defaultEdgeType = type === 'mixed' ? 'directed' : type;\n\n  writer.writeAttribute('defaultedgetype', writer.defaultEdgeType);\n\n  // Processing model\n  var nodes = collectNodeData(graph, formatNode),\n    edges = collectEdgeData(graph, formatEdge);\n\n  var nodeModel = inferModel(nodes);\n\n  writeModel(writer, nodeModel, 'node');\n\n  var edgeModel = inferModel(edges);\n\n  writeModel(writer, edgeModel, 'edge');\n\n  // Processing nodes\n  writeElements(writer, 'node', nodeModel, nodes);\n\n  // Processing edges\n  writeElements(writer, 'edge', edgeModel, edges);\n\n  return writer.toString();\n};\n","/**\n * Graphology Browser GEXF Endpoint\n * =================================\n *\n * Endpoint gathering both parser & writer for the browser.\n */\nexports.parse = require('./parser.js');\nexports.write = require('../common/writer.js');\n","/**\n * Graphology GRAPHML Defaults\n * ============================\n *\n * Sane defaults for the library.\n */\nfunction byteToHex(b) {\n  return ('0' + (b | 0).toString(16)).slice(-2);\n}\n\nfunction rgbToHex(r, g, b) {\n  return '#' + byteToHex(r) + byteToHex(g) + byteToHex(b);\n}\n\nfunction omitRgb(o) {\n  var t = {};\n\n  for (var k in o) {\n    if (k === 'r' || k === 'g' || k === 'b') continue;\n    t[k] = o[k];\n  }\n\n  return t;\n}\n\nfunction DEFAULT_FORMATTER(attr) {\n  var newAttr;\n\n  // Converting color\n  if (\n    typeof attr.r === 'number' &&\n    typeof attr.g === 'number' &&\n    typeof attr.b === 'number'\n  ) {\n    newAttr = omitRgb(attr);\n    newAttr.color = rgbToHex(attr.r, attr.g, attr.b);\n\n    return newAttr;\n  }\n\n  return attr;\n}\n\nexports.DEFAULT_FORMATTER = DEFAULT_FORMATTER;\n","/**\n * Graphology GRAPHML Parser\n * ==========================\n *\n * graphology GRAPHML parser using DOMParser to function.\n */\nvar isGraphConstructor = require('graphology-utils/is-graph-constructor');\nvar mergeEdge = require('graphology-utils/add-edge').mergeEdge;\n\nvar DEFAULTS = require('./defaults.js');\nvar DEFAULT_FORMATTER = DEFAULTS.DEFAULT_FORMATTER;\n\nfunction numericCaster(v) {\n  return +v;\n}\n\nfunction identity(v) {\n  return v;\n}\n\nvar CASTERS = {\n  boolean: function (v) {\n    return v.toLowerCase() === 'true';\n  },\n  int: numericCaster,\n  long: numericCaster,\n  float: numericCaster,\n  double: numericCaster,\n  string: identity\n};\n\nfunction getGraphDataElements(graphElement) {\n  var children = graphElement.childNodes;\n  var dataElements = [];\n\n  var element;\n\n  for (var i = 0, l = children.length; i < l; i++) {\n    element = children[i];\n\n    if (element.nodeType !== 1) continue;\n\n    if (element.tagName.toLowerCase() !== 'data') break;\n\n    dataElements.push(element);\n  }\n\n  return dataElements;\n}\n\nfunction collectModel(modelElements) {\n  var i, l, m, id, name, type, element, defaultElement, defaultValue;\n\n  var models = {\n    graph: {},\n    node: {},\n    edge: {}\n  };\n\n  var defaults = {\n    graph: {},\n    node: {},\n    edge: {}\n  };\n\n  for (i = 0, l = modelElements.length; i < l; i++) {\n    element = modelElements[i];\n    m = element.getAttribute('for') || 'node';\n    id = element.getAttribute('id');\n    name = element.getAttribute('attr.name');\n    type = element.getAttribute('attr.type') || 'string';\n\n    defaultValue = undefined;\n    defaultElement = element.getElementsByTagName('default');\n\n    if (defaultElement.length !== 0)\n      defaultValue = defaultElement[0].textContent;\n\n    models[m][id] = {\n      name: name,\n      cast: CASTERS[type]\n    };\n\n    if (typeof defaultValue !== 'undefined') defaults[m][name] = defaultValue;\n  }\n\n  return {\n    models: models,\n    defaults: defaults\n  };\n}\n\nfunction collectAttributes(model, defaults, element) {\n  var dataElements = element.getElementsByTagName('data'),\n    dataElement;\n\n  var i, l, key, spec;\n\n  var attr = {};\n\n  for (i = 0, l = dataElements.length; i < l; i++) {\n    dataElement = dataElements[i];\n    key = dataElement.getAttribute('key');\n    spec = model[key];\n\n    if (typeof spec === 'undefined') attr[key] = dataElement.textContent;\n    else attr[spec.name] = spec.cast(dataElement.textContent);\n  }\n\n  for (key in defaults) {\n    if (!(key in attr)) attr[key] = defaults[key];\n  }\n\n  return attr;\n}\n\n/**\n * Factory taking implementations of `DOMParser` & `Document` returning\n * the parser function.\n */\nmodule.exports = function createParserFunction(DOMParser, Document) {\n  /**\n   * Function taking either a string or a document and returning a\n   * graphology instance.\n   *\n   * @param {function}        Graph   - A graphology constructor.\n   * @param {string|Document} source  - The source to parse.\n   * @param {object}          options - Parsing options.\n   */\n  return function parse(Graph, source, options) {\n    options = options || {};\n\n    var addMissingNodes = options.addMissingNodes === true;\n    var mergeResult;\n\n    var xmlDoc = source;\n\n    if (!isGraphConstructor(Graph))\n      throw new Error('graphology-graphml/parser: invalid Graph constructor.');\n\n    // If source is a string, we are going to parse it\n    if (typeof source === 'string')\n      xmlDoc = new DOMParser().parseFromString(source, 'application/xml');\n\n    if (!(xmlDoc instanceof Document))\n      throw new Error(\n        'graphology-gexf/parser: source should either be a XML document or a string.'\n      );\n\n    var GRAPH_ELEMENT = xmlDoc.getElementsByTagName('graph')[0];\n    var GRAPH_DATA_ELEMENTS = getGraphDataElements(GRAPH_ELEMENT);\n    var MODEL_ELEMENTS = xmlDoc.getElementsByTagName('key');\n    var NODE_ELEMENTS = xmlDoc.getElementsByTagName('node');\n    var EDGE_ELEMENTS = xmlDoc.getElementsByTagName('edge');\n    var EDGE_DEFAULT_TYPE =\n      GRAPH_ELEMENT.getAttribute('edgedefault') || 'undirected';\n\n    var MODEL = collectModel(MODEL_ELEMENTS);\n\n    var graph = new Graph({type: EDGE_DEFAULT_TYPE});\n\n    // Graph-level attributes\n    var graphId = GRAPH_ELEMENT.getAttribute('id');\n\n    if (graphId) graph.setAttribute('id', graphId);\n\n    var dummyGraphElement = xmlDoc.createElement('graph');\n    GRAPH_DATA_ELEMENTS.forEach(function (el) {\n      dummyGraphElement.appendChild(el);\n    });\n    var graphAttributes = collectAttributes(\n      MODEL.models.graph,\n      MODEL.defaults.graph,\n      dummyGraphElement\n    );\n\n    graph.mergeAttributes(graphAttributes);\n\n    // Collecting nodes\n    var i, l, nodeElement, id, attr;\n\n    for (i = 0, l = NODE_ELEMENTS.length; i < l; i++) {\n      nodeElement = NODE_ELEMENTS[i];\n      id = nodeElement.getAttribute('id');\n\n      attr = collectAttributes(\n        MODEL.models.node,\n        MODEL.defaults.node,\n        nodeElement\n      );\n      attr = DEFAULT_FORMATTER(attr);\n\n      graph.addNode(id, attr);\n    }\n\n    // Collecting edges\n    var edgeElement, s, t, type;\n\n    for (i = 0, l = EDGE_ELEMENTS.length; i < l; i++) {\n      edgeElement = EDGE_ELEMENTS[i];\n      id = edgeElement.getAttribute('id');\n      s = edgeElement.getAttribute('source');\n      t = edgeElement.getAttribute('target');\n      type =\n        edgeElement.getAttribute('directed') === 'true'\n          ? 'directed'\n          : EDGE_DEFAULT_TYPE;\n\n      attr = collectAttributes(\n        MODEL.models.edge,\n        MODEL.defaults.edge,\n        edgeElement\n      );\n      attr = DEFAULT_FORMATTER(attr);\n\n      // Should we upgrade to a mixed graph?\n      if (!graph.type !== 'mixed' && type !== graph.type)\n        graph.upgradeToMixed();\n\n      // Should we upgrade to a multi graph?\n      if (!graph.multi) {\n        if (type === 'undirected') {\n          if (graph.hasUndirectedEdge(s, t)) graph.upgradeToMulti();\n        } else if (graph.hasDirectedEdge(s, t)) graph.upgradeToMulti();\n      }\n\n      mergeResult = mergeEdge(\n        graph,\n        type === 'undirected',\n        id ? id : null,\n        s,\n        t,\n        attr\n      );\n\n      if (!addMissingNodes && (mergeResult[2] || mergeResult[3])) {\n        throw new Error(\n          'graphology-graphml/parser: one of your graphml file edges points to an inexisting node. Set the parser `addMissingNodes` option to `true` if you do not care.'\n        );\n      }\n    }\n\n    return graph;\n  };\n};\n","/**\n * Graphology Browser GRAPHML Parser\n * ==================================\n *\n * Browser version of the graphology GRAPHML parser.\n */\nvar createParserFunction = require('../common/parser.js');\n\nmodule.exports = createParserFunction(DOMParser, Document);\n","/**\n * Graphology Browser GRAPHML Endpoint\n * ====================================\n *\n * Endpoint gathering both parser & writer for the browser.\n */\nexports.parse = require('./parser.js');\n","/**\n * Graphology Standard Library\n * ============================\n *\n * Library endpoint for the browser.\n */\nexports.assertions = require('./assertions');\nexports.communitiesLouvain = require('./communities-louvain');\nexports.components = require('./components');\nexports.generators = require('./generators');\nexports.layout = require('./layout');\nexports.layoutForce = require('./layout-force');\nexports.layoutForceAtlas2 = require('./layout-forceatlas2');\nexports.layoutNoverlap = require('./layout-noverlap');\nexports.metrics = require('./metrics');\nexports.operators = require('./operators');\nexports.shortestPath = require('./shortest-path');\nexports.simplePath = require('./simple-path');\nexports.traversal = require('./traversal');\nexports.utils = require('./utils');\n\n// Browser specific\nexports.ForceLayout = require('graphology-layout-force/worker');\nexports.FA2Layout = require('graphology-layout-forceatlas2/worker');\nexports.NoverlapLayout = require('graphology-layout-noverlap/worker');\nexports.gexf = require('graphology-gexf/browser');\nexports.graphml = require('graphology-graphml/browser');\n"],"names":["isGraph","isGraphConstructor","require$$0","require$$1","require$$2","assertions","resolveDefaults","defaults","inferType","Iterator","getPointerArray","SparseMap","SparseQueueSet","createRandomIndex","createNodeValueGetter","createEdgeValueGetter","typed","createEdgeWeightGetter","DEFAULTS","UndirectedLouvainIndex","DirectedLouvainIndex","require$$3","require$$4","require$$5","require$$6","communitiesLouvain","DFSStack","copyNode","copyEdge","components","empty","simpleSize","density","mergeStar","generators","createRandom","random","layout","layoutForce","NODE_X","NODE_Y","NODE_SIZE","PPN","PPE","iterate","helpers","DEFAULT_SETTINGS","abstractSynchronousLayout","synchronousLayout","layoutForceatlas2","layoutNoverlap","forEach","iterables","FixedDeque","FixedStack","DEFAULT_COMPARATOR","reverseComparator","createTupleComparator","comparators","siftUp","consume","Heap","NeighborhoodIndex","WeightedNeighborhoodIndex","BRANDES_DIJKSTRA_HEAP_COMPARATOR","SparseSet","intersectionSize","Queue","extend","singleSourceLength","undirectedSingleSourceLength","brandes","eccentricity","DEFAULT_WEIGHT_ATTRIBUTE","euclideanDistance","FixedReverseHeap","inplaceQuickSortIndices","KDTree","metrics","toMixed","toMulti","require$$7","require$$8","operators","utils","shortestPath","simplePath","BFSQueue","TraversalRecord","capitalize","traversal","require$$9","worker","webworker","workerFunction","mergeEdge","cast","collectAttributes","parser","createParserFunction","XMLWriter","xmlWriter","DEFAULT_FORMATTER","require$$10","require$$11","require$$12","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18"],"mappings":"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"}